[DEBUG|2023-12-07 09:15:17,593|selector_events.py:54]: Using selector: EpollSelector
[ERROR|2023-12-07 09:15:17,600|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 541, in _sock_connect_cb
ConnectionRefusedError: [Errno 111] Connect call failed ('10.10.100.56', 6767)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Connect call failed ('10.10.100.56', 6767)]

[ERROR|2023-12-07 09:15:20,595|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:15:20,596|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:15:22,644|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 541, in _sock_connect_cb
ConnectionRefusedError: [Errno 111] Connect call failed ('10.10.100.56', 6767)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Connect call failed ('10.10.100.56', 6767)]

[ERROR|2023-12-07 09:15:23,599|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:15:23,599|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:15:26,602|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:15:26,603|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:15:27,649|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 541, in _sock_connect_cb
ConnectionRefusedError: [Errno 111] Connect call failed ('10.10.100.56', 6767)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Connect call failed ('10.10.100.56', 6767)]

[ERROR|2023-12-07 09:15:29,606|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:15:29,606|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:15:32,609|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:15:32,609|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:15:32,655|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 541, in _sock_connect_cb
ConnectionRefusedError: [Errno 111] Connect call failed ('10.10.100.56', 6767)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Connect call failed ('10.10.100.56', 6767)]

[ERROR|2023-12-07 09:15:35,612|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:15:35,612|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:15:37,660|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 541, in _sock_connect_cb
ConnectionRefusedError: [Errno 111] Connect call failed ('10.10.100.56', 6767)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Connect call failed ('10.10.100.56', 6767)]

[ERROR|2023-12-07 09:15:38,616|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:15:38,616|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:15:41,618|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:15:41,618|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:15:42,669|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 541, in _sock_connect_cb
ConnectionRefusedError: [Errno 111] Connect call failed ('10.10.100.56', 6767)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Connect call failed ('10.10.100.56', 6767)]

[ERROR|2023-12-07 09:15:44,621|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:15:44,622|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:15:47,625|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:15:47,626|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:15:47,675|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 541, in _sock_connect_cb
ConnectionRefusedError: [Errno 111] Connect call failed ('10.10.100.56', 6767)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Connect call failed ('10.10.100.56', 6767)]

[ERROR|2023-12-07 09:15:50,629|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:15:50,629|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:15:52,682|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 541, in _sock_connect_cb
ConnectionRefusedError: [Errno 111] Connect call failed ('10.10.100.56', 6767)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Connect call failed ('10.10.100.56', 6767)]

[ERROR|2023-12-07 09:15:53,633|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:15:53,633|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:15:56,635|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:15:56,635|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:15:57,686|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 541, in _sock_connect_cb
ConnectionRefusedError: [Errno 111] Connect call failed ('10.10.100.56', 6767)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Connect call failed ('10.10.100.56', 6767)]

[ERROR|2023-12-07 09:15:59,638|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:15:59,638|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:16:02,640|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:16:02,641|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:16:02,690|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 541, in _sock_connect_cb
ConnectionRefusedError: [Errno 111] Connect call failed ('10.10.100.56', 6767)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Connect call failed ('10.10.100.56', 6767)]

[ERROR|2023-12-07 09:16:05,645|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:16:05,646|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:16:07,695|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 541, in _sock_connect_cb
ConnectionRefusedError: [Errno 111] Connect call failed ('10.10.100.56', 6767)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Connect call failed ('10.10.100.56', 6767)]

[ERROR|2023-12-07 09:16:08,650|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:16:08,650|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:16:11,654|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:16:11,654|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:16:12,700|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 541, in _sock_connect_cb
ConnectionRefusedError: [Errno 111] Connect call failed ('10.10.100.56', 6767)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Connect call failed ('10.10.100.56', 6767)]

[ERROR|2023-12-07 09:16:14,657|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:16:14,657|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:16:17,661|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:16:17,661|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:16:17,706|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 541, in _sock_connect_cb
ConnectionRefusedError: [Errno 111] Connect call failed ('10.10.100.56', 6767)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Connect call failed ('10.10.100.56', 6767)]

[ERROR|2023-12-07 09:16:20,665|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:16:20,665|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:16:22,712|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 541, in _sock_connect_cb
ConnectionRefusedError: [Errno 111] Connect call failed ('10.10.100.56', 6767)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Connect call failed ('10.10.100.56', 6767)]

[ERROR|2023-12-07 09:16:23,669|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:16:23,669|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:16:26,672|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:16:26,672|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:16:27,716|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 541, in _sock_connect_cb
ConnectionRefusedError: [Errno 111] Connect call failed ('10.10.100.56', 6767)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Connect call failed ('10.10.100.56', 6767)]

[ERROR|2023-12-07 09:16:29,675|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:16:29,675|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:16:32,678|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:16:32,678|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:16:32,731|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 541, in _sock_connect_cb
ConnectionRefusedError: [Errno 111] Connect call failed ('10.10.100.56', 6767)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Connect call failed ('10.10.100.56', 6767)]

[ERROR|2023-12-07 09:16:35,682|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:16:35,683|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:16:37,738|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 541, in _sock_connect_cb
ConnectionRefusedError: [Errno 111] Connect call failed ('10.10.100.56', 6767)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Connect call failed ('10.10.100.56', 6767)]

[ERROR|2023-12-07 09:16:38,687|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:16:38,687|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:16:41,692|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:16:41,692|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:16:42,752|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 541, in _sock_connect_cb
ConnectionRefusedError: [Errno 111] Connect call failed ('10.10.100.56', 6767)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Connect call failed ('10.10.100.56', 6767)]

[ERROR|2023-12-07 09:16:44,695|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:16:44,696|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:16:47,699|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:16:47,699|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:16:47,771|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 541, in _sock_connect_cb
ConnectionRefusedError: [Errno 111] Connect call failed ('10.10.100.56', 6767)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Connect call failed ('10.10.100.56', 6767)]

[ERROR|2023-12-07 09:16:50,702|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:16:50,703|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:16:52,780|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 541, in _sock_connect_cb
ConnectionRefusedError: [Errno 111] Connect call failed ('10.10.100.56', 6767)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Connect call failed ('10.10.100.56', 6767)]

[ERROR|2023-12-07 09:16:53,706|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:16:53,706|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:16:56,709|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:16:56,709|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:16:57,790|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 541, in _sock_connect_cb
ConnectionRefusedError: [Errno 111] Connect call failed ('10.10.100.56', 6767)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Connect call failed ('10.10.100.56', 6767)]

[ERROR|2023-12-07 09:16:59,712|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:16:59,713|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:17:02,716|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:17:02,716|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:17:02,802|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 541, in _sock_connect_cb
ConnectionRefusedError: [Errno 111] Connect call failed ('10.10.100.56', 6767)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Connect call failed ('10.10.100.56', 6767)]

[ERROR|2023-12-07 09:17:05,719|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:17:05,720|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:17:07,810|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 541, in _sock_connect_cb
ConnectionRefusedError: [Errno 111] Connect call failed ('10.10.100.56', 6767)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Connect call failed ('10.10.100.56', 6767)]

[ERROR|2023-12-07 09:17:08,722|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:17:08,723|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:17:11,726|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:17:11,726|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:17:12,815|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 541, in _sock_connect_cb
ConnectionRefusedError: [Errno 111] Connect call failed ('10.10.100.56', 6767)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Connect call failed ('10.10.100.56', 6767)]

[ERROR|2023-12-07 09:17:14,732|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:17:14,732|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:17:17,736|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:17:17,737|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:17:17,821|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 541, in _sock_connect_cb
ConnectionRefusedError: [Errno 111] Connect call failed ('10.10.100.56', 6767)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Connect call failed ('10.10.100.56', 6767)]

[ERROR|2023-12-07 09:17:20,739|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:17:20,739|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:17:22,827|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 541, in _sock_connect_cb
ConnectionRefusedError: [Errno 111] Connect call failed ('10.10.100.56', 6767)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Connect call failed ('10.10.100.56', 6767)]

[ERROR|2023-12-07 09:17:23,742|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:17:23,742|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:17:26,746|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:17:26,747|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:17:27,834|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 541, in _sock_connect_cb
ConnectionRefusedError: [Errno 111] Connect call failed ('10.10.100.56', 6767)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Connect call failed ('10.10.100.56', 6767)]

[ERROR|2023-12-07 09:17:29,748|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:17:29,749|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:17:32,752|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:17:32,753|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:17:32,839|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 541, in _sock_connect_cb
ConnectionRefusedError: [Errno 111] Connect call failed ('10.10.100.56', 6767)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Connect call failed ('10.10.100.56', 6767)]

[ERROR|2023-12-07 09:17:35,755|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:17:35,755|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:17:37,847|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 541, in _sock_connect_cb
ConnectionRefusedError: [Errno 111] Connect call failed ('10.10.100.56', 6767)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Connect call failed ('10.10.100.56', 6767)]

[ERROR|2023-12-07 09:17:38,757|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:17:38,758|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:17:41,762|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:17:41,762|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:17:42,861|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 541, in _sock_connect_cb
ConnectionRefusedError: [Errno 111] Connect call failed ('10.10.100.56', 6767)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Connect call failed ('10.10.100.56', 6767)]

[ERROR|2023-12-07 09:17:44,765|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:17:44,766|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:17:47,769|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:17:47,770|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:17:47,867|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 541, in _sock_connect_cb
ConnectionRefusedError: [Errno 111] Connect call failed ('10.10.100.56', 6767)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Connect call failed ('10.10.100.56', 6767)]

[ERROR|2023-12-07 09:17:50,775|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:17:50,775|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:17:52,882|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 541, in _sock_connect_cb
ConnectionRefusedError: [Errno 111] Connect call failed ('10.10.100.56', 6767)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Connect call failed ('10.10.100.56', 6767)]

[ERROR|2023-12-07 09:17:53,777|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:17:53,777|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:17:56,781|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:17:56,781|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:17:57,890|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 541, in _sock_connect_cb
ConnectionRefusedError: [Errno 111] Connect call failed ('10.10.100.56', 6767)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Connect call failed ('10.10.100.56', 6767)]

[ERROR|2023-12-07 09:17:59,784|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:17:59,785|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:18:02,789|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:18:02,789|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:18:02,896|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 541, in _sock_connect_cb
ConnectionRefusedError: [Errno 111] Connect call failed ('10.10.100.56', 6767)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Connect call failed ('10.10.100.56', 6767)]

[ERROR|2023-12-07 09:18:05,792|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:18:05,792|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:18:07,902|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 541, in _sock_connect_cb
ConnectionRefusedError: [Errno 111] Connect call failed ('10.10.100.56', 6767)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Connect call failed ('10.10.100.56', 6767)]

[ERROR|2023-12-07 09:18:08,796|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:18:08,796|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:18:11,800|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:18:11,800|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:18:12,912|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 541, in _sock_connect_cb
ConnectionRefusedError: [Errno 111] Connect call failed ('10.10.100.56', 6767)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Connect call failed ('10.10.100.56', 6767)]

[ERROR|2023-12-07 09:18:14,806|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:18:14,807|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:18:17,809|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:18:17,809|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:18:17,918|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 541, in _sock_connect_cb
ConnectionRefusedError: [Errno 111] Connect call failed ('10.10.100.56', 6767)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Connect call failed ('10.10.100.56', 6767)]

[ERROR|2023-12-07 09:18:20,812|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:18:20,812|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:18:22,924|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 541, in _sock_connect_cb
ConnectionRefusedError: [Errno 111] Connect call failed ('10.10.100.56', 6767)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Connect call failed ('10.10.100.56', 6767)]

[ERROR|2023-12-07 09:18:23,815|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:18:23,816|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:18:26,819|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:18:26,819|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:18:27,929|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 541, in _sock_connect_cb
ConnectionRefusedError: [Errno 111] Connect call failed ('10.10.100.56', 6767)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Connect call failed ('10.10.100.56', 6767)]

[ERROR|2023-12-07 09:18:29,824|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:18:29,824|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:18:32,829|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:18:32,829|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:18:32,933|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 541, in _sock_connect_cb
ConnectionRefusedError: [Errno 111] Connect call failed ('10.10.100.56', 6767)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Connect call failed ('10.10.100.56', 6767)]

[ERROR|2023-12-07 09:18:35,833|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:18:35,833|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:18:37,937|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 541, in _sock_connect_cb
ConnectionRefusedError: [Errno 111] Connect call failed ('10.10.100.56', 6767)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Connect call failed ('10.10.100.56', 6767)]

[ERROR|2023-12-07 09:18:38,835|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:18:38,835|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:18:41,838|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:18:41,839|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:18:42,941|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 541, in _sock_connect_cb
ConnectionRefusedError: [Errno 111] Connect call failed ('10.10.100.56', 6767)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Connect call failed ('10.10.100.56', 6767)]

[ERROR|2023-12-07 09:18:44,843|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:18:44,844|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:18:47,847|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:18:47,847|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:18:47,946|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 541, in _sock_connect_cb
ConnectionRefusedError: [Errno 111] Connect call failed ('10.10.100.56', 6767)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Connect call failed ('10.10.100.56', 6767)]

[ERROR|2023-12-07 09:18:50,852|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:18:50,852|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:18:52,951|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 541, in _sock_connect_cb
ConnectionRefusedError: [Errno 111] Connect call failed ('10.10.100.56', 6767)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Connect call failed ('10.10.100.56', 6767)]

[ERROR|2023-12-07 09:18:53,855|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:18:53,856|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:18:56,860|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:18:56,861|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:18:56,862|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:18:56,863|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:18:56,864|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 107, in send_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:18:56,865|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:18:56,865|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:18:56,865|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:18:57,866|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:18:57,868|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:18:57,869|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:18:57,869|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 107, in send_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:18:57,869|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:18:57,869|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:18:57,870|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:18:57,953|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Network is unreachable]

[ERROR|2023-12-07 09:18:58,870|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:18:58,871|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:18:58,872|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:18:58,873|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 107, in send_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:18:58,874|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:18:58,874|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:18:58,874|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:18:59,873|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:18:59,874|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:18:59,875|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:18:59,876|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 107, in send_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:18:59,877|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:18:59,877|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:18:59,878|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:02,960|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 541, in _sock_connect_cb
ConnectionRefusedError: [Errno 111] Connect call failed ('10.10.100.56', 6767)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Connect call failed ('10.10.100.56', 6767)]

[ERROR|2023-12-07 09:19:03,877|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:19:03,877|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:19:03,878|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:03,878|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:03,878|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 107, in send_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:03,878|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:03,879|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:03,879|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:04,880|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:04,881|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:04,882|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:04,883|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 107, in send_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:04,883|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:04,884|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:04,884|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:05,884|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:05,885|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:05,886|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:05,886|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 107, in send_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:05,887|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:05,888|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:05,888|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:06,887|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:06,888|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:06,889|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:06,889|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 107, in send_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:06,890|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:06,891|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:06,891|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:07,888|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:07,888|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:07,890|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:07,890|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 107, in send_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:07,890|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:07,892|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:07,892|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:07,963|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Network is unreachable]

[ERROR|2023-12-07 09:19:11,892|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:19:11,893|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:19:12,970|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 541, in _sock_connect_cb
ConnectionRefusedError: [Errno 111] Connect call failed ('10.10.100.56', 6767)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Connect call failed ('10.10.100.56', 6767)]

[ERROR|2023-12-07 09:19:14,895|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:19:14,895|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:19:14,895|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:14,895|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 107, in send_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:14,896|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:14,896|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:14,896|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:14,896|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:15,898|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:15,900|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:15,901|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 107, in send_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:15,902|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:15,903|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:15,903|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:15,904|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:16,901|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:16,902|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:16,903|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 107, in send_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:16,904|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:16,905|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:16,906|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:16,907|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:17,905|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:17,906|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:17,908|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 107, in send_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:17,909|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:17,909|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:17,910|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:17,910|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:17,972|setup.py:19]: Traceback (most recent call last):
  File "aiohttp/connector.py", line 980, in _wrap_create_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 536, in _request
  File "aiohttp/connector.py", line 540, in connect
  File "aiohttp/connector.py", line 901, in _create_connection
  File "aiohttp/connector.py", line 1209, in _create_direct_connection
  File "aiohttp/connector.py", line 1178, in _create_direct_connection
  File "aiohttp/connector.py", line 988, in _wrap_create_connection
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host 10.10.100.56:6767 ssl:default [Network is unreachable]

[ERROR|2023-12-07 09:19:18,907|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:18,908|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:18,909|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 107, in send_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:18,910|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:18,911|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:18,912|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:18,912|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:19,908|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:19,909|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:19,911|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 107, in send_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:19,911|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:19,912|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:19,913|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:19,913|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 09:19:23,911|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:19:23,911|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:19:26,915|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:19:26,915|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:19:29,918|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:19:29,918|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:19:32,921|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:19:32,922|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:19:35,925|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:19:35,925|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:19:38,928|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:19:38,928|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:19:41,929|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:19:41,930|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:19:44,931|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:19:44,931|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:19:47,934|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:19:47,935|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:19:50,937|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:19:50,937|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:19:53,940|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:19:53,940|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:19:56,943|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:19:56,944|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:19:59,947|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:19:59,947|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:20:02,950|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:20:02,951|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:20:05,952|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:20:05,952|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:20:08,955|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:20:08,955|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:20:11,958|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:20:11,958|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:20:14,962|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:20:14,962|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:20:17,963|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:20:17,963|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:20:20,965|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:20:20,965|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:20:23,766|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:20:23,967|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:20:23,967|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:20:26,970|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:20:26,970|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:20:29,972|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:20:29,972|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:20:32,975|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:20:32,976|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:20:35,978|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:20:35,978|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:20:38,982|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:20:38,982|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:20:41,985|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:20:41,986|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:20:44,989|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:20:44,989|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:20:47,991|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:20:47,992|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:20:50,994|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:20:50,994|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:20:53,997|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:20:53,997|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:20:57,001|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:20:57,002|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:21:00,006|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:21:00,007|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:21:03,010|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:21:03,011|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:21:06,014|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:21:06,014|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:21:09,017|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:21:09,017|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:21:12,021|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:21:12,021|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:21:15,025|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:21:15,026|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:21:18,029|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:21:18,030|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:21:21,034|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:21:21,034|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:21:24,038|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:21:24,039|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:21:27,042|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:21:27,042|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:21:29,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:21:30,045|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:21:30,046|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:21:33,050|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:21:33,051|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:21:36,054|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:21:36,055|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:21:39,059|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:21:39,059|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:21:42,062|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:21:42,063|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:21:45,067|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:21:45,068|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:21:48,072|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:21:48,072|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:21:51,076|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:21:51,076|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:21:54,079|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:21:54,080|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:21:57,083|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:21:57,084|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:22:00,087|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:22:00,087|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:22:03,091|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:22:03,092|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:22:06,096|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:22:06,097|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:22:09,099|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:22:09,100|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:22:12,102|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:22:12,103|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:22:15,107|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:22:15,107|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:22:18,111|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:22:18,111|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:22:21,114|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:22:21,115|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:22:24,119|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:22:24,119|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:22:27,122|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:22:27,122|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:22:30,126|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:22:30,127|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:22:33,131|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:22:33,132|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:22:35,767|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:22:36,134|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:22:36,134|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:22:39,137|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:22:39,138|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:22:42,141|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:22:42,141|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:22:45,146|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:22:45,146|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:22:48,150|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:22:48,151|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:22:51,155|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:22:51,156|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:22:54,159|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:22:54,160|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:22:57,161|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:22:57,162|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:23:00,166|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:23:00,167|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:23:03,170|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:23:03,171|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:23:06,175|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:23:06,175|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:23:09,180|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:23:09,180|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:23:12,185|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:23:12,185|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:23:15,189|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:23:15,190|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:23:18,194|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:23:18,194|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:23:21,199|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:23:21,199|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:23:24,204|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:23:24,205|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:23:27,210|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:23:27,211|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:23:30,216|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:23:30,216|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:23:33,219|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:23:33,220|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:23:36,225|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:23:36,226|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:23:39,231|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:23:39,232|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:23:41,767|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:23:42,235|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:23:42,235|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:23:45,239|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:23:45,239|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:23:48,243|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:23:48,244|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:23:51,248|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:23:51,248|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:23:54,251|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:23:54,252|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:23:57,255|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:23:57,256|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:24:00,260|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:24:00,261|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:24:03,266|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:24:03,266|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:24:06,270|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:24:06,271|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:24:09,275|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:24:09,276|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:24:12,279|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:24:12,279|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:24:15,283|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:24:15,284|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:24:18,286|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:24:18,287|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:24:21,291|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:24:21,291|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:24:24,294|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:24:24,294|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:24:27,299|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:24:27,299|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:24:30,302|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:24:30,302|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:24:33,305|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:24:33,306|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:24:36,308|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:24:36,309|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:24:39,312|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:24:39,313|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:24:42,315|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:24:42,315|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:24:45,319|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:24:45,320|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:24:47,766|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:24:48,323|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:24:48,324|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:24:51,328|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:24:51,329|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:24:54,332|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:24:54,332|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:24:57,334|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:24:57,334|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:25:00,338|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:25:00,339|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:25:03,345|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:25:03,346|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:25:06,350|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:25:06,351|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:25:09,355|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:25:09,356|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:25:12,358|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:25:12,359|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:25:15,362|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:25:15,362|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:25:18,365|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:25:18,365|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:25:21,368|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:25:21,368|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:25:24,371|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:25:24,371|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:25:27,375|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:25:27,376|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:25:30,379|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:25:30,380|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:25:33,383|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:25:33,384|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:25:36,389|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:25:36,389|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:25:39,391|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:25:39,392|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:25:42,396|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:25:42,396|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:25:45,399|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:25:45,400|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:25:48,402|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:25:48,403|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:25:51,407|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:25:51,407|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:25:53,766|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:25:54,411|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:25:54,412|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:25:57,416|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:25:57,417|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:26:00,421|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:26:00,422|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:26:03,427|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:26:03,428|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:26:06,432|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:26:06,433|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:26:09,435|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:26:09,436|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:26:12,439|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:26:12,440|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:26:15,442|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:26:15,442|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:26:18,446|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:26:18,447|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:26:21,451|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:26:21,452|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:26:24,456|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:26:24,457|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:26:27,459|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:26:27,460|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:26:30,465|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:26:30,466|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:26:33,471|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:26:33,471|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:26:36,476|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:26:36,476|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:26:39,479|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:26:39,479|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:26:42,483|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:26:42,484|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:26:45,486|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:26:45,486|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:26:48,490|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:26:48,490|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:26:51,495|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:26:51,496|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:26:54,499|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:26:54,500|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:26:57,502|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:26:57,502|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:26:59,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:27:00,505|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:27:00,505|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:27:03,508|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:27:03,508|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:27:06,509|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:27:06,509|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:27:09,511|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:27:09,511|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:27:12,514|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:27:12,514|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:27:15,518|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:27:15,519|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:27:18,523|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:27:18,524|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:27:21,526|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:27:21,527|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:27:24,531|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:27:24,532|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:27:27,536|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:27:27,536|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:27:30,541|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:27:30,542|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:27:33,545|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:27:33,546|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:27:36,549|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:27:36,549|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:27:39,553|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:27:39,553|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:27:42,557|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:27:42,557|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:27:45,562|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:27:45,562|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:27:48,566|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:27:48,567|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:27:51,571|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:27:51,572|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:27:54,575|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:27:54,576|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:27:57,580|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:27:57,580|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:28:00,585|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:28:00,586|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:28:03,589|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:28:03,589|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:28:05,766|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:28:06,593|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:28:06,594|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:28:09,598|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:28:09,599|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:28:12,602|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:28:12,602|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:28:15,607|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:28:15,608|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:28:18,612|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:28:18,613|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:28:21,616|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:28:21,617|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:28:24,621|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:28:24,621|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:28:27,623|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:28:27,623|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:28:30,625|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:28:30,626|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:28:33,628|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:28:33,628|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:28:36,630|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:28:36,631|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:28:39,634|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:28:39,634|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:28:42,637|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:28:42,637|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:28:45,638|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:28:45,639|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:28:48,641|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:28:48,641|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:28:51,644|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:28:51,645|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:28:54,649|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:28:54,649|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:28:57,652|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:28:57,653|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:29:00,657|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:29:00,658|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:29:03,662|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:29:03,663|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:29:06,667|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:29:06,668|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:29:09,672|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:29:09,672|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:29:11,766|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:29:12,675|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:29:12,676|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:29:15,679|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:29:15,679|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:29:18,681|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:29:18,682|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:29:21,686|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:29:21,687|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:29:24,691|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:29:24,692|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:29:27,695|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:29:27,696|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:29:30,699|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:29:30,699|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:29:33,702|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:29:33,702|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:29:36,706|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:29:36,706|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:29:39,711|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:29:39,711|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:29:42,716|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:29:42,717|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:29:45,721|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:29:45,722|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:29:48,725|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:29:48,726|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:29:51,729|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:29:51,729|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:29:54,731|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:29:54,732|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:29:57,734|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:29:57,735|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:30:00,737|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:30:00,738|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:30:03,740|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:30:03,741|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:30:06,743|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:30:06,743|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:30:09,747|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:30:09,747|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:30:12,752|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:30:12,752|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:30:15,756|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:30:15,757|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:30:17,766|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:30:18,760|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:30:18,760|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:30:21,761|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:30:21,761|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:30:24,766|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:30:24,766|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:30:27,769|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:30:27,769|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:30:30,772|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:30:30,772|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:30:33,775|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:30:33,776|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:30:36,780|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:30:36,781|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:30:39,785|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:30:39,785|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:30:42,788|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:30:42,789|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:30:45,792|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:30:45,792|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:30:48,796|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:30:48,797|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:30:51,800|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:30:51,800|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:30:54,805|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:30:54,806|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:30:57,809|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:30:57,810|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:31:00,814|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:31:00,815|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:31:03,818|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:31:03,819|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:31:06,823|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:31:06,824|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:31:09,827|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:31:09,828|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:31:12,831|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:31:12,831|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:31:15,836|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:31:15,836|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:31:18,839|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:31:18,840|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:31:21,842|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:31:21,842|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:31:23,766|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:31:24,845|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:31:24,846|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:31:27,849|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:31:27,850|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:31:30,854|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:31:30,854|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:31:33,859|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:31:33,860|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:31:36,865|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:31:36,866|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:31:39,868|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:31:39,869|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:31:42,872|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:31:42,872|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:31:45,877|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:31:45,878|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:31:48,883|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:31:48,884|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:31:51,889|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:31:51,889|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:31:54,891|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:31:54,891|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:31:57,896|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:31:57,896|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:32:00,900|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:32:00,900|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:32:03,905|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:32:03,906|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:32:06,909|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:32:06,909|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:32:09,911|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:32:09,911|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:32:12,914|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:32:12,915|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:32:15,919|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:32:15,919|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:32:18,923|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:32:18,924|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:32:21,928|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:32:21,929|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:32:24,932|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:32:24,932|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:32:27,937|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:32:27,938|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:32:29,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:32:30,940|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:32:30,940|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:32:33,945|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:32:33,946|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:32:36,949|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:32:36,950|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:32:39,952|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:32:39,953|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:32:42,958|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:32:42,958|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:32:45,962|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:32:45,962|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:32:48,966|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:32:48,966|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:32:51,968|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:32:51,969|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:32:54,972|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:32:54,972|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:32:57,976|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:32:57,977|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:33:00,981|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:33:00,981|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:33:03,983|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:33:03,984|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:33:06,988|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:33:06,989|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:33:09,993|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:33:09,993|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:33:12,996|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:33:12,996|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:33:15,998|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:33:15,998|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:33:19,001|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:33:19,002|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:33:22,005|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:33:22,005|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:33:25,008|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:33:25,009|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:33:28,011|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:33:28,012|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:33:31,015|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:33:31,015|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:33:34,017|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:33:34,018|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:33:35,764|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:33:37,020|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:33:37,021|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:33:40,024|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:33:40,024|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:33:43,027|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:33:43,027|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:33:46,030|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:33:46,030|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:33:49,034|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:33:49,034|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:33:52,037|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:33:52,037|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:33:55,038|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:33:55,039|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:33:58,041|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:33:58,042|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:34:01,045|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:34:01,045|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:34:04,047|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:34:04,047|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:34:07,050|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:34:07,050|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:34:10,053|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:34:10,054|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:34:13,057|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:34:13,058|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:34:16,061|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:34:16,061|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:34:19,063|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:34:19,063|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:34:22,065|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:34:22,065|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:34:25,068|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:34:25,068|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:34:28,071|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:34:28,072|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:34:31,075|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:34:31,075|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:34:34,078|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:34:34,079|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:34:37,082|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:34:37,083|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:34:40,085|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:34:40,085|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:34:41,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:34:43,088|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:34:43,088|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:34:46,092|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:34:46,092|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:34:49,095|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:34:49,095|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:34:52,098|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:34:52,099|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:34:55,102|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:34:55,103|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:34:58,107|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:34:58,107|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:35:01,111|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:35:01,111|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:35:04,115|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:35:04,115|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:35:07,118|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:35:07,118|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:35:10,122|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:35:10,123|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:35:13,125|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:35:13,125|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:35:16,127|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:35:16,128|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:35:19,131|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:35:19,132|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:35:22,135|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:35:22,136|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:35:25,140|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:35:25,141|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:35:28,144|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:35:28,144|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:35:31,149|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:35:31,150|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:35:34,155|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:35:34,156|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:35:37,159|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:35:37,160|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:35:40,165|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:35:40,165|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:35:43,170|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:35:43,171|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:35:46,175|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:35:46,175|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:35:47,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:35:49,178|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:35:49,178|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:35:52,182|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:35:52,182|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:35:55,185|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:35:55,185|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:35:58,188|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:35:58,188|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:36:01,190|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:36:01,190|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:36:04,194|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:36:04,194|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:36:07,197|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:36:07,198|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:36:10,202|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:36:10,203|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:36:13,205|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:36:13,206|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:36:16,208|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:36:16,209|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:36:19,212|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:36:19,212|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:36:22,217|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:36:22,218|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:36:25,221|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:36:25,222|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:36:28,225|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:36:28,225|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:36:31,228|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:36:31,229|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:36:34,232|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:36:34,233|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:36:37,236|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:36:37,237|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:36:40,242|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:36:40,243|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:36:43,246|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:36:43,248|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:36:46,253|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:36:46,253|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:36:49,258|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:36:49,259|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:36:52,261|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:36:52,262|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:36:53,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:36:55,264|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:36:55,264|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:36:58,268|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:36:58,268|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:37:01,271|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:37:01,272|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:37:04,275|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:37:04,275|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:37:07,278|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:37:07,278|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:37:10,281|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:37:10,282|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:37:13,283|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:37:13,284|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:37:16,287|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:37:16,287|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:37:19,291|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:37:19,292|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:37:22,295|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:37:22,296|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:37:25,299|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:37:25,300|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:37:28,305|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:37:28,305|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:37:31,308|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:37:31,309|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:37:34,312|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:37:34,312|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:37:37,315|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:37:37,315|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:37:40,319|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:37:40,320|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:37:43,322|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:37:43,323|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:37:46,325|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:37:46,325|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:37:49,328|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:37:49,328|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:37:52,331|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:37:52,332|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:37:55,335|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:37:55,335|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:37:58,339|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:37:58,340|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:37:59,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:38:01,345|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:38:01,345|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:38:04,350|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:38:04,351|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:38:07,354|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:38:07,354|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:38:10,357|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:38:10,357|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:38:13,361|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:38:13,362|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:38:16,366|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:38:16,366|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:38:19,368|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:38:19,368|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:38:22,371|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:38:22,371|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:38:25,375|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:38:25,375|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:38:28,379|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:38:28,380|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:38:31,384|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:38:31,385|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:38:34,389|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:38:34,390|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:38:37,394|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:38:37,395|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:38:40,399|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:38:40,400|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:38:43,403|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:38:43,404|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:38:46,409|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:38:46,409|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:38:49,413|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:38:49,414|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:38:52,416|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:38:52,416|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:38:55,419|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:38:55,419|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:38:58,421|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:38:58,422|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:39:01,425|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:39:01,426|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:39:04,429|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:39:04,430|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:39:05,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:39:07,433|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:39:07,434|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:39:10,438|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:39:10,439|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:39:13,444|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:39:13,444|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:39:16,447|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:39:16,448|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:39:19,451|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:39:19,451|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:39:22,455|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:39:22,456|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:39:25,460|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:39:25,461|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:39:28,465|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:39:28,465|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:39:31,469|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:39:31,470|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:39:34,472|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:39:34,473|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:39:37,475|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:39:37,475|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:39:40,477|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:39:40,478|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:39:43,482|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:39:43,483|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:39:46,485|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:39:46,485|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:39:49,488|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:39:49,489|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:39:52,491|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:39:52,491|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:39:55,494|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:39:55,494|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:39:58,497|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:39:58,497|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:40:01,500|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:40:01,500|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:40:04,503|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:40:04,504|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:40:07,506|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:40:07,507|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:40:10,511|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:40:10,512|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:40:11,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:40:13,516|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:40:13,517|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:40:16,522|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:40:16,522|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:40:19,525|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:40:19,526|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:40:22,530|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:40:22,531|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:40:25,536|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:40:25,536|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:40:28,539|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:40:28,539|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:40:31,543|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:40:31,544|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:40:34,549|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:40:34,549|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:40:37,553|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:40:37,553|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:40:40,558|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:40:40,558|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:40:43,561|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:40:43,561|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:40:46,564|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:40:46,565|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:40:49,569|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:40:49,569|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:40:52,574|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:40:52,575|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:40:55,577|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:40:55,578|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:40:58,581|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:40:58,582|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:41:01,585|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:41:01,586|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:41:04,590|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:41:04,591|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:41:07,596|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:41:07,597|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:41:10,599|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:41:10,600|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:41:13,604|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:41:13,605|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:41:16,610|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:41:16,610|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:41:17,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:41:19,615|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:41:19,616|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:41:22,619|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:41:22,619|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:41:25,623|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:41:25,624|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:41:28,628|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:41:28,629|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:41:31,634|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:41:31,634|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:41:34,637|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:41:34,638|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:41:37,642|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:41:37,642|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:41:40,646|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:41:40,647|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:41:43,651|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:41:43,652|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:41:46,656|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:41:46,656|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:41:49,662|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:41:49,663|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:41:52,668|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:41:52,668|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:41:55,673|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:41:55,674|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:41:58,679|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:41:58,680|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:42:01,684|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:42:01,685|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:42:04,689|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:42:04,690|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:42:07,695|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:42:07,695|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:42:10,701|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:42:10,702|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:42:13,706|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:42:13,706|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:42:16,709|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:42:16,710|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:42:19,714|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:42:19,715|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:42:22,719|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:42:22,720|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:42:23,764|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:42:25,725|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:42:25,726|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:42:28,729|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:42:28,729|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:42:31,731|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:42:31,731|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:42:34,735|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:42:34,736|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:42:37,739|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:42:37,740|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:42:40,741|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:42:40,741|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:42:43,745|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:42:43,745|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:42:46,748|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:42:46,749|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:42:49,752|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:42:49,753|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:42:52,756|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:42:52,757|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:42:55,758|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:42:55,759|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:42:58,763|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:42:58,763|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:43:01,769|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:43:01,770|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:43:04,773|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:43:04,774|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:43:07,777|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:43:07,777|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:43:10,782|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:43:10,783|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:43:13,785|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:43:13,785|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:43:16,788|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:43:16,788|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:43:19,792|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:43:19,793|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:43:22,796|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:43:22,797|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:43:25,800|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:43:25,800|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:43:28,805|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:43:28,806|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:43:29,767|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:43:31,811|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:43:31,812|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:43:34,814|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:43:34,815|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:43:37,820|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:43:37,820|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:43:40,823|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:43:40,823|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:43:43,826|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:43:43,826|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:43:46,830|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:43:46,830|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:43:49,834|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:43:49,834|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:43:52,838|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:43:52,839|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:43:55,841|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:43:55,841|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:43:58,844|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:43:58,845|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:44:01,849|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:44:01,850|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:44:04,853|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:44:04,854|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:44:07,859|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:44:07,860|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:44:10,861|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:44:10,862|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:44:13,867|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:44:13,868|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:44:16,873|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:44:16,875|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:44:19,878|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:44:19,879|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:44:22,883|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:44:22,883|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:44:25,886|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:44:25,887|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:44:28,889|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:44:28,890|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:44:31,893|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:44:31,894|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:44:34,898|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:44:34,898|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:44:35,764|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:44:37,901|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:44:37,902|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:44:40,903|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:44:40,903|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:44:43,905|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:44:43,905|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:44:46,908|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:44:46,909|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:44:49,912|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:44:49,912|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:44:52,915|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:44:52,915|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:44:55,919|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:44:55,919|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:44:58,923|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:44:58,923|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:45:01,925|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:45:01,925|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:45:04,927|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:45:04,928|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:45:07,931|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:45:07,931|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:45:10,932|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:45:10,933|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:45:13,935|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:45:13,935|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:45:16,938|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:45:16,939|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:45:19,942|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:45:19,943|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:45:22,946|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:45:22,947|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:45:25,951|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:45:25,951|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:45:28,956|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:45:28,956|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:45:31,961|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:45:31,962|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:45:34,965|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:45:34,965|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:45:37,967|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:45:37,967|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:45:40,970|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:45:40,970|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:45:41,764|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:45:43,973|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:45:43,973|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:45:46,976|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:45:46,976|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:45:49,978|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:45:49,978|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:45:52,982|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:45:52,982|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:45:55,985|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:45:55,985|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:45:58,988|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:45:58,988|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:46:01,992|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:46:01,993|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:46:04,996|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:46:04,996|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:46:07,999|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:46:07,999|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:46:11,003|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:46:11,003|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:46:14,008|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:46:14,008|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:46:17,012|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:46:17,012|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:46:20,015|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:46:20,015|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:46:23,018|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:46:23,018|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:46:26,020|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:46:26,021|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:46:29,023|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:46:29,024|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:46:32,029|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:46:32,029|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:46:35,031|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:46:35,031|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:46:38,035|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:46:38,036|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:46:41,038|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:46:41,038|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:46:44,042|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:46:44,042|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:46:47,046|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:46:47,047|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:46:47,766|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:46:50,050|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:46:50,050|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:46:53,052|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:46:53,053|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:46:56,056|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:46:56,056|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:46:59,058|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:46:59,059|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:47:02,062|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:47:02,063|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:47:05,066|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:47:05,067|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:47:08,070|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:47:08,071|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:47:11,074|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:47:11,075|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:47:14,078|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:47:14,079|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:47:17,082|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:47:17,082|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:47:20,086|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:47:20,087|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:47:23,091|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:47:23,091|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:47:26,094|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:47:26,095|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:47:29,097|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:47:29,098|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:47:32,101|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:47:32,102|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:47:35,105|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:47:35,105|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:47:38,108|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:47:38,109|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:47:41,112|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:47:41,112|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:47:44,115|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:47:44,115|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:47:47,118|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:47:47,118|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:47:50,121|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:47:50,121|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:47:53,125|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:47:53,125|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:47:53,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:47:56,128|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:47:56,128|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:47:59,130|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:47:59,130|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:48:02,134|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:48:02,134|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:48:05,137|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:48:05,137|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:48:08,141|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:48:08,142|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:48:11,145|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:48:11,145|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:48:14,148|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:48:14,148|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:48:17,151|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:48:17,151|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:48:20,154|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:48:20,154|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:48:23,157|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:48:23,158|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:48:26,161|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:48:26,161|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:48:29,164|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:48:29,164|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:48:32,167|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:48:32,167|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:48:35,171|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:48:35,171|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:48:38,173|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:48:38,174|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:48:41,177|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:48:41,177|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:48:44,181|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:48:44,181|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:48:47,185|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:48:47,185|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:48:50,188|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:48:50,189|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:48:53,192|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:48:53,193|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:48:56,195|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:48:56,196|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:48:59,198|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:48:59,199|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:48:59,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:49:02,202|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:49:02,202|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:49:05,205|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:49:05,206|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:49:08,210|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:49:08,211|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:49:11,215|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:49:11,215|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:49:14,219|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:49:14,220|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:49:17,225|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:49:17,225|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:49:20,229|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:49:20,230|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:49:23,235|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:49:23,236|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:49:26,239|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:49:26,240|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:49:29,245|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:49:29,246|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:49:32,249|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:49:32,250|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:49:35,252|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:49:35,253|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:49:38,256|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:49:38,257|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:49:41,261|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:49:41,262|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:49:44,266|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:49:44,266|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:49:47,271|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:49:47,271|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:49:50,276|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:49:50,277|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:49:53,281|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:49:53,282|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:49:56,286|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:49:56,286|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:49:59,289|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:49:59,289|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:50:02,293|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:50:02,294|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:50:05,298|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:50:05,298|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:50:05,764|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:50:08,301|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:50:08,301|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:50:11,304|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:50:11,304|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:50:14,308|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:50:14,308|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:50:17,312|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:50:17,313|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:50:20,318|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:50:20,319|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:50:23,322|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:50:23,323|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:50:26,327|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:50:26,328|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:50:29,333|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:50:29,333|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:50:32,339|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:50:32,340|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:50:35,344|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:50:35,345|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:50:38,349|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:50:38,350|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:50:41,355|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:50:41,356|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:50:44,359|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:50:44,360|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:50:47,363|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:50:47,363|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:50:50,368|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:50:50,369|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:50:53,374|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:50:53,375|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:50:56,379|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:50:56,380|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:50:59,384|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:50:59,385|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:51:02,389|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:51:02,390|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:51:05,392|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:51:05,392|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:51:08,396|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:51:08,396|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:51:11,399|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:51:11,400|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:51:11,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:51:14,404|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:51:14,405|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:51:17,408|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:51:17,409|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:51:20,413|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:51:20,414|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:51:23,419|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:51:23,420|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:51:26,424|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:51:26,425|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:51:29,429|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:51:29,429|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:51:32,432|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:51:32,433|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:51:35,436|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:51:35,437|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:51:38,442|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:51:38,443|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:51:41,447|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:51:41,448|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:51:44,452|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:51:44,453|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:51:47,457|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:51:47,458|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:51:50,462|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:51:50,463|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:51:53,468|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:51:53,468|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:51:56,473|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:51:56,474|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:51:59,479|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:51:59,480|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:52:02,484|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:52:02,485|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:52:05,489|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:52:05,489|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:52:08,493|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:52:08,493|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:52:11,498|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:52:11,499|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:52:14,503|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:52:14,504|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:52:17,505|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:52:17,506|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:52:17,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:52:20,508|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:52:20,508|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:52:23,512|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:52:23,513|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:52:26,518|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:52:26,519|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:52:29,522|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:52:29,523|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:52:32,527|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:52:32,528|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:52:35,532|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:52:35,533|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:52:38,538|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:52:38,539|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:52:41,543|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:52:41,543|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:52:44,547|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:52:44,547|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:52:47,551|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:52:47,552|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:52:50,556|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:52:50,557|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:52:53,561|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:52:53,562|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:52:56,566|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:52:56,566|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:52:59,571|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:52:59,571|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:53:02,574|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:53:02,575|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:53:05,578|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:53:05,578|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:53:08,583|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:53:08,584|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:53:11,585|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:53:11,586|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:53:14,589|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:53:14,589|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:53:17,593|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:53:17,594|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:53:20,597|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:53:20,598|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:53:23,603|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:53:23,604|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:53:23,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:53:26,609|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:53:26,610|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:53:29,612|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:53:29,612|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:53:32,616|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:53:32,617|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:53:35,620|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:53:35,621|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:53:38,626|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:53:38,627|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:53:41,632|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:53:41,633|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:53:44,635|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:53:44,636|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:53:47,640|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:53:47,641|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:53:50,644|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:53:50,644|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:53:53,649|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:53:53,649|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:53:56,652|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:53:56,653|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:53:59,655|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:53:59,656|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:54:02,659|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:54:02,660|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:54:05,665|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:54:05,665|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:54:08,669|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:54:08,670|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:54:11,675|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:54:11,675|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:54:14,679|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:54:14,679|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:54:17,683|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:54:17,684|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:54:20,689|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:54:20,689|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:54:23,694|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:54:23,694|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:54:26,698|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:54:26,698|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:54:29,702|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:54:29,702|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:54:29,764|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:54:32,707|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:54:32,708|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:54:35,711|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:54:35,711|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:54:38,716|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:54:38,717|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:54:41,720|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:54:41,721|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:54:44,726|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:54:44,727|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:54:47,730|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:54:47,730|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:54:50,735|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:54:50,735|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:54:53,739|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:54:53,741|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:54:56,746|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:54:56,747|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:54:59,750|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:54:59,750|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:55:02,755|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:55:02,756|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:55:05,760|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:55:05,761|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:55:08,766|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:55:08,766|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:55:11,771|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:55:11,772|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:55:14,776|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:55:14,777|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:55:17,781|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:55:17,781|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:55:20,786|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:55:20,787|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:55:23,791|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:55:23,792|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:55:26,796|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:55:26,796|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:55:29,801|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:55:29,802|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:55:32,806|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:55:32,807|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:55:35,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:55:35,809|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:55:35,810|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:55:38,814|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:55:38,815|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:55:41,818|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:55:41,818|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:55:44,822|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:55:44,823|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:55:47,826|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:55:47,827|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:55:50,831|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:55:50,831|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:55:53,835|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:55:53,836|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:55:56,839|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:55:56,839|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:55:59,843|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:55:59,843|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:56:02,847|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:56:02,848|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:56:05,852|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:56:05,853|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:56:08,855|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:56:08,856|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:56:11,860|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:56:11,861|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:56:14,865|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:56:14,866|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:56:17,870|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:56:17,871|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:56:20,876|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:56:20,877|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:56:23,881|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:56:23,882|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:56:26,885|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:56:26,886|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:56:29,888|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:56:29,888|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:56:32,892|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:56:32,893|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:56:35,895|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:56:35,896|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:56:38,900|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:56:38,901|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:56:41,767|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:56:41,903|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:56:41,903|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:56:44,907|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:56:44,907|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:56:47,910|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:56:47,911|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:56:50,916|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:56:50,917|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:56:53,921|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:56:53,921|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:56:56,926|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:56:56,926|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:56:59,930|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:56:59,930|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:57:02,933|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:57:02,934|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:57:05,939|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:57:05,940|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:57:08,944|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:57:08,944|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:57:11,947|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:57:11,948|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:57:14,952|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:57:14,953|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:57:17,958|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:57:17,959|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:57:20,962|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:57:20,962|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:57:23,965|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:57:23,966|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:57:26,968|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:57:26,969|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:57:29,972|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:57:29,972|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:57:32,975|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:57:32,976|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:57:35,979|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:57:35,979|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:57:38,982|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:57:38,983|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:57:41,987|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:57:41,987|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:57:44,992|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:57:44,992|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:57:47,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:57:47,994|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:57:47,995|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:57:50,998|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:57:50,999|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:57:54,002|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:57:54,003|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:57:57,005|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:57:57,006|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:58:00,008|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:58:00,009|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:58:03,012|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:58:03,013|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:58:06,016|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:58:06,016|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:58:09,020|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:58:09,021|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:58:12,025|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:58:12,025|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:58:15,029|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:58:15,030|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:58:18,033|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:58:18,034|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:58:21,037|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:58:21,038|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:58:24,042|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:58:24,042|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:58:27,047|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:58:27,048|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:58:30,052|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:58:30,053|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:58:33,055|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:58:33,056|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:58:36,059|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:58:36,060|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:58:39,063|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:58:39,063|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:58:42,067|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:58:42,068|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:58:45,072|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:58:45,073|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:58:48,075|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:58:48,076|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:58:51,080|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:58:51,081|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:58:53,766|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:58:54,083|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:58:54,084|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:58:57,088|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:58:57,088|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:59:00,092|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:59:00,092|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:59:03,095|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:59:03,096|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:59:06,100|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:59:06,100|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:59:09,105|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:59:09,105|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:59:12,109|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:59:12,110|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:59:15,114|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:59:15,114|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:59:18,118|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:59:18,118|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:59:21,122|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:59:21,123|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:59:24,126|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:59:24,127|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:59:27,131|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:59:27,132|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:59:30,135|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:59:30,136|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:59:33,140|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:59:33,141|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:59:36,145|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:59:36,145|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:59:39,149|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:59:39,150|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:59:42,154|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:59:42,154|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:59:45,159|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:59:45,159|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:59:48,164|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:59:48,165|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:59:51,169|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:59:51,170|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:59:54,173|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:59:54,174|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:59:57,179|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 09:59:57,180|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 09:59:59,766|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:00:00,183|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:00:00,184|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:00:03,189|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:00:03,189|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:00:06,192|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:00:06,193|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:00:09,196|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:00:09,196|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:00:12,198|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:00:12,199|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:00:15,202|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:00:15,202|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:00:18,205|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:00:18,206|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:00:21,210|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:00:21,210|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:00:24,213|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:00:24,213|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:00:27,217|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:00:27,217|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:00:30,221|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:00:30,221|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:00:33,225|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:00:33,225|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:00:36,228|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:00:36,229|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:00:39,232|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:00:39,232|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:00:42,235|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:00:42,235|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:00:45,239|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:00:45,239|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:00:48,242|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:00:48,242|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:00:51,244|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:00:51,245|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:00:54,248|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:00:54,248|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:00:57,250|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:00:57,250|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:01:00,252|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:01:00,252|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:01:03,254|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:01:03,255|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:01:05,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:01:06,256|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:01:06,256|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:01:09,258|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:01:09,258|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:01:12,261|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:01:12,261|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:01:15,264|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:01:15,264|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:01:18,267|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:01:18,267|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:01:21,270|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:01:21,271|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:01:24,274|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:01:24,275|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:01:27,278|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:01:27,278|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:01:30,281|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:01:30,281|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:01:33,283|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:01:33,284|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:01:36,288|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:01:36,289|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:01:39,292|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:01:39,292|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:01:42,295|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:01:42,296|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:01:45,298|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:01:45,299|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:01:48,302|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:01:48,303|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:01:51,307|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:01:51,307|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:01:54,311|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:01:54,312|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:01:57,315|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:01:57,316|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:02:00,319|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:02:00,319|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:02:03,322|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:02:03,322|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:02:06,326|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:02:06,326|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:02:09,329|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:02:09,329|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:02:11,766|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:02:12,332|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:02:12,333|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:02:15,336|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:02:15,336|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:02:18,340|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:02:18,341|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:02:21,346|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:02:21,346|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:02:24,351|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:02:24,351|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:02:27,356|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:02:27,356|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:02:30,361|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:02:30,361|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:02:33,366|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:02:33,366|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:02:36,369|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:02:36,369|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:02:39,371|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:02:39,371|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:02:42,376|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:02:42,377|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:02:45,382|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:02:45,383|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:02:48,387|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:02:48,388|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:02:51,391|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:02:51,392|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:02:54,395|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:02:54,396|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:02:57,401|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:02:57,402|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:03:00,405|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:03:00,406|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:03:03,410|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:03:03,412|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:03:06,415|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:03:06,416|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:03:09,421|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:03:09,421|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:03:12,426|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:03:12,427|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:03:15,430|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:03:15,430|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:03:17,767|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:03:18,434|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:03:18,435|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:03:21,439|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:03:21,440|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:03:24,443|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:03:24,444|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:03:27,448|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:03:27,449|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:03:30,454|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:03:30,455|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:03:33,459|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:03:33,460|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:03:36,463|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:03:36,464|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:03:39,468|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:03:39,469|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:03:42,474|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:03:42,474|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:03:45,479|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:03:45,479|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:03:48,482|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:03:48,483|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:03:51,486|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:03:51,486|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:03:54,491|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:03:54,492|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:03:57,496|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:03:57,497|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:04:00,499|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:04:00,500|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:04:03,506|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:04:03,507|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:04:06,512|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:04:06,513|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:04:09,518|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:04:09,519|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:04:12,524|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:04:12,526|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:04:15,529|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:04:15,530|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:04:18,535|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:04:18,535|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:04:21,539|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:04:21,540|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:04:23,767|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:04:24,542|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:04:24,542|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:04:27,545|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:04:27,546|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:04:30,550|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:04:30,550|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:04:33,554|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:04:33,554|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:04:36,559|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:04:36,559|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:04:39,563|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:04:39,563|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:04:42,565|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:04:42,566|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:04:45,570|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:04:45,570|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:04:48,575|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:04:48,576|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:04:51,579|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:04:51,580|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:04:54,585|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:04:54,585|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:04:57,589|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:04:57,589|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:05:00,593|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:05:00,594|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:05:03,599|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:05:03,599|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:05:06,604|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:05:06,605|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:05:09,609|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:05:09,610|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:05:12,615|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:05:12,616|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:05:15,619|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:05:15,620|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:05:18,622|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:05:18,623|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:05:21,627|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:05:21,628|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:05:24,632|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:05:24,633|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:05:27,636|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:05:27,636|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:05:29,766|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:05:30,639|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:05:30,640|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:05:33,644|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:05:33,645|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:05:36,649|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:05:36,649|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:05:39,653|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:05:39,654|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:05:42,659|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:05:42,659|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:05:45,663|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:05:45,664|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:05:48,668|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:05:48,669|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:05:51,673|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:05:51,674|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:05:54,676|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:05:54,676|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:05:57,681|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:05:57,682|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:06:00,686|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:06:00,687|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:06:03,690|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:06:03,691|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:06:06,695|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:06:06,696|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:06:09,700|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:06:09,701|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:06:12,705|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:06:12,706|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:06:15,710|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:06:15,710|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:06:18,715|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:06:18,716|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:06:21,721|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:06:21,722|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:06:24,727|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:06:24,728|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:06:27,732|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:06:27,733|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:06:30,736|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:06:30,736|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:06:33,740|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:06:33,740|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:06:35,766|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:06:36,744|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:06:36,745|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:06:39,749|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:06:39,750|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:06:42,753|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:06:42,754|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:06:45,759|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:06:45,760|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:06:48,763|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:06:48,764|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:06:51,769|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:06:51,769|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:06:54,772|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:06:54,773|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:06:57,776|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:06:57,777|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:07:00,780|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:07:00,780|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:07:03,785|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:07:03,786|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:07:06,790|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:07:06,791|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:07:09,795|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:07:09,796|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:07:12,799|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:07:12,800|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:07:15,804|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:07:15,804|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:07:18,809|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:07:18,810|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:07:21,813|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:07:21,814|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:07:24,818|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:07:24,819|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:07:27,823|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:07:27,823|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:07:30,828|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:07:30,829|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:07:33,832|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:07:33,833|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:07:36,836|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:07:36,837|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:07:39,840|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:07:39,841|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:07:41,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:07:42,844|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:07:42,845|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:07:45,849|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:07:45,849|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:07:48,851|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:07:48,851|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:07:51,855|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:07:51,856|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:07:54,858|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:07:54,858|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:07:57,861|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:07:57,862|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:08:00,866|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:08:00,867|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:08:03,870|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:08:03,870|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:08:06,874|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:08:06,875|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:08:09,878|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:08:09,879|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:08:12,882|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:08:12,882|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:08:15,886|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:08:15,886|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:08:18,891|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:08:18,891|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:08:21,896|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:08:21,896|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:08:24,898|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:08:24,898|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:08:27,901|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:08:27,902|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:08:30,904|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:08:30,905|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:08:33,907|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:08:33,908|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:08:36,912|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:08:36,912|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:08:39,915|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:08:39,915|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:08:42,917|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:08:42,918|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:08:45,920|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:08:45,921|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:08:47,766|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:08:48,924|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:08:48,925|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:08:51,929|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:08:51,930|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:08:54,931|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:08:54,931|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:08:57,934|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:08:57,935|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:09:00,938|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:09:00,939|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:09:03,942|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:09:03,943|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:09:06,947|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:09:06,948|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:09:09,951|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:09:09,951|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:09:12,955|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:09:12,956|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:09:15,958|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:09:15,959|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:09:18,962|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:09:18,962|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:09:21,966|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:09:21,966|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:09:24,969|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:09:24,969|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:09:27,973|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:09:27,974|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:09:30,977|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:09:30,978|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:09:33,981|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:09:33,982|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:09:36,984|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:09:36,985|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:09:39,989|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:09:39,989|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:09:42,993|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:09:42,994|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:09:45,998|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:09:45,998|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:09:49,002|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:09:49,002|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:09:52,006|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:09:52,007|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:09:53,764|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:09:55,010|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:09:55,010|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:09:58,015|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:09:58,016|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:10:01,020|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:10:01,021|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:10:04,025|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:10:04,026|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:10:07,028|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:10:07,029|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:10:10,034|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:10:10,035|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:10:13,038|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:10:13,038|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:10:16,041|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:10:16,042|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:10:19,045|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:10:19,045|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:10:22,048|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:10:22,049|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:10:25,053|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:10:25,053|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:10:28,058|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:10:28,059|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:10:31,062|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:10:31,062|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:10:34,066|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:10:34,066|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:10:37,070|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:10:37,070|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:10:40,073|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:10:40,073|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:10:43,077|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:10:43,078|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:10:46,081|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:10:46,081|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:10:49,084|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:10:49,084|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:10:52,087|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:10:52,087|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:10:55,090|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:10:55,090|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:10:58,095|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:10:58,095|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:10:59,764|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:11:01,098|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:11:01,098|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:11:04,101|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:11:04,101|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:11:07,104|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:11:07,104|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:11:10,107|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:11:10,107|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:11:13,112|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:11:13,112|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:11:16,115|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:11:16,115|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:11:19,118|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:11:19,118|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:11:22,122|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:11:22,122|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:11:25,127|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:11:25,128|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:11:28,132|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:11:28,132|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:11:31,135|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:11:31,136|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:11:34,138|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:11:34,138|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:11:37,140|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:11:37,141|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:11:40,144|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:11:40,144|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:11:43,147|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:11:43,148|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:11:46,150|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:11:46,151|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:11:49,154|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:11:49,154|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:11:52,158|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:11:52,159|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:11:55,161|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:11:55,161|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:11:58,163|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:11:58,163|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:12:01,167|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:12:01,167|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:12:04,170|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:12:04,170|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:12:05,764|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:12:07,173|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:12:07,174|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:12:10,177|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:12:10,177|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:12:13,181|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:12:13,181|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:12:16,185|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:12:16,186|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:12:19,191|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:12:19,191|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:12:22,195|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:12:22,195|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:12:25,198|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:12:25,198|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:12:28,201|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:12:28,201|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:12:31,204|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:12:31,205|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:12:34,208|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:12:34,208|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:12:37,211|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:12:37,211|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:12:40,215|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:12:40,216|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:12:43,221|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:12:43,222|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:12:46,225|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:12:46,225|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:12:49,229|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:12:49,229|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:12:52,232|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:12:52,232|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:12:55,234|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:12:55,235|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:12:58,238|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:12:58,239|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:13:01,242|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:13:01,242|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:13:04,245|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:13:04,246|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:13:07,249|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:13:07,250|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:13:10,251|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:13:10,251|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:13:11,764|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:13:13,253|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:13:13,254|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:13:16,257|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:13:16,257|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:13:19,259|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:13:19,259|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:13:22,262|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:13:22,262|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:13:25,265|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:13:25,266|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:13:28,268|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:13:28,268|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:13:31,271|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:13:31,271|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:13:34,273|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:13:34,273|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:13:37,278|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:13:37,278|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:13:40,281|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:13:40,282|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:13:43,285|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:13:43,286|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:13:46,288|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:13:46,288|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:13:49,291|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:13:49,292|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:13:52,294|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:13:52,295|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:13:55,298|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:13:55,298|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:13:58,302|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:13:58,302|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:14:01,306|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:14:01,307|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:14:04,311|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:14:04,311|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:14:07,315|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:14:07,316|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:14:10,318|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:14:10,318|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:14:13,321|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:14:13,321|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:14:16,324|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:14:16,324|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:14:17,766|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:14:19,327|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:14:19,327|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:14:22,330|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:14:22,331|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:14:25,334|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:14:25,334|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:14:28,337|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:14:28,337|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:14:31,340|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:14:31,340|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:14:34,343|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:14:34,343|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:14:37,346|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:14:37,347|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:14:40,350|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:14:40,350|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:14:43,353|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:14:43,353|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:14:46,355|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:14:46,355|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:14:49,358|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:14:49,358|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:14:52,361|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:14:52,361|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:14:55,364|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:14:55,364|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:14:58,368|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:14:58,368|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:15:01,371|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:15:01,371|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:15:04,375|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:15:04,375|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:15:07,378|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:15:07,378|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:15:10,380|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:15:10,380|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:15:13,383|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:15:13,384|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:15:16,388|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:15:16,388|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

