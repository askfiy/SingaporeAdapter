[ERROR|2023-12-07 12:15:23,023|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:15:23,024|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:15:26,028|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:15:26,029|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:15:29,031|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:15:29,031|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:15:32,035|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:15:32,035|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:15:35,039|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:15:35,040|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:15:38,044|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:15:38,045|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:15:41,049|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:15:41,049|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:15:44,054|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:15:44,055|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:15:47,058|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:15:47,058|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:15:50,062|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:15:50,063|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:15:53,068|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:15:53,069|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:15:56,072|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:15:56,073|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:15:59,078|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:15:59,078|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:16:02,081|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:16:02,082|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:16:05,084|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:16:05,085|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:16:08,089|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:16:08,090|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:16:11,095|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:16:11,095|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:16:14,099|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:16:14,099|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:16:17,103|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:16:17,104|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:16:20,108|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:16:20,109|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:16:23,111|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:16:23,112|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:16:26,116|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:16:26,116|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:16:29,121|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:16:29,121|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:16:32,127|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:16:32,128|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:16:35,131|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:16:35,132|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:16:38,135|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:16:38,135|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:16:41,140|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:16:41,141|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:16:44,145|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:16:44,146|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:16:47,150|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:16:47,151|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:16:50,154|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:16:50,154|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:16:53,158|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:16:53,158|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:16:56,161|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:16:56,162|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:16:59,165|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:16:59,165|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:17:02,170|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:17:02,171|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:17:05,175|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:17:05,175|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:17:08,179|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:17:08,180|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:17:11,185|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:17:11,185|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:17:14,189|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:17:14,190|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:17:17,195|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:17:17,195|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:17:20,199|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:17:20,200|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:17:23,205|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:17:23,206|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:17:26,210|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:17:26,210|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:17:29,214|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:17:29,214|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:17:32,216|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:17:32,216|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:17:35,218|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:17:35,219|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:17:38,221|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:17:38,222|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:17:41,224|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:17:41,224|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:17:44,228|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:17:44,228|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:17:47,231|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:17:47,231|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:17:50,234|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:17:50,235|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:17:53,237|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:17:53,237|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:17:56,238|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:17:56,239|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:17:59,241|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:17:59,241|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:18:02,244|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:18:02,244|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:18:05,247|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:18:05,248|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:18:08,250|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:18:08,251|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:18:11,254|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:18:11,254|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:18:14,257|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:18:14,257|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:18:17,260|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:18:17,260|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:18:20,263|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:18:20,263|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:18:23,266|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:18:23,266|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:18:26,268|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:18:26,269|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:18:29,271|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:18:29,271|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:18:32,274|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:18:32,274|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:18:35,277|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:18:35,277|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:18:38,281|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:18:38,281|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:18:41,284|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:18:41,284|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:18:44,287|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:18:44,287|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:18:47,291|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:18:47,291|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:18:50,294|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:18:50,294|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:18:53,297|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:18:53,298|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:18:56,301|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:18:56,301|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:18:59,304|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:18:59,305|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:19:02,307|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:19:02,308|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:19:05,311|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:19:05,311|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:19:08,314|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:19:08,315|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:19:11,318|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:19:11,318|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:19:14,321|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:19:14,322|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:19:17,326|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:19:17,326|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:19:20,330|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:19:20,331|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:19:23,334|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:19:23,335|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:19:26,338|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:19:26,339|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:19:29,341|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:19:29,342|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:19:32,345|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:19:32,346|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:19:35,348|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:19:35,349|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:19:38,351|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:19:38,351|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:19:41,356|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:19:41,356|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:19:44,359|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:19:44,360|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:19:47,363|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:19:47,364|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:19:50,368|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:19:50,369|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:19:53,371|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:19:53,372|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:19:56,375|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:19:56,376|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:19:59,378|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:19:59,379|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:20:02,384|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:20:02,384|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:20:05,388|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:20:05,388|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:20:08,392|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:20:08,393|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:20:11,398|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:20:11,398|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:20:14,401|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:20:14,402|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:20:17,405|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:20:17,406|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:20:20,410|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:20:20,411|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:20:23,415|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:20:23,416|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:20:26,418|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:20:26,419|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:20:29,422|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:20:29,423|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:20:32,425|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:20:32,425|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:20:35,427|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:20:35,428|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:20:38,431|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:20:38,432|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:20:41,434|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:20:41,435|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:20:44,438|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:20:44,439|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:20:47,441|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:20:47,442|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:20:50,446|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:20:50,447|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:20:53,451|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:20:53,452|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:20:56,454|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:20:56,455|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:20:59,460|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:20:59,461|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:21:02,462|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:21:02,463|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:21:05,465|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:21:05,466|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:21:08,471|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:21:08,471|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:21:11,475|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:21:11,475|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:21:14,478|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:21:14,479|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:21:17,483|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:21:17,484|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:21:20,488|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:21:20,489|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:21:23,492|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:21:23,492|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:21:26,497|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:21:26,498|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:21:29,501|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:21:29,502|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:21:32,506|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:21:32,507|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:21:35,511|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:21:35,512|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:21:38,516|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:21:38,517|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:21:41,521|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:21:41,521|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:21:44,525|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:21:44,526|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:21:47,531|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:21:47,531|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:21:50,535|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:21:50,535|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:21:53,540|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:21:53,541|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:21:56,545|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:21:56,545|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:21:59,549|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:21:59,550|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:22:02,553|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:22:02,554|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:22:05,559|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:22:05,559|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:22:08,562|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:22:08,563|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:22:11,568|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:22:11,569|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:22:14,573|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:22:14,573|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:22:17,577|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:22:17,578|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:22:20,582|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:22:20,583|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:22:23,588|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:22:23,589|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:22:26,591|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:22:26,592|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:22:29,596|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:22:29,596|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:22:32,600|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:22:32,601|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:22:35,606|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:22:35,607|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:22:38,611|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:22:38,611|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:22:41,616|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:22:41,616|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:22:44,621|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:22:44,622|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:22:47,626|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:22:47,626|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:22:50,629|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:22:50,630|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:22:53,635|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:22:53,636|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:22:56,640|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:22:56,641|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:22:59,646|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:22:59,647|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:23:02,652|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:23:02,652|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:23:05,655|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:23:05,656|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:23:08,659|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:23:08,660|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:23:11,664|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:23:11,665|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:23:14,669|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:23:14,669|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:23:17,672|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:23:17,673|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:23:20,676|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:23:20,676|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:23:23,681|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:23:23,681|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:23:26,686|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:23:26,687|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:23:29,691|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:23:29,691|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:23:32,696|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:23:32,697|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:23:35,701|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:23:35,701|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:23:38,706|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:23:38,706|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:23:41,711|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:23:41,712|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:23:44,716|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:23:44,717|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:23:47,722|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:23:47,723|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:23:50,727|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:23:50,727|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:23:53,731|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:23:53,732|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:23:56,736|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:23:56,736|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:23:59,739|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:23:59,740|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:24:02,745|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:24:02,746|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:24:05,751|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:24:05,751|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:24:08,756|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:24:08,757|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:24:11,761|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:24:11,762|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:24:14,766|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:24:14,766|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:24:17,770|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:24:17,770|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:24:20,775|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:24:20,775|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:24:23,779|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:24:23,780|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:24:26,784|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:24:26,784|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:24:29,788|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:24:29,789|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:24:32,794|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:24:32,795|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:24:35,800|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:24:35,801|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:24:38,805|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:24:38,805|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:24:41,808|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:24:41,809|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:24:44,811|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:24:44,812|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:24:47,816|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:24:47,817|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:24:50,822|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:24:50,823|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:24:53,827|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:24:53,828|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:24:56,832|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:24:56,833|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:24:59,837|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:24:59,838|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:25:02,841|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:25:02,842|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:25:05,847|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:25:05,848|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:25:08,852|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:25:08,853|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:25:11,857|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:25:11,858|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:25:14,863|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:25:14,863|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:25:17,868|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:25:17,868|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:25:20,872|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:25:20,873|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:25:23,877|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:25:23,878|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:25:26,881|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:25:26,882|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:25:29,887|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:25:29,888|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:25:32,891|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:25:32,892|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:25:35,897|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:25:35,898|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:25:38,901|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:25:38,902|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:25:41,906|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:25:41,907|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:25:44,911|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:25:44,911|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:25:47,915|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:25:47,916|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:25:50,920|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:25:50,921|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:25:53,924|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:25:53,925|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:25:56,928|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:25:56,928|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:25:59,932|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:25:59,933|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:26:02,937|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:26:02,938|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:26:05,940|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:26:05,941|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:26:08,944|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:26:08,945|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:26:11,949|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:26:11,950|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:26:14,954|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:26:14,955|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:26:17,957|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:26:17,957|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:26:20,961|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:26:20,961|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:26:23,964|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:26:23,964|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:26:26,967|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:26:26,968|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:26:29,971|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:26:29,971|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:26:32,975|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:26:32,975|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:26:35,978|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:26:35,978|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:26:38,982|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:26:38,983|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:26:41,987|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:26:41,987|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:26:44,991|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:26:44,992|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:26:47,995|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:26:47,996|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:26:51,001|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:26:51,001|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:26:54,004|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:26:54,005|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:26:57,008|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:26:57,008|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:27:00,011|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:27:00,011|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:27:03,016|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:27:03,016|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:27:06,020|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:27:06,020|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:27:09,024|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:27:09,025|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:27:12,028|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:27:12,029|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:27:15,033|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:27:15,034|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:27:18,038|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:27:18,039|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:27:21,043|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:27:21,044|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:27:24,047|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:27:24,048|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:27:27,051|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:27:27,052|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:27:30,054|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:27:30,055|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:27:33,058|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:27:33,059|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:27:36,061|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:27:36,062|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:27:39,066|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:27:39,066|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:27:42,071|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:27:42,072|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:27:45,076|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:27:45,077|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:27:48,081|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:27:48,082|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:27:51,084|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:27:51,085|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:27:54,089|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:27:54,090|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:27:57,094|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:27:57,095|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:28:00,100|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:28:00,100|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:28:03,103|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:28:03,104|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:28:06,109|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:28:06,110|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:28:09,114|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:28:09,115|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:28:12,119|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:28:12,120|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:28:15,123|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:28:15,124|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:28:18,128|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:28:18,129|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:28:21,131|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:28:21,132|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:28:24,136|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:28:24,136|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:28:27,140|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:28:27,140|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:28:30,145|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:28:30,145|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:28:33,149|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:28:33,149|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:28:36,153|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:28:36,153|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:28:39,158|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:28:39,159|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:28:42,163|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:28:42,164|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:28:45,168|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:28:45,169|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:28:48,173|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:28:48,173|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:28:51,177|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:28:51,177|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:28:54,180|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:28:54,181|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:28:57,184|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:28:57,185|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:29:00,189|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:29:00,189|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:29:03,194|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:29:03,195|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:29:06,198|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:29:06,198|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:29:09,201|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:29:09,202|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:29:12,206|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:29:12,207|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:29:15,210|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:29:15,211|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:29:18,215|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:29:18,215|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:29:21,218|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:29:21,218|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:29:24,222|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:29:24,223|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:29:27,227|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:29:27,228|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:29:30,233|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:29:30,234|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:29:33,238|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:29:33,239|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:29:36,243|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:29:36,244|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:29:39,249|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:29:39,249|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:29:42,253|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:29:42,254|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:29:45,258|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:29:45,259|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:29:48,264|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:29:48,264|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:29:51,268|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:29:51,269|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:29:54,273|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:29:54,274|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:29:57,278|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:29:57,278|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:30:00,282|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:30:00,283|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:30:03,288|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:30:03,288|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:30:06,291|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:30:06,292|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:30:09,297|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:30:09,298|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:30:12,301|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:30:12,302|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:30:15,306|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:30:15,307|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:30:18,311|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:30:18,312|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:30:21,315|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:30:21,316|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:30:24,320|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:30:24,320|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:30:27,323|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:30:27,323|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:30:30,327|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:30:30,327|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:30:33,330|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:30:33,331|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:30:36,334|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:30:36,335|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:30:39,337|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:30:39,338|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:30:42,341|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:30:42,341|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:30:45,344|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:30:45,345|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:30:48,348|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:30:48,348|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:30:51,350|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:30:51,350|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:30:54,353|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:30:54,354|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:30:57,357|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:30:57,357|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:31:00,360|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:31:00,360|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:31:03,363|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:31:03,364|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:31:06,366|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:31:06,367|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:31:09,369|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:31:09,369|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:31:12,371|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:31:12,371|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:31:15,374|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:31:15,374|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:31:18,377|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:31:18,377|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:31:21,380|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:31:21,380|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:31:24,383|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:31:24,384|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:31:27,387|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:31:27,387|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:31:30,389|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:31:30,389|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:31:33,393|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:31:33,393|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:31:36,396|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:31:36,396|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:31:39,399|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:31:39,400|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:31:42,403|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:31:42,403|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:31:45,407|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:31:45,407|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:31:48,409|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:31:48,409|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:31:51,411|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:31:51,412|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:31:54,414|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:31:54,414|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:31:57,417|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:31:57,418|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:32:00,421|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:32:00,421|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:32:03,425|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:32:03,426|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:32:06,430|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:32:06,431|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:32:09,434|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:32:09,435|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:32:12,438|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:32:12,438|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:32:15,441|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:32:15,442|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:32:18,444|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:32:18,445|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:32:21,448|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:32:21,448|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:32:24,451|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:32:24,452|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:32:27,454|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:32:27,455|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:32:30,458|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:32:30,459|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:32:33,461|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:32:33,462|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:32:36,466|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:32:36,466|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:32:39,471|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:32:39,472|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:32:42,476|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:32:42,476|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:32:45,481|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:32:45,482|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:32:48,485|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:32:48,486|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:32:51,488|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:32:51,489|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:32:54,493|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:32:54,494|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:32:57,499|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:32:57,500|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:33:00,504|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:33:00,505|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:33:03,507|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:33:03,508|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:33:06,511|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:33:06,512|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:33:09,516|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:33:09,517|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:33:12,521|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:33:12,521|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:33:15,526|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:33:15,527|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:33:18,530|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:33:18,531|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:33:21,535|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:33:21,535|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:33:24,540|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:33:24,541|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:33:27,545|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:33:27,546|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:33:30,548|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:33:30,549|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:33:33,551|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:33:33,552|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:33:36,556|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:33:36,557|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:33:39,560|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:33:39,561|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:33:42,564|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:33:42,565|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:33:45,570|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:33:45,570|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:33:48,574|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:33:48,575|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:33:51,579|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:33:51,580|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:33:54,584|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:33:54,585|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:33:57,587|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:33:57,587|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:34:00,591|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:34:00,592|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:34:03,595|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:34:03,595|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:34:06,599|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:34:06,599|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:34:09,604|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:34:09,605|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:34:12,609|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:34:12,610|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:34:15,614|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:34:15,615|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:34:18,617|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:34:18,618|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:34:21,621|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:34:21,622|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:34:24,626|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:34:24,627|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:34:27,631|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:34:27,632|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:34:30,635|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:34:30,636|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:34:33,638|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:34:33,639|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:34:36,644|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:34:36,644|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:34:39,649|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:34:39,649|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:34:42,654|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:34:42,655|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:34:45,658|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:34:45,659|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:34:48,662|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:34:48,663|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:34:51,666|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:34:51,667|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:34:54,672|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:34:54,672|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:34:57,677|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:34:57,678|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:35:00,681|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:35:00,681|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:35:03,686|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:35:03,686|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:35:06,691|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:35:06,691|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:35:09,694|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:35:09,695|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:35:12,699|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:35:12,700|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:35:15,704|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:35:15,705|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:35:18,708|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:35:18,709|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:35:21,711|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:35:21,712|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:35:24,715|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:35:24,716|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:35:27,720|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:35:27,721|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:35:30,725|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:35:30,726|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:35:33,729|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:35:33,730|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:35:36,735|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:35:36,736|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:35:39,739|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:35:39,740|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:35:42,744|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:35:42,745|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:35:45,748|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:35:45,749|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:35:48,752|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:35:48,753|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:35:51,755|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:35:51,755|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:35:54,760|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:35:54,761|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:35:57,764|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:35:57,765|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:36:00,769|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:36:00,770|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:36:03,775|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:36:03,776|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:36:06,780|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:36:06,781|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:36:09,786|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:36:09,787|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:36:12,789|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:36:12,790|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:36:15,794|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:36:15,795|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:36:18,800|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:36:18,801|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:36:21,803|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:36:21,804|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:36:24,808|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:36:24,809|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:36:27,814|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:36:27,814|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:36:30,817|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:36:30,817|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:36:33,821|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:36:33,822|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:36:36,825|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:36:36,826|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:36:39,830|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:36:39,830|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:36:42,835|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:36:42,836|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:36:45,838|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:36:45,839|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:36:48,843|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:36:48,844|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:36:51,848|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:36:51,848|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:36:54,851|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:36:54,851|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:36:57,856|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:36:57,857|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:37:00,861|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:37:00,862|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:37:03,864|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:37:03,865|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:37:06,870|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:37:06,871|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:37:09,874|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:37:09,874|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:37:12,878|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:37:12,879|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:37:15,883|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:37:15,884|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:37:18,888|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:37:18,889|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:37:21,893|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:37:21,894|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:37:24,897|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:37:24,897|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:37:27,900|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:37:27,901|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:37:30,905|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:37:30,905|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:37:33,910|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:37:33,910|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:37:36,914|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:37:36,914|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:37:39,917|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:37:39,917|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:37:42,921|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:37:42,921|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:37:45,924|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:37:45,925|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:37:48,929|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:37:48,930|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:37:51,934|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:37:51,935|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:37:54,937|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:37:54,937|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:37:57,942|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:37:57,942|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:38:00,947|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:38:00,948|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:38:03,951|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:38:03,951|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:38:06,955|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:38:06,955|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:38:09,959|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:38:09,960|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:38:12,964|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:38:12,964|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:38:15,967|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:38:15,968|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:38:18,972|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:38:18,972|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:38:21,974|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:38:21,975|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:38:24,979|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:38:24,980|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:38:27,984|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:38:27,984|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:38:30,988|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:38:30,989|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:38:33,991|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:38:33,992|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:38:36,995|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:38:36,996|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:38:40,000|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:38:40,001|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:38:43,005|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:38:43,005|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:38:46,008|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:38:46,008|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:38:49,011|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:38:49,011|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:38:52,015|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:38:52,015|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:38:55,018|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:38:55,019|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:38:58,021|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:38:58,022|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:39:01,024|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:39:01,025|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:39:04,027|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:39:04,027|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:39:07,031|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:39:07,031|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:39:10,035|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:39:10,036|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:39:13,039|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:39:13,040|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:39:16,044|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:39:16,045|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:39:19,048|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:39:19,048|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:39:22,052|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:39:22,052|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:39:25,057|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:39:25,058|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:39:28,061|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:39:28,061|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:39:31,064|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:39:31,065|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:39:34,067|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:39:34,068|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:39:37,071|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:39:37,072|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:39:40,075|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:39:40,076|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:39:43,080|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:39:43,080|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:39:46,084|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:39:46,084|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:39:49,088|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:39:49,089|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:39:52,092|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:39:52,092|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:39:55,096|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:39:55,097|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:39:58,101|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:39:58,101|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:40:01,104|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:40:01,105|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:40:04,109|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:40:04,109|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:40:07,114|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:40:07,115|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:40:10,118|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:40:10,118|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:40:13,122|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:40:13,122|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:40:16,127|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:40:16,128|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:40:19,131|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:40:19,131|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:40:22,135|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:40:22,136|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:40:25,141|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:40:25,141|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:40:28,145|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:40:28,145|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:40:31,150|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:40:31,151|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:40:34,156|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:40:34,156|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:40:37,161|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:40:37,162|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:40:40,165|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:40:40,165|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:40:43,167|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:40:43,168|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:40:46,171|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:40:46,172|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:40:49,174|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:40:49,174|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:40:52,179|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:40:52,180|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:40:55,184|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:40:55,185|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:40:58,189|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:40:58,190|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:41:01,195|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:41:01,196|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:41:04,200|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:41:04,201|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:41:07,205|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:41:07,206|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:41:10,208|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:41:10,209|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:41:13,212|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:41:13,213|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:41:16,216|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:41:16,217|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:41:19,221|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:41:19,222|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:41:22,225|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:41:22,226|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:41:25,231|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:41:25,232|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:41:28,235|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:41:28,236|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:41:31,239|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:41:31,240|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:41:34,244|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:41:34,245|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:41:37,247|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:41:37,247|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:41:40,249|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:41:40,250|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:41:43,254|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:41:43,255|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:41:46,258|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:41:46,259|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:41:49,264|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:41:49,264|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:41:52,269|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:41:52,270|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:41:55,274|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:41:55,275|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:41:58,280|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:41:58,280|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:42:01,284|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:42:01,284|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:42:04,288|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:42:04,288|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:42:07,292|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:42:07,292|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:42:10,297|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:42:10,298|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:42:13,301|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:42:13,302|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:42:16,305|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:42:16,306|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:42:19,310|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:42:19,311|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:42:22,315|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:42:22,316|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:42:25,320|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:42:25,321|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:42:28,324|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:42:28,325|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:42:31,327|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:42:31,328|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:42:34,332|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:42:34,333|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:42:37,337|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:42:37,338|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:42:40,341|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:42:40,342|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:42:43,345|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:42:43,346|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:42:46,351|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:42:46,352|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:42:49,355|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:42:49,356|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:42:52,358|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:42:52,359|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:42:55,364|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:42:55,364|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:42:58,367|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:42:58,368|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:43:01,372|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:43:01,373|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:43:04,378|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:43:04,378|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:43:07,382|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:43:07,382|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:43:10,386|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:43:10,387|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:43:13,391|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:43:13,391|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:43:16,395|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:43:16,395|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:43:19,399|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:43:19,400|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:43:22,404|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:43:22,404|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:43:25,407|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:43:25,408|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:43:28,411|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:43:28,411|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:43:31,414|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:43:31,415|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:43:34,418|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:43:34,418|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:43:37,421|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:43:37,421|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:43:40,425|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:43:40,425|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:43:43,427|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:43:43,428|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:43:46,431|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:43:46,432|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:43:49,434|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:43:49,434|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:43:52,438|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:43:52,439|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:43:55,441|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:43:55,441|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:43:58,444|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:43:58,444|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:44:01,447|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:44:01,448|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:44:04,450|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:44:04,451|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:44:07,454|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:44:07,455|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:44:10,457|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:44:10,457|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:44:13,460|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:44:13,461|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:44:16,464|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:44:16,464|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:44:19,467|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:44:19,467|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:44:22,470|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:44:22,470|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:44:25,473|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:44:25,473|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:44:28,476|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:44:28,476|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:44:31,479|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:44:31,480|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:44:34,482|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:44:34,483|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:44:37,486|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:44:37,486|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:44:40,489|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:44:40,489|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:44:43,492|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:44:43,493|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:44:46,496|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:44:46,496|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:44:49,497|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:44:49,497|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:44:52,500|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:44:52,500|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:44:55,503|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:44:55,504|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:44:58,507|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:44:58,508|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:45:01,510|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:45:01,511|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:45:04,514|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:45:04,515|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:45:07,518|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:45:07,518|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:45:10,521|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:45:10,521|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:45:13,524|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:45:13,525|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:45:16,528|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:45:16,528|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:45:19,531|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:45:19,531|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:45:22,534|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:45:22,534|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:45:25,538|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:45:25,538|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:45:28,541|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:45:28,542|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:45:31,545|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:45:31,545|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:45:34,549|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:45:34,550|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:45:37,554|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:45:37,554|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:45:40,558|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:45:40,559|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:45:43,564|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:45:43,564|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:45:46,568|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:45:46,568|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:45:49,572|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:45:49,573|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:45:52,576|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:45:52,576|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:45:55,581|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:45:55,582|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:45:58,584|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:45:58,585|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:46:01,588|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:46:01,588|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:46:04,591|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:46:04,591|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:46:07,595|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:46:07,595|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:46:10,598|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:46:10,599|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:46:13,602|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:46:13,603|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:46:16,607|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:46:16,608|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:46:19,610|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:46:19,610|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:46:22,614|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:46:22,615|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:46:25,617|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:46:25,618|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:46:28,621|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:46:28,622|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:46:31,627|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:46:31,628|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:46:34,631|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:46:34,632|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:46:37,634|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:46:37,635|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:46:40,638|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:46:40,639|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:46:43,643|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:46:43,643|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:46:46,648|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:46:46,648|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:46:49,651|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:46:49,651|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:46:52,654|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:46:52,655|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:46:55,658|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:46:55,658|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:46:58,661|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:46:58,662|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:47:01,666|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:47:01,667|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:47:04,671|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:47:04,671|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:47:07,674|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:47:07,674|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:47:10,678|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:47:10,678|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:47:13,683|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:47:13,684|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:47:16,687|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:47:16,688|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:47:19,691|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:47:19,692|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:47:22,696|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:47:22,696|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:47:25,701|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:47:25,701|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:47:28,705|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:47:28,706|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:47:31,710|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:47:31,711|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:47:34,714|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:47:34,715|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:47:37,719|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:47:37,720|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:47:40,724|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:47:40,725|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:47:43,727|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:47:43,728|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:47:46,732|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:47:46,732|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:47:49,737|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:47:49,738|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:47:52,741|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:47:52,742|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:47:55,744|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:47:55,745|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:47:58,748|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:47:58,748|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:48:01,752|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:48:01,752|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:48:04,756|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:48:04,757|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:48:07,762|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:48:07,762|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:48:10,767|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:48:10,768|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:48:13,771|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:48:13,772|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:48:16,777|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:48:16,778|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:48:19,781|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:48:19,781|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:48:22,784|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:48:22,785|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:48:25,789|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:48:25,790|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:48:28,793|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:48:28,794|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:48:31,797|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:48:31,798|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:48:34,801|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:48:34,801|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:48:37,804|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:48:37,805|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:48:40,808|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:48:40,809|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:48:43,813|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:48:43,814|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:48:46,818|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:48:46,818|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:48:49,821|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:48:49,822|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:48:52,826|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:48:52,826|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:48:55,831|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:48:55,832|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:48:58,835|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:48:58,835|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:49:01,838|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:49:01,839|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:49:04,841|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:49:04,841|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:49:07,845|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:49:07,845|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:49:10,851|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:49:10,852|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:49:13,855|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:49:13,856|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:49:16,860|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:49:16,860|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:49:19,865|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:49:19,865|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:49:22,871|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:49:22,872|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:49:25,876|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:49:25,877|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:49:28,881|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:49:28,882|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:49:31,887|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:49:31,887|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:49:34,891|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:49:34,891|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:49:37,895|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:49:37,896|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:49:40,897|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:49:40,898|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:49:43,902|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:49:43,902|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:49:46,907|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:49:46,908|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:49:49,911|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:49:49,911|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:49:52,914|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:49:52,915|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:49:55,919|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:49:55,920|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:49:58,925|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:49:58,926|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:50:01,930|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:50:01,931|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:50:04,934|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:50:04,935|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:50:07,938|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:50:07,939|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:50:10,944|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:50:10,945|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:50:13,948|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:50:13,949|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:50:16,952|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:50:16,952|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:50:19,957|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:50:19,958|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:50:22,961|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:50:22,961|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:50:25,965|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:50:25,965|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:50:28,967|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:50:28,968|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:50:31,971|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:50:31,971|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:50:34,974|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:50:34,975|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:50:37,977|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:50:37,978|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:50:40,982|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:50:40,983|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:50:43,986|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:50:43,986|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:50:46,991|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:50:46,991|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:50:49,994|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:50:49,994|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:50:52,999|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:50:52,999|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:50:56,003|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:50:56,003|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:50:59,008|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:50:59,008|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:51:02,012|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:51:02,013|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:51:05,017|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:51:05,018|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:51:08,021|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:51:08,021|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:51:11,025|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:51:11,026|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:51:14,028|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:51:14,029|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:51:17,032|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:51:17,032|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:51:20,036|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:51:20,037|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:51:23,041|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:51:23,042|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:51:26,045|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:51:26,045|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:51:29,050|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:51:29,050|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:51:32,054|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:51:32,055|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:51:35,058|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:51:35,058|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:51:38,061|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:51:38,062|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:51:41,064|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:51:41,065|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:51:44,069|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:51:44,070|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:51:47,073|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:51:47,074|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:51:50,078|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:51:50,079|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:51:53,081|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:51:53,081|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:51:56,084|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:51:56,084|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:51:59,087|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:51:59,088|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:52:02,092|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:52:02,093|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:52:05,097|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:52:05,098|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:52:08,101|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:52:08,102|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:52:11,106|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:52:11,107|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:52:14,111|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:52:14,112|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:52:17,117|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:52:17,118|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:52:20,121|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:52:20,122|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:52:23,124|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:52:23,125|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:52:26,127|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:52:26,128|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:52:29,132|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:52:29,133|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:52:32,136|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:52:32,137|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:52:35,141|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:52:35,142|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:52:38,144|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:52:38,145|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:52:41,149|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:52:41,149|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:52:44,154|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:52:44,154|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:52:47,157|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:52:47,158|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:52:50,161|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:52:50,161|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:52:53,166|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:52:53,167|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:52:56,171|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:52:56,171|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:52:59,174|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:52:59,175|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:53:02,179|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:53:02,179|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:53:05,183|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:53:05,184|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:53:08,188|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:53:08,188|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:53:11,191|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:53:11,192|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:53:14,197|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:53:14,198|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:53:17,201|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:53:17,202|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:53:20,206|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:53:20,206|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:53:23,210|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:53:23,210|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:53:26,214|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:53:26,215|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:53:29,219|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:53:29,220|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:53:32,224|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:53:32,225|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:53:35,227|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:53:35,227|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:53:38,231|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:53:38,231|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:53:41,234|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:53:41,234|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:53:44,238|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:53:44,238|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:53:47,241|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:53:47,242|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:53:50,247|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:53:50,247|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:53:53,252|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:53:53,253|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:53:56,255|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:53:56,256|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:53:59,259|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:53:59,259|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:54:02,263|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:54:02,263|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:54:05,267|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:54:05,268|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:54:08,271|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:54:08,272|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:54:11,276|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:54:11,277|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:54:14,281|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:54:14,281|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:54:17,285|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:54:17,286|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:54:20,291|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:54:20,292|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:54:23,294|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:54:23,295|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:54:26,298|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:54:26,299|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:54:29,304|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:54:29,304|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:54:32,308|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:54:32,309|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:54:35,311|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:54:35,312|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:54:38,314|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:54:38,315|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:54:41,318|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:54:41,319|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:54:44,323|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:54:44,324|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:54:47,328|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:54:47,329|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:54:50,333|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:54:50,334|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:54:53,337|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:54:53,338|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:54:56,341|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:54:56,342|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:54:59,345|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:54:59,346|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:55:02,349|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:55:02,350|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:55:05,354|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:55:05,354|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:55:08,358|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:55:08,359|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:55:11,364|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:55:11,364|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:55:14,370|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:55:14,371|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:55:17,375|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:55:17,376|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:55:20,378|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:55:20,379|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:55:23,382|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:55:23,382|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:55:26,385|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:55:26,386|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:55:29,388|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:55:29,389|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:55:32,393|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:55:32,393|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:55:35,398|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:55:35,399|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:55:38,403|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:55:38,403|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:55:41,407|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:55:41,407|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:55:44,410|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:55:44,410|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:55:47,414|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:55:47,414|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:55:50,418|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:55:50,418|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:55:53,421|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:55:53,422|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:55:56,426|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:55:56,426|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:55:59,429|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:55:59,430|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:56:02,434|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:56:02,434|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:56:05,438|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:56:05,439|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:56:08,442|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:56:08,443|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:56:11,447|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:56:11,448|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:56:14,452|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:56:14,452|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:56:17,457|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:56:17,458|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:56:20,461|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:56:20,462|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:56:23,467|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:56:23,468|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:56:26,471|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:56:26,472|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:56:29,477|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:56:29,478|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:56:32,482|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:56:32,482|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:56:35,487|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:56:35,488|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:56:38,492|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:56:38,493|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:56:41,495|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:56:41,496|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:56:44,501|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:56:44,502|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:56:47,505|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:56:47,506|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:56:50,511|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:56:50,512|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:56:53,514|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:56:53,515|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:56:56,518|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:56:56,519|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:56:59,523|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:56:59,523|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:57:02,525|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:57:02,525|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:57:05,530|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:57:05,530|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:57:08,534|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:57:08,534|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:57:11,537|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:57:11,537|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:57:14,540|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:57:14,541|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:57:17,545|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:57:17,545|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:57:20,547|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:57:20,548|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:57:23,550|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:57:23,550|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:57:26,553|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:57:26,553|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:57:29,556|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:57:29,557|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:57:32,560|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:57:32,560|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:57:35,563|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:57:35,563|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:57:38,567|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:57:38,567|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:57:41,570|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:57:41,570|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:57:44,573|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:57:44,574|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:57:47,577|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:57:47,577|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:57:50,580|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:57:50,580|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:57:53,583|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:57:53,583|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:57:56,586|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:57:56,586|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:57:59,589|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:57:59,589|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:58:02,592|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:58:02,592|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:58:05,594|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:58:05,594|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:58:08,597|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:58:08,597|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:58:11,600|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:58:11,600|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:58:14,603|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:58:14,603|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:58:17,607|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:58:17,607|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:58:20,610|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:58:20,611|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:58:23,614|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:58:23,614|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:58:26,618|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:58:26,618|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:58:29,621|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:58:29,621|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:58:32,624|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:58:32,624|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:58:35,627|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:58:35,628|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:58:38,631|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:58:38,631|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:58:41,634|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:58:41,635|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:58:44,637|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:58:44,638|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:58:47,641|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:58:47,642|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:58:50,644|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:58:50,645|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:58:53,648|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:58:53,648|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:58:56,651|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:58:56,651|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:58:59,654|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:58:59,655|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:59:02,658|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:59:02,658|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:59:05,661|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:59:05,662|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:59:08,664|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:59:08,665|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:59:11,668|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:59:11,668|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:59:14,671|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:59:14,671|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:59:17,676|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:59:17,677|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:59:20,681|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:59:20,682|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:59:23,687|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:59:23,687|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:59:26,691|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:59:26,692|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:59:29,694|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:59:29,695|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:59:32,699|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:59:32,700|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:59:35,704|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:59:35,705|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:59:38,709|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:59:38,710|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:59:41,715|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:59:41,716|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:59:44,720|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:59:44,721|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:59:47,725|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:59:47,726|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:59:50,730|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:59:50,731|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:59:53,734|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:59:53,734|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:59:56,739|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:59:56,740|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 12:59:59,744|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 12:59:59,745|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:00:02,749|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:00:02,749|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:00:05,754|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:00:05,755|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:00:08,759|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:00:08,760|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:00:11,764|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:00:11,765|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:00:14,767|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:00:14,768|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:00:17,771|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:00:17,772|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:00:20,777|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:00:20,778|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:00:23,782|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:00:23,783|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:00:26,788|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:00:26,788|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:00:29,792|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:00:29,793|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:00:32,797|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:00:32,798|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:00:35,801|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:00:35,802|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:00:38,805|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:00:38,806|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:00:41,810|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:00:41,810|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:00:44,815|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:00:44,815|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:00:47,819|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:00:47,820|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:00:50,824|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:00:50,825|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:00:53,828|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:00:53,829|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:00:56,833|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:00:56,834|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:00:59,837|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:00:59,838|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:01:02,841|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:01:02,842|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:01:05,846|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:01:05,847|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:01:08,851|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:01:08,851|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:01:11,854|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:01:11,855|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:01:14,858|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:01:14,859|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:01:17,861|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:01:17,862|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:01:20,866|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:01:20,867|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:01:23,869|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:01:23,870|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:01:26,873|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:01:26,874|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:01:29,877|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:01:29,878|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:01:32,881|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:01:32,882|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:01:35,885|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:01:35,885|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:01:38,889|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:01:38,890|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:01:41,894|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:01:41,895|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:01:44,899|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:01:44,899|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:01:47,903|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:01:47,903|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:01:50,907|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:01:50,908|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:01:53,911|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:01:53,912|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:01:56,914|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:01:56,914|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:01:59,917|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:01:59,917|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:02:02,921|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:02:02,921|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:02:05,925|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:02:05,926|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:02:08,930|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:02:08,931|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:02:11,935|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:02:11,936|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:02:14,940|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:02:14,941|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:02:17,944|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:02:17,945|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:02:20,949|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:02:20,949|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:02:23,952|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:02:23,952|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:02:26,957|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:02:26,957|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:02:29,960|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:02:29,961|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:02:32,964|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:02:32,964|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:02:35,967|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:02:35,968|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:02:38,971|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:02:38,971|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:02:41,974|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:02:41,974|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:02:44,977|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:02:44,978|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:02:47,981|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:02:47,981|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:02:50,984|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:02:50,985|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:02:53,988|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:02:53,988|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:02:56,991|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:02:56,991|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:02:59,995|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:02:59,995|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:03:02,997|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:03:02,998|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:03:06,002|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:03:06,002|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:03:09,007|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:03:09,008|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:03:12,012|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:03:12,012|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:03:15,017|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:03:15,018|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:03:18,022|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:03:18,023|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:03:21,027|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:03:21,028|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:03:24,033|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:03:24,034|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:03:27,040|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:03:27,041|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:03:30,044|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:03:30,044|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:03:33,048|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:03:33,048|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:03:36,052|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:03:36,053|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:03:39,058|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:03:39,058|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:03:42,062|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:03:42,062|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:03:45,066|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:03:45,066|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:03:48,071|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:03:48,071|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:03:51,075|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:03:51,076|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:03:54,080|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:03:54,081|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:03:57,084|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:03:57,085|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:04:00,087|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:04:00,088|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:04:03,092|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:04:03,092|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:04:06,098|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:04:06,098|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:04:09,104|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:04:09,105|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:04:12,109|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:04:12,110|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:04:15,114|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:04:15,115|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:04:18,118|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:04:18,119|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:04:21,124|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:04:21,125|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:04:24,129|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:04:24,130|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:04:27,134|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:04:27,134|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:04:30,138|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:04:30,139|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:04:33,144|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:04:33,145|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:04:36,149|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:04:36,149|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:04:39,155|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:04:39,156|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:04:42,158|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:04:42,159|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:04:45,163|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:04:45,164|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:04:48,168|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:04:48,169|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:04:51,174|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:04:51,174|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:04:54,178|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:04:54,178|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:04:57,181|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:04:57,182|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:05:00,185|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:05:00,185|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:05:03,190|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:05:03,191|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:05:06,196|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:05:06,197|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:05:09,201|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:05:09,202|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:05:12,204|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:05:12,205|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:05:15,208|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:05:15,209|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:05:18,211|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:05:18,211|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:05:21,215|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:05:21,215|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:05:24,220|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:05:24,221|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:05:27,226|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:05:27,227|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:05:30,231|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:05:30,232|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:05:33,236|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:05:33,237|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:05:36,241|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:05:36,241|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:05:39,246|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:05:39,247|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:05:42,251|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:05:42,252|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:05:45,254|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:05:45,254|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:05:48,258|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:05:48,259|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:05:51,263|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:05:51,264|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:05:54,268|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:05:54,269|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:05:57,271|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:05:57,272|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:06:00,277|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:06:00,278|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:06:03,282|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:06:03,283|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:06:06,288|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:06:06,289|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:06:09,294|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:06:09,295|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:06:12,299|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:06:12,300|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:06:15,304|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:06:15,305|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:06:18,308|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:06:18,308|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:06:21,311|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:06:21,312|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:06:24,317|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:06:24,317|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:06:27,321|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:06:27,321|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:06:30,325|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:06:30,326|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:06:33,329|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:06:33,330|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:06:36,334|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:06:36,335|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:06:39,338|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:06:39,339|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:06:42,344|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:06:42,345|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:06:45,350|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:06:45,351|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:06:48,355|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:06:48,356|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:06:51,360|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:06:51,361|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:06:54,365|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:06:54,365|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:06:57,368|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:06:57,368|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:07:00,372|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:07:00,373|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:07:03,378|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:07:03,379|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:07:06,383|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:07:06,384|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:07:09,387|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:07:09,388|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:07:12,391|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:07:12,392|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:07:15,396|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:07:15,396|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:07:18,400|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:07:18,401|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:07:21,404|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:07:21,405|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:07:24,407|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:07:24,408|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:07:27,411|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:07:27,411|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:07:30,414|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:07:30,414|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:07:33,417|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:07:33,418|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:07:36,421|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:07:36,421|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:07:39,424|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:07:39,425|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:07:42,427|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:07:42,427|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:07:45,430|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:07:45,431|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:07:48,435|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:07:48,435|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:07:51,439|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:07:51,439|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:07:54,443|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:07:54,444|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:07:57,447|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:07:57,448|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:08:00,452|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:08:00,452|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:08:03,455|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:08:03,455|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:08:06,457|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:08:06,458|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:08:09,461|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:08:09,462|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:08:12,464|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:08:12,464|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:08:15,468|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:08:15,469|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:08:18,471|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:08:18,472|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:08:21,476|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:08:21,477|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:08:24,481|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:08:24,482|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:08:27,486|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:08:27,487|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:08:30,492|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:08:30,492|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:08:33,497|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:08:33,498|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:08:36,501|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:08:36,501|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:08:39,504|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:08:39,505|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:08:42,508|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:08:42,508|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:08:45,513|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:08:45,514|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:08:48,519|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:08:48,521|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:08:51,525|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:08:51,526|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:08:54,530|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:08:54,531|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:08:57,534|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:08:57,534|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:09:00,538|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:09:00,539|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:09:03,543|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:09:03,544|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:09:06,547|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:09:06,548|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:09:09,553|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:09:09,554|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:09:12,558|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:09:12,559|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:09:15,561|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:09:15,562|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:09:18,565|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:09:18,566|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:09:21,570|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:09:21,571|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:09:24,576|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:09:24,577|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:09:27,581|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:09:27,582|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:09:30,586|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:09:30,587|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:09:33,591|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:09:33,592|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:09:36,595|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:09:36,596|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:09:39,600|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:09:39,601|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:09:42,604|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:09:42,605|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:09:45,609|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:09:45,610|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:09:48,614|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:09:48,615|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:09:51,617|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:09:51,618|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:09:54,621|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:09:54,622|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:09:57,626|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:09:57,626|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:10:00,629|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:10:00,629|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:10:03,631|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:10:03,632|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:10:06,635|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:10:06,635|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:10:09,637|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:10:09,637|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:10:12,641|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:10:12,641|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:10:15,643|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:10:15,644|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:10:18,647|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:10:18,648|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:10:21,652|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:10:21,652|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:10:24,656|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:10:24,656|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:10:27,660|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:10:27,660|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:10:30,664|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:10:30,664|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:10:33,667|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:10:33,667|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:10:36,670|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:10:36,670|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:10:39,674|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:10:39,674|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:10:42,677|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:10:42,677|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:10:45,680|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:10:45,680|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:10:48,683|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:10:48,683|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:10:51,686|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:10:51,686|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:10:54,689|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:10:54,689|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:10:57,692|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:10:57,693|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:11:00,697|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:11:00,697|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:11:03,700|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:11:03,700|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:11:06,701|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:11:06,702|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:11:09,703|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:11:09,704|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:11:12,706|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:11:12,707|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:11:15,710|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:11:15,710|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:11:18,714|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:11:18,715|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:11:21,717|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:11:21,718|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:11:24,720|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:11:24,721|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:11:27,724|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:11:27,725|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:11:30,727|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:11:30,727|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:11:33,731|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:11:33,731|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:11:36,734|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:11:36,734|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:11:39,738|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:11:39,738|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:11:42,741|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:11:42,741|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:11:45,745|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:11:45,746|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:11:48,750|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:11:48,751|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:11:51,755|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:11:51,756|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:11:54,760|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:11:54,761|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:11:57,764|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:11:57,765|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:12:00,769|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:12:00,770|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:12:03,775|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:12:03,776|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:12:06,778|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:12:06,779|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:12:09,781|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:12:09,782|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:12:12,785|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:12:12,785|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:12:15,790|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:12:15,790|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:12:18,794|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:12:18,794|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:12:21,798|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:12:21,799|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:12:24,804|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:12:24,805|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:12:27,809|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:12:27,809|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:12:30,814|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:12:30,814|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:12:33,817|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:12:33,818|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:12:36,821|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:12:36,822|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:12:39,826|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:12:39,826|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:12:42,831|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:12:42,831|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:12:45,834|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:12:45,835|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:12:48,837|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:12:48,837|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:12:51,841|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:12:51,841|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:12:54,844|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:12:54,844|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:12:57,847|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:12:57,848|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:13:00,851|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:13:00,852|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:13:03,857|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:13:03,857|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:13:06,862|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:13:06,863|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:13:09,867|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:13:09,868|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:13:12,871|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:13:12,872|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:13:15,876|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:13:15,877|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:13:18,881|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:13:18,881|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:13:21,884|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:13:21,885|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:13:24,887|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:13:24,887|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:13:27,891|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:13:27,891|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:13:30,894|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:13:30,895|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:13:33,897|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:13:33,898|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:13:36,901|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:13:36,901|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:13:39,903|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:13:39,903|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:13:42,906|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:13:42,907|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:13:45,910|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:13:45,911|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:13:48,914|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:13:48,915|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:13:51,919|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:13:51,920|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:13:54,923|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:13:54,923|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:13:57,927|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:13:57,928|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:14:00,931|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:14:00,932|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:14:03,936|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:14:03,936|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:14:06,941|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:14:06,942|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:14:09,946|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:14:09,946|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:14:12,949|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:14:12,950|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:14:15,954|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:14:15,955|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:14:18,957|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:14:18,958|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:14:21,961|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:14:21,961|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:14:24,964|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:14:24,964|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:14:27,967|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:14:27,968|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:14:30,970|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:14:30,971|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:14:33,975|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:14:33,976|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:14:36,980|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:14:36,981|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:14:39,985|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:14:39,985|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:14:42,990|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:14:42,990|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:14:45,995|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:14:45,996|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:14:49,000|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:14:49,001|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:14:52,004|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:14:52,005|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:14:55,008|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:14:55,008|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:14:58,012|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:14:58,013|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:15:01,017|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:15:01,018|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:15:04,021|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:15:04,022|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:15:07,026|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:15:07,026|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:15:10,031|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:15:10,031|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:15:13,035|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:15:13,036|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:15:16,038|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:15:16,039|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:15:19,041|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:15:19,041|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:15:22,043|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:15:22,043|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

