[ERROR|2023-12-07 10:15:19,392|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:15:19,418|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:15:22,422|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:15:22,423|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:15:23,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:15:25,428|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:15:25,428|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:15:28,432|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:15:28,432|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:15:31,435|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:15:31,436|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:15:34,441|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:15:34,441|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:15:37,446|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:15:37,447|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:15:40,449|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:15:40,450|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:15:43,455|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:15:43,456|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:15:46,459|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:15:46,459|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:15:49,463|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:15:49,463|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:15:52,469|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:15:52,470|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:15:55,474|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:15:55,475|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:15:58,480|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:15:58,481|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:16:01,485|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:16:01,486|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:16:04,489|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:16:04,489|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:16:07,492|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:16:07,493|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:16:10,498|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:16:10,499|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:16:13,503|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:16:13,504|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:16:16,509|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:16:16,510|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:16:19,513|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:16:19,514|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:16:22,519|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:16:22,520|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:16:25,522|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:16:25,523|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:16:28,526|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:16:28,526|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:16:29,766|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:16:31,528|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:16:31,528|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:16:34,532|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:16:34,533|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:16:37,536|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:16:37,537|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:16:40,541|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:16:40,542|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:16:43,545|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:16:43,546|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:16:46,549|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:16:46,550|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:16:49,554|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:16:49,555|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:16:52,558|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:16:52,559|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:16:55,562|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:16:55,563|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:16:58,568|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:16:58,568|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:17:01,572|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:17:01,573|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:17:04,575|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:17:04,576|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:17:07,579|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:17:07,579|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:17:10,584|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:17:10,584|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:17:13,589|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:17:13,590|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:17:16,594|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:17:16,594|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:17:19,599|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:17:19,600|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:17:22,604|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:17:22,604|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:17:25,609|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:17:25,610|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:17:28,615|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:17:28,616|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:17:31,620|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:17:31,621|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:17:34,625|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:17:34,626|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:17:35,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:17:37,630|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:17:37,631|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:17:40,634|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:17:40,635|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:17:43,638|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:17:43,639|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:17:46,642|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:17:46,642|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:17:49,646|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:17:49,647|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:17:52,651|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:17:52,652|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:17:55,655|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:17:55,656|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:17:58,659|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:17:58,659|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:18:01,662|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:18:01,663|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:18:04,666|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:18:04,667|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:18:07,670|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:18:07,671|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:18:10,675|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:18:10,676|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:18:13,679|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:18:13,679|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:18:16,682|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:18:16,682|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:18:19,685|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:18:19,686|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:18:22,688|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:18:22,688|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:18:25,691|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:18:25,691|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:18:28,692|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:18:28,693|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:18:31,696|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:18:31,696|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:18:34,698|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:18:34,698|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:18:37,701|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:18:37,701|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:18:40,704|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:18:40,704|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:18:41,764|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:18:43,707|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:18:43,707|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:18:46,710|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:18:46,710|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:18:49,715|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:18:49,716|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:18:52,718|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:18:52,719|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:18:55,722|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:18:55,723|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:18:58,726|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:18:58,726|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:19:01,731|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:19:01,732|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:19:04,735|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:19:04,736|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:19:07,738|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:19:07,738|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:19:10,741|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:19:10,741|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:19:13,743|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:19:13,743|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:19:16,747|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:19:16,747|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:19:19,751|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:19:19,751|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:19:22,755|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:19:22,756|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:19:25,761|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:19:25,762|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:19:28,766|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:19:28,767|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:19:31,772|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:19:31,772|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:19:34,777|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:19:34,777|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:19:37,782|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:19:37,782|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:19:40,786|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:19:40,787|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:19:43,791|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:19:43,792|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:19:46,796|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:19:46,797|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:19:47,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:19:49,800|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:19:49,800|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:19:52,802|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:19:52,802|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:19:55,807|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:19:55,808|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:19:58,812|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:19:58,813|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:20:01,815|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:20:01,816|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:20:04,819|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:20:04,820|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:20:07,823|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:20:07,824|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:20:10,828|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:20:10,828|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:20:13,832|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:20:13,833|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:20:16,835|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:20:16,836|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:20:19,840|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:20:19,840|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:20:22,842|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:20:22,843|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:20:25,847|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:20:25,847|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:20:28,850|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:20:28,851|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:20:31,855|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:20:31,856|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:20:34,860|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:20:34,860|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:20:37,865|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:20:37,865|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:20:40,869|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:20:40,870|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:20:43,875|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:20:43,875|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:20:46,880|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:20:46,880|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:20:49,882|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:20:49,883|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:20:52,885|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:20:52,886|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:20:53,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:20:55,889|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:20:55,889|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:20:58,891|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:20:58,892|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:21:01,895|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:21:01,895|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:21:04,898|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:21:04,898|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:21:07,901|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:21:07,901|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:21:10,905|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:21:10,905|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:21:13,909|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:21:13,909|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:21:16,911|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:21:16,911|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:21:19,913|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:21:19,913|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:21:22,918|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:21:22,919|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:21:25,924|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:21:25,924|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:21:28,929|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:21:28,930|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:21:31,935|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:21:31,935|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:21:34,938|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:21:34,939|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:21:37,942|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:21:37,943|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:21:40,946|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:21:40,947|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:21:43,951|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:21:43,952|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:21:46,957|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:21:46,957|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:21:49,960|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:21:49,961|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:21:52,965|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:21:52,965|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:21:55,968|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:21:55,968|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:21:58,971|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:21:58,971|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:21:59,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:22:01,974|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:22:01,974|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:22:04,977|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:22:04,978|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:22:07,979|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:22:07,979|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:22:10,981|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:22:10,981|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:22:13,984|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:22:13,985|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:22:16,988|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:22:16,988|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:22:19,991|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:22:19,991|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:22:22,996|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:22:22,997|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:22:26,000|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:22:26,001|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:22:29,003|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:22:29,003|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:22:32,006|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:22:32,007|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:22:35,010|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:22:35,010|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:22:38,012|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:22:38,012|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:22:41,014|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:22:41,014|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:22:44,016|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:22:44,016|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:22:47,019|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:22:47,020|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:22:50,023|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:22:50,024|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:22:53,028|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:22:53,029|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:22:56,032|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:22:56,032|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:22:59,037|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:22:59,037|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:23:02,040|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:23:02,041|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:23:05,046|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:23:05,047|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:23:05,766|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:23:08,049|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:23:08,050|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:23:11,053|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:23:11,054|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:23:14,058|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:23:14,059|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:23:17,064|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:23:17,065|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:23:20,069|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:23:20,069|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:23:23,073|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:23:23,074|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:23:26,079|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:23:26,079|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:23:29,081|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:23:29,082|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:23:32,086|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:23:32,086|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:23:35,088|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:23:35,088|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:23:38,091|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:23:38,091|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:23:41,093|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:23:41,094|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:23:44,098|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:23:44,099|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:23:47,102|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:23:47,102|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:23:50,105|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:23:50,106|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:23:53,110|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:23:53,111|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:23:56,115|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:23:56,115|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:23:59,118|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:23:59,119|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:24:02,122|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:24:02,122|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:24:05,125|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:24:05,125|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:24:08,128|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:24:08,128|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:24:11,130|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:24:11,130|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:24:11,764|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:24:14,133|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:24:14,134|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:24:17,135|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:24:17,135|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:24:20,138|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:24:20,139|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:24:23,141|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:24:23,141|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:24:26,144|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:24:26,144|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:24:29,147|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:24:29,148|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:24:32,149|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:24:32,150|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:24:35,154|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:24:35,155|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:24:38,160|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:24:38,161|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:24:41,166|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:24:41,167|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:24:44,171|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:24:44,172|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:24:47,176|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:24:47,177|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:24:50,181|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:24:50,182|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:24:53,184|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:24:53,184|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:24:56,187|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:24:56,187|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:24:59,192|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:24:59,193|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:25:02,194|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:25:02,194|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:25:05,197|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:25:05,198|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:25:08,201|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:25:08,201|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:25:11,203|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:25:11,204|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:25:14,208|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:25:14,209|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:25:17,211|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:25:17,211|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:25:17,764|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:25:20,214|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:25:20,214|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:25:23,217|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:25:23,217|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:25:26,221|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:25:26,221|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:25:29,225|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:25:29,226|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:25:32,231|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:25:32,232|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:25:35,235|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:25:35,236|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:25:38,240|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:25:38,240|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:25:41,244|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:25:41,245|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:25:44,248|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:25:44,248|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:25:47,252|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:25:47,253|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:25:50,258|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:25:50,258|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:25:53,262|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:25:53,263|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:25:56,268|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:25:56,269|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:25:59,273|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:25:59,273|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:26:02,278|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:26:02,279|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:26:05,283|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:26:05,283|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:26:08,288|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:26:08,288|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:26:11,291|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:26:11,292|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:26:14,295|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:26:14,295|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:26:17,299|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:26:17,299|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:26:20,304|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:26:20,305|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:26:23,308|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:26:23,309|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:26:23,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:26:26,312|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:26:26,313|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:26:29,315|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:26:29,316|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:26:32,319|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:26:32,320|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:26:35,325|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:26:35,326|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:26:38,330|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:26:38,331|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:26:41,336|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:26:41,336|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:26:44,341|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:26:44,341|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:26:47,346|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:26:47,346|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:26:50,351|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:26:50,352|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:26:53,357|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:26:53,357|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:26:56,362|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:26:56,363|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:26:59,366|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:26:59,366|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:27:02,370|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:27:02,370|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:27:05,374|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:27:05,374|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:27:08,375|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:27:08,375|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:27:11,378|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:27:11,379|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:27:14,383|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:27:14,384|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:27:17,388|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:27:17,389|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:27:20,391|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:27:20,391|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:27:23,393|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:27:23,394|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:27:26,398|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:27:26,398|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:27:29,401|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:27:29,401|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:27:29,764|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:27:32,405|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:27:32,405|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:27:35,406|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:27:35,407|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:27:38,408|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:27:38,408|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:27:41,411|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:27:41,411|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:27:44,413|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:27:44,414|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:27:47,418|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:27:47,418|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:27:50,421|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:27:50,421|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:27:53,424|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:27:53,425|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:27:56,428|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:27:56,428|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:27:59,431|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:27:59,431|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:28:02,434|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:28:02,434|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:28:05,436|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:28:05,437|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:28:08,440|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:28:08,441|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:28:11,443|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:28:11,444|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:28:14,447|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:28:14,448|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:28:17,450|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:28:17,450|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:28:20,454|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:28:20,454|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:28:23,457|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:28:23,458|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:28:26,461|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:28:26,461|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:28:29,464|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:28:29,465|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:28:32,466|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:28:32,466|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:28:35,468|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:28:35,468|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:28:35,764|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:28:38,471|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:28:38,471|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:28:41,472|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:28:41,473|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:28:44,474|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:28:44,475|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:28:47,478|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:28:47,478|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:28:50,481|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:28:50,481|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:28:53,484|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:28:53,484|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:28:56,487|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:28:56,487|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:28:59,490|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:28:59,490|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:29:02,494|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:29:02,495|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:29:05,499|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:29:05,500|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:29:08,503|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:29:08,503|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:29:11,508|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:29:11,508|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:29:14,512|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:29:14,512|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:29:17,514|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:29:17,514|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:29:20,517|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:29:20,517|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:29:23,519|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:29:23,519|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:29:26,522|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:29:26,523|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:29:29,525|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:29:29,526|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:29:32,529|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:29:32,530|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:29:35,534|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:29:35,534|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:29:38,537|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:29:38,538|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:29:41,541|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:29:41,542|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:29:41,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:29:44,545|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:29:44,546|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:29:47,549|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:29:47,549|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:29:50,553|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:29:50,553|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:29:53,556|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:29:53,556|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:29:56,558|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:29:56,558|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:29:59,561|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:29:59,561|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:30:02,564|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:30:02,565|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:30:05,568|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:30:05,568|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:30:08,572|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:30:08,573|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:30:11,577|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:30:11,578|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:30:14,583|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:30:14,584|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:30:17,588|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:30:17,588|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:30:20,589|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:30:20,590|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:30:23,594|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:30:23,595|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:30:26,600|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:30:26,601|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:30:29,605|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:30:29,606|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:30:32,612|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:30:32,613|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:30:35,615|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:30:35,616|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:30:38,620|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:30:38,621|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:30:41,626|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:30:41,626|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:30:44,631|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:30:44,632|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:30:47,638|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:30:47,639|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:30:47,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:30:50,643|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:30:50,644|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:30:53,647|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:30:53,648|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:30:56,653|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:30:56,654|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:30:59,659|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:30:59,660|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:31:02,666|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:31:02,667|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:31:05,670|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:31:05,670|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:31:08,675|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:31:08,676|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:31:11,680|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:31:11,681|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:31:14,685|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:31:14,686|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:31:17,691|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:31:17,693|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:31:20,697|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:31:20,698|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:31:23,701|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:31:23,702|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:31:26,705|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:31:26,706|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:31:29,709|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:31:29,710|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:31:32,714|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:31:32,715|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:31:35,719|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:31:35,720|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:31:38,725|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:31:38,726|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:31:41,730|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:31:41,731|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:31:44,734|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:31:44,734|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:31:47,737|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:31:47,738|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:31:50,742|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:31:50,743|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:31:53,746|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:31:53,747|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:31:53,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:31:56,750|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:31:56,751|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:31:59,754|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:31:59,755|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:32:02,759|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:32:02,760|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:32:05,764|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:32:05,764|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:32:08,769|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:32:08,769|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:32:11,772|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:32:11,773|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:32:14,778|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:32:14,778|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:32:17,781|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:32:17,781|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:32:20,785|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:32:20,786|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:32:23,791|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:32:23,792|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:32:26,795|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:32:26,796|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:32:29,798|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:32:29,799|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:32:32,803|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:32:32,804|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:32:35,806|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:32:35,807|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:32:38,811|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:32:38,811|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:32:41,815|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:32:41,816|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:32:44,819|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:32:44,820|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:32:47,823|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:32:47,824|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:32:50,828|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:32:50,829|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:32:53,833|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:32:53,834|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:32:56,839|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:32:56,840|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:32:59,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:32:59,841|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:32:59,842|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:33:02,845|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:33:02,846|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:33:05,849|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:33:05,850|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:33:08,853|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:33:08,854|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:33:11,858|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:33:11,859|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:33:14,863|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:33:14,863|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:33:17,868|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:33:17,869|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:33:20,872|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:33:20,872|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:33:23,876|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:33:23,877|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:33:26,882|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:33:26,883|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:33:29,886|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:33:29,886|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:33:32,888|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:33:32,889|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:33:35,893|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:33:35,894|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:33:38,898|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:33:38,899|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:33:41,903|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:33:41,904|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:33:44,908|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:33:44,908|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:33:47,911|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:33:47,912|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:33:50,916|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:33:50,917|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:33:53,921|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:33:53,921|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:33:56,923|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:33:56,924|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:33:59,927|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:33:59,928|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:34:02,932|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:34:02,932|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:34:05,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:34:05,935|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:34:05,936|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:34:08,940|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:34:08,940|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:34:11,943|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:34:11,943|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:34:14,944|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:34:14,944|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:34:17,947|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:34:17,948|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:34:20,951|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:34:20,951|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:34:23,954|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:34:23,955|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:34:26,958|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:34:26,959|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:34:29,962|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:34:29,962|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:34:32,965|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:34:32,965|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:34:35,968|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:34:35,968|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:34:38,971|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:34:38,972|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:34:41,974|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:34:41,974|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:34:44,976|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:34:44,976|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:34:47,979|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:34:47,979|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:34:50,983|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:34:50,984|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:34:53,988|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:34:53,988|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:34:56,991|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:34:56,992|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:34:59,995|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:34:59,995|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:35:02,998|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:35:02,999|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:35:06,002|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:35:06,002|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:35:09,005|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:35:09,005|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:35:11,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:35:12,007|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:35:12,008|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:35:15,011|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:35:15,012|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:35:18,015|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:35:18,015|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:35:21,018|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:35:21,018|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:35:24,022|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:35:24,022|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:35:27,024|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:35:27,024|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:35:30,026|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:35:30,027|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:35:33,031|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:35:33,032|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:35:36,035|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:35:36,036|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:35:39,039|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:35:39,040|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:35:42,043|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:35:42,044|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:35:45,048|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:35:45,049|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:35:48,053|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:35:48,053|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:35:51,057|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:35:51,057|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:35:54,060|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:35:54,061|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:35:57,064|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:35:57,065|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:36:00,068|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:36:00,068|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:36:03,071|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:36:03,071|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:36:06,074|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:36:06,075|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:36:09,079|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:36:09,079|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:36:12,082|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:36:12,082|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:36:15,086|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:36:15,087|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:36:17,767|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:36:18,091|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:36:18,092|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:36:21,095|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:36:21,096|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:36:24,098|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:36:24,098|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:36:27,102|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:36:27,102|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:36:30,105|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:36:30,106|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:36:33,108|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:36:33,109|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:36:36,112|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:36:36,113|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:36:39,115|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:36:39,116|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:36:42,119|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:36:42,120|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:36:45,123|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:36:45,124|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:36:48,128|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:36:48,129|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:36:51,132|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:36:51,132|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:36:54,135|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:36:54,135|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:36:57,137|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:36:57,138|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:37:00,139|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:37:00,140|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:37:03,144|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:37:03,144|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:37:06,148|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:37:06,148|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:37:09,151|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:37:09,152|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:37:12,154|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:37:12,154|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:37:15,157|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:37:15,157|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:37:18,160|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:37:18,160|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:37:21,162|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:37:21,162|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:37:23,764|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:37:24,165|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:37:24,165|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:37:27,168|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:37:27,168|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:37:30,171|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:37:30,172|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:37:33,174|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:37:33,174|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:37:36,176|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:37:36,176|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:37:39,179|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:37:39,180|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:37:42,183|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:37:42,183|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:37:45,187|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:37:45,188|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:37:48,191|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:37:48,192|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:37:51,196|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:37:51,196|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:37:54,200|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:37:54,200|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:37:57,204|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:37:57,205|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:38:00,208|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:38:00,208|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:38:03,211|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:38:03,211|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:38:06,214|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:38:06,214|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:38:09,217|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:38:09,217|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:38:12,220|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:38:12,220|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:38:15,223|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:38:15,224|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:38:18,228|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:38:18,228|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:38:21,232|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:38:21,233|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:38:24,238|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:38:24,238|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:38:27,242|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:38:27,243|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:38:29,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:38:30,246|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:38:30,247|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:38:33,250|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:38:33,251|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:38:36,254|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:38:36,254|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:38:39,258|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:38:39,259|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:38:42,261|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:38:42,262|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:38:45,264|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:38:45,264|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:38:48,267|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:38:48,267|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:38:51,270|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:38:51,271|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:38:54,274|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:38:54,274|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:38:57,278|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:38:57,278|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:39:00,281|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:39:00,282|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:39:03,285|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:39:03,285|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:39:06,289|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:39:06,289|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:39:09,293|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:39:09,293|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:39:12,297|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:39:12,298|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:39:15,301|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:39:15,302|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:39:18,306|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:39:18,306|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:39:21,309|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:39:21,309|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:39:24,312|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:39:24,312|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:39:27,316|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:39:27,316|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:39:30,320|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:39:30,320|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:39:33,323|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:39:33,323|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:39:35,766|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:39:36,326|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:39:36,326|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:39:39,330|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:39:39,330|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:39:42,334|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:39:42,334|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:39:45,338|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:39:45,339|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:39:48,342|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:39:48,342|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:39:51,345|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:39:51,345|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:39:54,350|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:39:54,351|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:39:57,354|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:39:57,354|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:40:00,359|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:40:00,360|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:40:03,364|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:40:03,366|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:40:06,368|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:40:06,369|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:40:09,372|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:40:09,372|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:40:12,375|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:40:12,375|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:40:15,378|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:40:15,379|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:40:18,383|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:40:18,384|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:40:21,388|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:40:21,389|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:40:24,393|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:40:24,394|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:40:27,399|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:40:27,400|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:40:30,403|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:40:30,403|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:40:33,406|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:40:33,406|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:40:36,411|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:40:36,411|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:40:39,416|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:40:39,416|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:40:41,764|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:40:42,418|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:40:42,418|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:40:45,421|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:40:45,421|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:40:48,424|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:40:48,425|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:40:51,428|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:40:51,429|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:40:54,432|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:40:54,432|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:40:57,434|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:40:57,435|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:41:00,438|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:41:00,438|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:41:03,441|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:41:03,441|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:41:06,444|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:41:06,445|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:41:09,448|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:41:09,449|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:41:12,452|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:41:12,452|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:41:15,455|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:41:15,456|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:41:18,458|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:41:18,458|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:41:21,461|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:41:21,461|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:41:24,464|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:41:24,464|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:41:27,468|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:41:27,468|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:41:30,471|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:41:30,471|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:41:33,475|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:41:33,476|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:41:36,478|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:41:36,478|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:41:39,481|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:41:39,481|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:41:42,486|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:41:42,487|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:41:45,491|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:41:45,492|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:41:47,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:41:48,494|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:41:48,495|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:41:51,498|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:41:51,498|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:41:54,501|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:41:54,502|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:41:57,505|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:41:57,505|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:42:00,507|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:42:00,508|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:42:03,511|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:42:03,511|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:42:06,515|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:42:06,515|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:42:09,518|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:42:09,518|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:42:12,521|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:42:12,521|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:42:15,524|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:42:15,524|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:42:18,526|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:42:18,527|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:42:21,530|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:42:21,530|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:42:24,533|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:42:24,533|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:42:27,536|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:42:27,536|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:42:30,538|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:42:30,538|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:42:33,540|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:42:33,541|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:42:36,543|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:42:36,544|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:42:39,546|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:42:39,546|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:42:42,550|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:42:42,550|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:42:45,552|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:42:45,552|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:42:48,554|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:42:48,554|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:42:51,557|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:42:51,557|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:42:53,764|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:42:54,559|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:42:54,560|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:42:57,563|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:42:57,564|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:43:00,567|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:43:00,568|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:43:03,571|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:43:03,571|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:43:06,574|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:43:06,574|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:43:09,577|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:43:09,578|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:43:12,581|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:43:12,581|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:43:15,584|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:43:15,585|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:43:18,588|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:43:18,588|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:43:21,591|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:43:21,592|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:43:24,595|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:43:24,595|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:43:27,598|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:43:27,599|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:43:30,601|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:43:30,602|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:43:33,605|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:43:33,606|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:43:36,608|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:43:36,608|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:43:39,612|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:43:39,613|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:43:42,617|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:43:42,617|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:43:45,622|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:43:45,622|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:43:48,625|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:43:48,625|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:43:51,628|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:43:51,629|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:43:54,632|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:43:54,632|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:43:57,635|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:43:57,636|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:43:59,766|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:44:00,638|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:44:00,638|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:44:03,642|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:44:03,642|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:44:06,645|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:44:06,646|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:44:09,648|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:44:09,649|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:44:12,652|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:44:12,652|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:44:15,655|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:44:15,656|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:44:18,660|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:44:18,661|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:44:21,664|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:44:21,665|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:44:24,670|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:44:24,671|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:44:27,674|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:44:27,675|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:44:30,678|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:44:30,679|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:44:33,683|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:44:33,683|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:44:36,688|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:44:36,689|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:44:39,693|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:44:39,694|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:44:42,698|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:44:42,699|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:44:45,701|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:44:45,702|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:44:48,705|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:44:48,705|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:44:51,710|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:44:51,711|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:44:54,714|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:44:54,715|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:44:57,719|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:44:57,720|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:45:00,725|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:45:00,725|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:45:03,729|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:45:03,729|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:45:05,766|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:45:06,731|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:45:06,732|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:45:09,735|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:45:09,736|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:45:12,738|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:45:12,739|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:45:15,742|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:45:15,742|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:45:18,745|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:45:18,746|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:45:21,750|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:45:21,751|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:45:24,753|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:45:24,754|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:45:27,757|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:45:27,757|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:45:30,761|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:45:30,762|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:45:33,764|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:45:33,764|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:45:36,767|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:45:36,767|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:45:39,770|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:45:39,771|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:45:42,773|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:45:42,773|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:45:45,776|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:45:45,776|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:45:48,778|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:45:48,778|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:45:51,781|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:45:51,781|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:45:54,783|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:45:54,783|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:45:57,786|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:45:57,787|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:46:00,789|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:46:00,790|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:46:03,793|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:46:03,793|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:46:06,796|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:46:06,797|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:46:09,799|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:46:09,800|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:46:11,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:46:12,803|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:46:12,804|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:46:15,808|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:46:15,809|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:46:18,812|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:46:18,812|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:46:21,817|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:46:21,818|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:46:24,821|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:46:24,822|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:46:27,825|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:46:27,825|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:46:30,829|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:46:30,829|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:46:33,831|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:46:33,831|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:46:36,834|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:46:36,834|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:46:39,837|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:46:39,838|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:46:42,842|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:46:42,842|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:46:45,844|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:46:45,845|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:46:48,848|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:46:48,849|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:46:51,852|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:46:51,852|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:46:54,855|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:46:54,856|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:46:57,859|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:46:57,860|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:47:00,864|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:47:00,865|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:47:03,869|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:47:03,869|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:47:06,872|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:47:06,873|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:47:09,875|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:47:09,876|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:47:12,880|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:47:12,881|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:47:15,885|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:47:15,886|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:47:17,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:47:18,888|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:47:18,889|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:47:21,892|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:47:21,892|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:47:24,894|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:47:24,894|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:47:27,897|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:47:27,897|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:47:30,900|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:47:30,900|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:47:33,903|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:47:33,904|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:47:36,906|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:47:36,907|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:47:39,907|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:47:39,908|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:47:42,910|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:47:42,911|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:47:45,914|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:47:45,914|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:47:48,917|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:47:48,918|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:47:51,921|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:47:51,922|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:47:54,924|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:47:54,924|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:47:57,928|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:47:57,929|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:48:00,933|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:48:00,933|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:48:03,938|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:48:03,938|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:48:06,941|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:48:06,941|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:48:09,944|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:48:09,944|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:48:12,948|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:48:12,948|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:48:15,952|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:48:15,952|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:48:18,956|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:48:18,956|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:48:21,961|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:48:21,961|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:48:23,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:48:24,964|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:48:24,964|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:48:27,967|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:48:27,968|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:48:30,971|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:48:30,972|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:48:33,974|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:48:33,974|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:48:36,977|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:48:36,977|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:48:39,981|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:48:39,982|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:48:42,986|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:48:42,986|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:48:45,990|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:48:45,990|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:48:48,995|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:48:48,995|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:48:51,998|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:48:51,999|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:48:55,003|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:48:55,004|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:48:58,006|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:48:58,007|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:49:01,011|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:49:01,012|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:49:04,014|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:49:04,014|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:49:07,018|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:49:07,018|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:49:10,022|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:49:10,023|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:49:13,028|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:49:13,029|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:49:16,034|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:49:16,034|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:49:19,038|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:49:19,038|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:49:22,040|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:49:22,041|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:49:25,044|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:49:25,044|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:49:28,046|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:49:28,047|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:49:29,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:49:31,049|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:49:31,050|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:49:34,054|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:49:34,055|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:49:37,058|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:49:37,058|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:49:40,062|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:49:40,062|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:49:43,065|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:49:43,066|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:49:46,070|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:49:46,071|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:49:49,075|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:49:49,076|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:49:52,080|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:49:52,080|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:49:55,084|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:49:55,084|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:49:58,088|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:49:58,088|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:50:01,092|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:50:01,093|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:50:04,096|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:50:04,096|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:50:07,098|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:50:07,098|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:50:10,101|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:50:10,102|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:50:13,106|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:50:13,106|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:50:16,110|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:50:16,110|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:50:19,113|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:50:19,114|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:50:22,117|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:50:22,118|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:50:25,121|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:50:25,122|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:50:28,126|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:50:28,127|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:50:31,130|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:50:31,131|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:50:34,135|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:50:34,136|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:50:35,766|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:50:37,140|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:50:37,141|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:50:40,144|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:50:40,145|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:50:43,147|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:50:43,148|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:50:46,152|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:50:46,153|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:50:49,155|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:50:49,156|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:50:52,159|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:50:52,159|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:50:55,163|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:50:55,164|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:50:58,167|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:50:58,167|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:51:01,168|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:51:01,168|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:51:04,171|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:51:04,171|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:51:07,175|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:51:07,175|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:51:10,179|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:51:10,180|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:51:13,185|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:51:13,186|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:51:16,189|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:51:16,189|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:51:19,193|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:51:19,194|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:51:22,198|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:51:22,199|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:51:25,201|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:51:25,202|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:51:28,205|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:51:28,206|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:51:31,208|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:51:31,208|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:51:34,212|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:51:34,212|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:51:37,215|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:51:37,215|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:51:40,218|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:51:40,218|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:51:41,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:51:43,222|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:51:43,223|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:51:46,227|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:51:46,227|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:51:49,230|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:51:49,230|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:51:52,234|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:51:52,235|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:51:55,239|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:51:55,240|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:51:58,244|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:51:58,245|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:52:01,248|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:52:01,248|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:52:04,251|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:52:04,251|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:52:07,254|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:52:07,255|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:52:10,258|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:52:10,258|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:52:13,261|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:52:13,261|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:52:16,265|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:52:16,266|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:52:19,271|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:52:19,272|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:52:22,276|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:52:22,277|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:52:25,281|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:52:25,282|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:52:28,286|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:52:28,287|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:52:31,292|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:52:31,292|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:52:34,296|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:52:34,297|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:52:37,300|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:52:37,301|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:52:40,305|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:52:40,306|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:52:43,308|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:52:43,309|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:52:46,312|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:52:46,313|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:52:47,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:52:49,315|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:52:49,316|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:52:52,317|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:52:52,318|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:52:55,322|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:52:55,322|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:52:58,325|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:52:58,326|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:53:01,328|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:53:01,328|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:53:04,330|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:53:04,331|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:53:07,335|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:53:07,336|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:53:10,340|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:53:10,340|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:53:13,345|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:53:13,345|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:53:16,349|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:53:16,350|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:53:19,355|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:53:19,356|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:53:22,359|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:53:22,359|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:53:25,362|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:53:25,362|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:53:28,365|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:53:28,366|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:53:31,370|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:53:31,371|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:53:34,374|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:53:34,374|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:53:37,379|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:53:37,380|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:53:40,382|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:53:40,383|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:53:43,388|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:53:43,389|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:53:46,393|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:53:46,394|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:53:49,399|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:53:49,400|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:53:52,404|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:53:52,405|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:53:53,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:53:55,408|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:53:55,409|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:53:58,412|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:53:58,412|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:54:01,417|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:54:01,418|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:54:04,421|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:54:04,421|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:54:07,424|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:54:07,424|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:54:10,426|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:54:10,426|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:54:13,427|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:54:13,428|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:54:16,431|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:54:16,432|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:54:19,434|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:54:19,435|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:54:22,439|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:54:22,439|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:54:25,441|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:54:25,442|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:54:28,446|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:54:28,447|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:54:31,451|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:54:31,452|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:54:34,457|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:54:34,458|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:54:37,462|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:54:37,463|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:54:40,467|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:54:40,468|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:54:43,473|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:54:43,473|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:54:46,477|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:54:46,478|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:54:49,482|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:54:49,482|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:54:52,485|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:54:52,485|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:54:55,488|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:54:55,489|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:54:58,493|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:54:58,494|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:54:59,766|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:55:01,500|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:55:01,501|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:55:04,505|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:55:04,506|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:55:07,510|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:55:07,511|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:55:10,516|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:55:10,516|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:55:13,520|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:55:13,520|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:55:16,522|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:55:16,523|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:55:19,527|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:55:19,528|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:55:22,532|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:55:22,532|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:55:25,535|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:55:25,536|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:55:28,538|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:55:28,539|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:55:31,541|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:55:31,542|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:55:34,545|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:55:34,546|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:55:37,548|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:55:37,549|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:55:40,552|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:55:40,553|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:55:43,558|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:55:43,559|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:55:46,563|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:55:46,563|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:55:49,566|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:55:49,567|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:55:52,571|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:55:52,571|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:55:55,574|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:55:55,574|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:55:58,578|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:55:58,578|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:56:01,581|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:56:01,582|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:56:04,585|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:56:04,586|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:56:05,766|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:56:07,588|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:56:07,589|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:56:10,592|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:56:10,593|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:56:13,597|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:56:13,598|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:56:16,601|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:56:16,601|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:56:19,604|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:56:19,605|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:56:22,607|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:56:22,608|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:56:25,610|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:56:25,611|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:56:28,614|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:56:28,614|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:56:31,618|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:56:31,618|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:56:34,621|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:56:34,621|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:56:37,624|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:56:37,625|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:56:40,627|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:56:40,628|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:56:43,630|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:56:43,630|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:56:46,633|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:56:46,633|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:56:49,636|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:56:49,637|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:56:52,640|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:56:52,640|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:56:55,642|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:56:55,642|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:56:58,644|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:56:58,644|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:57:01,646|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:57:01,646|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:57:04,648|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:57:04,649|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:57:07,651|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:57:07,652|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:57:10,655|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:57:10,655|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:57:11,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:57:13,658|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:57:13,658|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:57:16,661|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:57:16,661|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:57:19,664|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:57:19,665|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:57:22,668|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:57:22,668|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:57:25,669|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:57:25,669|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:57:28,674|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:57:28,675|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:57:31,678|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:57:31,678|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:57:34,681|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:57:34,682|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:57:37,684|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:57:37,685|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:57:40,688|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:57:40,689|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:57:43,691|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:57:43,691|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:57:46,692|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:57:46,692|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:57:49,694|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:57:49,695|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:57:52,698|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:57:52,699|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:57:55,702|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:57:55,702|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:57:58,705|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:57:58,705|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:58:01,708|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:58:01,709|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:58:04,711|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:58:04,712|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:58:07,714|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:58:07,715|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:58:10,718|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:58:10,719|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:58:13,721|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:58:13,721|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:58:16,725|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:58:16,725|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:58:17,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:58:19,729|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:58:19,730|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:58:22,734|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:58:22,734|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:58:25,738|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:58:25,739|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:58:28,742|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:58:28,743|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:58:31,746|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:58:31,747|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:58:34,751|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:58:34,752|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:58:37,755|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:58:37,755|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:58:40,759|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:58:40,759|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:58:43,764|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:58:43,765|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:58:46,768|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:58:46,769|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:58:49,773|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:58:49,774|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:58:52,778|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:58:52,778|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:58:55,782|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:58:55,782|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:58:58,785|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:58:58,786|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:59:01,787|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:59:01,788|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:59:04,792|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:59:04,792|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:59:07,796|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:59:07,797|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:59:10,801|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:59:10,802|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:59:13,806|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:59:13,807|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:59:16,811|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:59:16,811|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:59:19,815|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:59:19,816|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:59:22,820|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:59:22,821|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:59:23,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:59:25,825|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:59:25,825|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:59:28,827|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:59:28,828|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:59:31,833|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:59:31,834|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:59:34,838|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:59:34,839|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:59:37,841|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:59:37,841|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:59:40,845|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:59:40,845|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:59:43,848|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:59:43,848|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:59:46,852|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:59:46,853|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:59:49,857|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:59:49,857|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:59:52,861|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:59:52,861|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:59:55,865|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:59:55,866|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 10:59:58,867|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 10:59:58,868|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:00:01,872|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:00:01,873|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:00:04,878|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:00:04,878|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:00:07,882|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:00:07,883|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:00:10,888|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:00:10,889|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:00:13,893|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:00:13,894|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:00:16,898|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:00:16,898|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:00:19,901|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:00:19,901|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:00:22,904|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:00:22,905|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:00:25,909|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:00:25,910|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:00:28,913|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:00:28,913|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:00:29,766|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:00:31,916|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:00:31,917|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:00:34,919|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:00:34,919|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:00:37,922|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:00:37,923|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:00:40,925|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:00:40,925|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:00:43,929|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:00:43,929|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:00:46,932|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:00:46,932|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:00:49,937|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:00:49,937|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:00:52,942|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:00:52,943|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:00:55,944|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:00:55,945|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:00:58,949|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:00:58,950|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:01:01,954|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:01:01,955|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:01:04,958|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:01:04,959|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:01:07,963|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:01:07,964|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:01:10,968|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:01:10,968|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:01:13,972|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:01:13,973|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:01:16,975|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:01:16,975|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:01:19,978|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:01:19,979|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:01:22,982|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:01:22,983|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:01:25,987|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:01:25,987|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:01:28,991|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:01:28,991|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:01:31,994|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:01:31,994|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:01:34,997|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:01:34,998|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:01:35,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:01:38,001|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:01:38,001|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:01:41,003|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:01:41,004|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:01:44,008|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:01:44,009|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:01:47,012|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:01:47,012|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:01:50,017|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:01:50,017|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:01:53,023|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:01:53,024|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:01:56,028|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:01:56,029|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:01:59,032|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:01:59,033|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:02:02,037|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:02:02,038|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:02:05,042|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:02:05,042|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:02:08,046|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:02:08,047|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:02:11,050|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:02:11,050|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:02:14,055|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:02:14,056|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:02:17,058|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:02:17,059|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:02:20,062|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:02:20,063|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:02:23,067|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:02:23,068|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:02:26,072|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:02:26,073|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:02:29,076|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:02:29,077|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:02:32,080|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:02:32,080|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:02:35,083|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:02:35,084|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:02:38,087|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:02:38,087|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:02:41,090|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:02:41,091|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:02:41,764|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:02:44,095|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:02:44,095|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:02:47,098|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:02:47,099|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:02:50,104|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:02:50,105|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:02:53,109|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:02:53,109|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:02:56,114|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:02:56,114|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:02:59,119|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:02:59,119|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:03:02,122|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:03:02,123|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:03:05,125|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:03:05,125|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:03:08,129|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:03:08,130|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:03:11,133|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:03:11,133|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:03:14,137|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:03:14,137|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:03:17,142|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:03:17,143|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:03:20,147|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:03:20,148|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:03:23,151|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:03:23,152|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:03:26,155|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:03:26,156|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:03:29,157|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:03:29,158|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:03:32,162|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:03:32,163|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:03:35,166|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:03:35,166|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:03:38,170|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:03:38,171|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:03:41,174|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:03:41,175|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:03:44,179|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:03:44,180|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:03:47,182|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:03:47,183|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:03:47,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:03:50,187|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:03:50,187|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:03:53,190|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:03:53,191|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:03:56,196|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:03:56,197|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:03:59,199|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:03:59,199|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:04:02,204|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:04:02,205|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:04:05,208|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:04:05,208|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:04:08,212|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:04:08,213|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:04:11,217|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:04:11,218|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:04:14,222|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:04:14,222|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:04:17,225|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:04:17,226|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:04:20,230|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:04:20,231|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:04:23,235|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:04:23,236|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:04:26,240|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:04:26,240|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:04:29,244|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:04:29,245|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:04:32,249|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:04:32,250|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:04:35,254|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:04:35,254|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:04:38,258|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:04:38,258|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:04:41,262|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:04:41,263|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:04:44,267|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:04:44,268|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:04:47,272|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:04:47,273|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:04:50,278|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:04:50,278|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:04:53,281|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:04:53,282|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:04:53,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:04:56,284|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:04:56,285|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:04:59,288|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:04:59,289|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:05:02,293|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:05:02,294|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:05:05,298|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:05:05,298|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:05:08,301|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:05:08,302|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:05:11,305|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:05:11,306|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:05:14,308|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:05:14,309|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:05:17,312|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:05:17,312|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:05:20,316|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:05:20,317|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:05:23,322|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:05:23,322|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:05:26,325|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:05:26,326|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:05:29,331|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:05:29,332|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:05:32,334|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:05:32,334|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:05:35,338|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:05:35,338|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:05:38,341|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:05:38,342|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:05:41,346|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:05:41,346|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:05:44,351|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:05:44,351|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:05:47,356|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:05:47,356|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:05:50,359|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:05:50,359|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:05:53,361|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:05:53,361|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:05:56,365|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:05:56,366|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:05:59,368|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:05:59,369|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:05:59,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:06:02,372|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:06:02,373|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:06:05,374|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:06:05,374|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:06:08,377|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:06:08,378|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:06:11,381|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:06:11,381|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:06:14,384|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:06:14,384|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:06:17,388|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:06:17,389|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:06:20,392|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:06:20,393|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:06:23,395|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:06:23,396|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:06:26,397|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:06:26,398|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:06:29,400|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:06:29,400|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:06:32,403|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:06:32,403|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:06:35,406|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:06:35,406|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:06:38,409|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:06:38,410|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:06:41,411|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:06:41,411|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:06:44,414|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:06:44,414|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:06:47,417|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:06:47,417|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:06:50,420|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:06:50,420|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:06:53,423|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:06:53,423|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:06:56,426|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:06:56,426|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:06:59,428|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:06:59,428|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:07:02,432|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:07:02,433|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:07:05,437|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:07:05,437|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:07:05,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:07:08,441|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:07:08,441|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:07:11,444|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:07:11,445|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:07:14,449|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:07:14,450|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:07:17,452|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:07:17,453|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:07:20,458|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:07:20,458|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:07:23,462|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:07:23,463|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:07:26,467|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:07:26,468|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:07:29,471|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:07:29,471|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:07:32,473|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:07:32,473|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:07:35,477|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:07:35,477|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:07:38,481|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:07:38,481|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:07:41,486|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:07:41,486|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:07:44,490|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:07:44,490|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:07:47,494|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:07:47,494|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:07:50,497|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:07:50,497|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:07:53,501|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:07:53,502|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:07:56,506|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:07:56,507|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:07:59,511|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:07:59,511|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:08:02,514|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:08:02,514|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:08:05,517|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:08:05,518|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:08:08,521|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:08:08,522|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:08:11,526|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:08:11,527|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:08:11,764|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:08:14,531|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:08:14,532|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:08:17,535|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:08:17,536|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:08:20,540|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:08:20,540|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:08:23,546|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:08:23,547|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:08:26,549|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:08:26,549|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:08:29,551|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:08:29,551|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:08:32,554|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:08:32,554|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:08:35,557|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:08:35,558|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:08:38,561|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:08:38,561|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:08:41,566|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:08:41,567|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:08:44,571|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:08:44,572|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:08:47,576|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:08:47,576|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:08:50,577|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:08:50,578|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:08:53,580|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:08:53,580|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:08:56,583|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:08:56,583|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:08:59,585|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:08:59,585|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:09:02,587|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:09:02,588|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:09:05,591|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:09:05,591|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:09:08,595|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:09:08,595|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:09:11,598|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:09:11,598|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:09:14,601|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:09:14,601|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:09:17,604|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:09:17,604|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:09:17,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:09:20,606|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:09:20,606|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:09:23,608|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:09:23,608|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:09:26,611|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:09:26,612|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:09:29,616|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:09:29,617|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:09:32,621|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:09:32,622|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:09:35,626|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:09:35,627|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:09:38,631|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:09:38,631|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:09:41,634|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:09:41,634|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:09:44,637|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:09:44,637|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:09:47,641|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:09:47,641|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:09:50,644|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:09:50,644|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:09:53,647|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:09:53,648|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:09:56,651|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:09:56,651|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:09:59,654|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:09:59,654|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:10:02,657|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:10:02,657|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:10:05,660|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:10:05,660|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:10:08,663|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:10:08,664|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:10:11,667|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:10:11,667|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:10:14,670|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:10:14,671|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:10:17,675|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:10:17,676|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:10:20,678|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:10:20,678|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:10:23,681|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:10:23,681|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:10:23,764|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:10:26,684|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:10:26,685|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:10:29,687|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:10:29,688|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:10:32,691|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:10:32,692|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:10:35,695|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:10:35,696|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:10:38,700|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:10:38,700|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:10:41,704|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:10:41,704|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:10:44,708|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:10:44,708|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:10:47,711|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:10:47,711|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:10:50,714|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:10:50,715|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:10:53,717|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:10:53,718|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:10:56,721|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:10:56,721|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:10:59,724|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:10:59,724|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:11:02,725|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:11:02,726|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:11:05,727|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:11:05,727|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:11:08,730|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:11:08,730|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:11:11,731|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:11:11,732|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:11:14,734|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:11:14,734|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:11:17,736|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:11:17,736|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:11:20,739|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:11:20,740|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:11:23,742|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:11:23,742|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:11:26,744|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:11:26,745|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:11:29,748|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:11:29,749|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:11:29,765|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:11:32,752|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:11:32,752|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:11:35,754|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:11:35,754|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:11:38,758|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:11:38,758|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:11:41,761|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:11:41,762|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:11:44,764|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:11:44,764|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:11:47,768|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:11:47,769|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:11:50,771|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:11:50,772|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:11:53,774|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:11:53,774|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:11:56,777|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:11:56,778|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:11:59,779|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:11:59,779|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:12:02,781|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:12:02,782|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:12:05,784|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:12:05,785|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:12:08,788|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:12:08,789|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:12:11,793|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:12:11,794|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:12:14,797|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:12:14,798|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:12:17,801|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:12:17,802|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:12:20,804|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:12:20,805|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:12:23,808|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:12:23,809|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:12:26,811|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:12:26,812|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:12:29,815|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:12:29,815|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:12:32,818|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:12:32,818|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:12:35,764|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:12:35,821|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:12:35,821|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:12:38,824|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:12:38,825|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:12:41,828|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:12:41,828|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:12:44,831|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:12:44,831|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:12:47,834|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:12:47,835|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:12:50,838|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:12:50,839|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:12:53,841|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:12:53,842|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:12:56,844|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:12:56,845|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:12:59,848|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:12:59,849|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:13:02,853|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:13:02,853|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:13:05,858|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:13:05,859|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:13:08,862|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:13:08,862|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:13:11,864|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:13:11,864|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:13:14,865|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:13:14,866|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:13:17,868|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:13:17,868|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:13:20,871|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:13:20,872|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:13:23,874|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:13:23,875|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:13:26,877|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:13:26,878|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:13:29,881|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:13:29,882|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:13:32,885|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:13:32,886|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:13:35,891|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:13:35,891|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:13:38,896|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:13:38,896|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:13:41,766|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:13:41,899|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:13:41,900|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:13:44,901|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:13:44,901|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:13:47,904|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:13:47,905|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:13:50,910|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:13:50,911|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:13:53,915|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:13:53,916|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:13:56,921|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:13:56,922|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:13:59,924|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:13:59,924|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:14:02,927|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:14:02,927|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:14:05,928|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:14:05,928|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:14:08,932|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:14:08,932|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:14:11,934|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:14:11,935|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:14:14,937|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:14:14,938|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:14:17,942|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:14:17,942|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:14:20,946|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:14:20,947|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:14:23,951|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:14:23,952|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:14:26,955|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:14:26,956|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:14:29,959|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:14:29,960|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:14:32,964|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:14:32,964|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:14:35,968|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:14:35,968|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:14:38,971|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:14:38,972|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:14:41,975|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:14:41,975|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:14:44,979|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:14:44,979|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:14:47,767|setup.py:19]: Traceback (most recent call last):
  File "core/adapter/adapter.py", line 18, in wrapper
    await coro(*args, **kwargs)
  File "core/adapter/adapter.py", line 89, in report_agv_battery_info
    agv_info_list = await restapi.get_all_agv_info()
  File "utils/gzrobot/restapi.py", line 73, in get_all_agv_info
    resj = await _common_get(url)
  File "utils/gzrobot/restapi.py", line 10, in _common_get
    resp = await aio_requests.get(url)
  File "utils/protocol/http/aio_http_client.py", line 94, in get
    return await self.request(
  File "utils/protocol/http/aio_http_client.py", line 63, in request
    async with self.get_session().request(method, url, **kwargs) as resp:
  File "aiohttp/client.py", line 1141, in __aenter__
  File "aiohttp/client.py", line 467, in _request
  File "aiohttp/helpers.py", line 721, in __exit__
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:14:47,981|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:14:47,981|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:14:50,985|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:14:50,985|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:14:53,987|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:14:53,988|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:14:56,991|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:14:56,992|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:14:59,994|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:14:59,994|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:15:02,998|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:15:02,998|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:15:06,002|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:15:06,002|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:15:09,005|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:15:09,005|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:15:12,009|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:15:12,010|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:15:15,013|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:15:15,013|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 11:15:18,016|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 11:15:18,017|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

