[ERROR|2023-12-07 14:15:27,054|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:15:27,055|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:15:30,060|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:15:30,061|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:15:33,066|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:15:33,067|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:15:36,070|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:15:36,071|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:15:39,074|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:15:39,075|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:15:42,078|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:15:42,078|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:15:45,080|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:15:45,081|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:15:48,084|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:15:48,084|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:15:51,089|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:15:51,090|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:15:54,092|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:15:54,093|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:15:57,097|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:15:57,097|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:16:00,101|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:16:00,102|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:16:03,104|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:16:03,105|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:16:06,109|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:16:06,109|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:16:09,112|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:16:09,113|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:16:12,117|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:16:12,118|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:16:15,123|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:16:15,123|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:16:18,127|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:16:18,128|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:16:21,132|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:16:21,133|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:16:24,137|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:16:24,137|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:16:27,141|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:16:27,142|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:16:30,146|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:16:30,147|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:16:33,150|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:16:33,150|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:16:36,153|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:16:36,153|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:16:39,157|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:16:39,157|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:16:42,160|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:16:42,160|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:16:45,163|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:16:45,164|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:16:48,167|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:16:48,167|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:16:51,170|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:16:51,170|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:16:54,173|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:16:54,173|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:16:57,176|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:16:57,177|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:17:00,179|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:17:00,180|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:17:03,183|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:17:03,183|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:17:06,185|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:17:06,185|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:17:09,188|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:17:09,189|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:17:12,191|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:17:12,191|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:17:15,193|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:17:15,193|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:17:18,195|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:17:18,195|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:17:21,197|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:17:21,198|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:17:24,200|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:17:24,200|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:17:27,203|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:17:27,203|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:17:30,204|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:17:30,204|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:17:33,206|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:17:33,206|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:17:36,208|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:17:36,208|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:17:39,212|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:17:39,212|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:17:42,215|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:17:42,215|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:17:45,218|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:17:45,219|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:17:48,222|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:17:48,222|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:17:51,225|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:17:51,226|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:17:54,229|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:17:54,229|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:17:57,232|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:17:57,232|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:18:00,236|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:18:00,236|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:18:03,239|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:18:03,240|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:18:06,241|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:18:06,241|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:18:09,243|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:18:09,243|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:18:12,247|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:18:12,247|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:18:15,250|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:18:15,251|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:18:18,254|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:18:18,254|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:18:21,257|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:18:21,257|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:18:24,261|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:18:24,262|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:18:27,267|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:18:27,267|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:18:30,271|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:18:30,271|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:18:33,276|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:18:33,277|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:18:36,280|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:18:36,281|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:18:39,284|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:18:39,284|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:18:42,287|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:18:42,288|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:18:45,291|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:18:45,292|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:18:48,297|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:18:48,298|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:18:51,300|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:18:51,301|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:18:54,304|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:18:54,304|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:18:57,307|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:18:57,308|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:19:00,311|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:19:00,311|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:19:03,314|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:19:03,314|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:19:06,317|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:19:06,318|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:19:06,319|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 107, in send_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:19:06,320|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:19:06,321|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:19:06,322|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:19:06,322|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 107, in send_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:19:06,322|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:19:06,323|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:19:07,321|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:19:07,322|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 107, in send_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:19:07,323|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:19:07,323|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:19:07,324|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:19:07,325|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 107, in send_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:19:07,325|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:19:07,326|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:19:08,325|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:19:08,326|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 107, in send_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:19:08,327|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:19:08,328|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:19:08,328|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:19:08,328|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 107, in send_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:19:08,328|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:19:08,329|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:19:12,331|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:19:12,331|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:19:15,335|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:19:15,336|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:19:18,339|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:19:18,339|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:19:21,343|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:19:21,343|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:19:24,347|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:19:24,348|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:19:27,353|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:19:27,354|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:19:30,358|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:19:30,359|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:19:33,362|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:19:33,362|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:19:36,365|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:19:36,366|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:19:39,370|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:19:39,370|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:19:42,374|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:19:42,374|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:19:45,377|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:19:45,377|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:19:48,380|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:19:48,380|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:19:51,382|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:19:51,383|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:19:54,387|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:19:54,387|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:19:57,391|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:19:57,392|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:20:00,394|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:20:00,394|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:20:03,398|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:20:03,399|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:20:06,403|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:20:06,404|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:20:09,407|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:20:09,408|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:20:12,412|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:20:12,412|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:20:15,416|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:20:15,417|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:20:18,419|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:20:18,420|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:20:21,424|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:20:21,424|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:20:24,428|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:20:24,429|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:20:27,432|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:20:27,433|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:20:30,436|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:20:30,437|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:20:33,440|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:20:33,441|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:20:36,445|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:20:36,446|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:20:39,450|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:20:39,450|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:20:42,454|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:20:42,455|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:20:45,457|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:20:45,458|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:20:48,462|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:20:48,463|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:20:51,467|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:20:51,468|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:20:54,471|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:20:54,472|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:20:57,475|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:20:57,475|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:21:00,478|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:21:00,479|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:21:03,483|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:21:03,484|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:21:06,489|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:21:06,490|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:21:09,494|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:21:09,494|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:21:12,498|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:21:12,498|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:21:15,501|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:21:15,502|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:21:18,506|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:21:18,507|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:21:21,510|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:21:21,511|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:21:24,513|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:21:24,513|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:21:27,518|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:21:27,519|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:21:30,524|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:21:30,524|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:21:33,528|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:21:33,528|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:21:36,531|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:21:36,532|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:21:39,534|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:21:39,535|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:21:42,538|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:21:42,538|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:21:45,541|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:21:45,541|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:21:48,545|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:21:48,546|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:21:51,549|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:21:51,550|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:21:54,553|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:21:54,554|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:21:57,558|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:21:57,559|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:22:00,562|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:22:00,563|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:22:03,567|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:22:03,568|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:22:06,572|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:22:06,573|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:22:09,577|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:22:09,577|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:22:12,582|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:22:12,583|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:22:15,588|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:22:15,589|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:22:18,591|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:22:18,592|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:22:21,596|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:22:21,596|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:22:24,600|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:22:24,600|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:22:27,604|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:22:27,605|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:22:30,609|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:22:30,610|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:22:33,615|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:22:33,615|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:22:36,621|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:22:36,621|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:22:39,624|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:22:39,624|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:22:42,627|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:22:42,628|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:22:45,630|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:22:45,631|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:22:48,635|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:22:48,636|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:22:51,641|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:22:51,641|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:22:54,644|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:22:54,644|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:22:57,647|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:22:57,648|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:23:00,651|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:23:00,652|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:23:03,656|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:23:03,656|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:23:06,659|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:23:06,660|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:23:09,664|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:23:09,665|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:23:12,669|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:23:12,669|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:23:15,672|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:23:15,673|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:23:18,677|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:23:18,678|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:23:21,680|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:23:21,680|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:23:24,683|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:23:24,684|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:23:27,688|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:23:27,688|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:23:30,690|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:23:30,690|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:23:33,693|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:23:33,694|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:23:36,696|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:23:36,696|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:23:39,700|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:23:39,701|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:23:42,705|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:23:42,706|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:23:45,711|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:23:45,712|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:23:48,716|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:23:48,717|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:23:51,720|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:23:51,721|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:23:54,723|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:23:54,724|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:23:57,726|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:23:57,726|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:24:00,730|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:24:00,731|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:24:03,735|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:24:03,736|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:24:06,740|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:24:06,741|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:24:09,745|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:24:09,745|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:24:12,748|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:24:12,749|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:24:15,754|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:24:15,754|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:24:18,757|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:24:18,758|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:24:21,762|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:24:21,763|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:24:24,765|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:24:24,766|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:24:27,768|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:24:27,768|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:24:30,770|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:24:30,770|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:24:33,773|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:24:33,774|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:24:36,778|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:24:36,778|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:24:39,780|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:24:39,781|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:24:42,785|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:24:42,785|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:24:45,788|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:24:45,789|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:24:48,792|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:24:48,793|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:24:51,796|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:24:51,796|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:24:54,801|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:24:54,801|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:24:57,804|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:24:57,805|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:25:00,809|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:25:00,810|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:25:03,814|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:25:03,814|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:25:06,817|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:25:06,818|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:25:09,822|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:25:09,823|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:25:12,827|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:25:12,828|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:25:15,831|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:25:15,832|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:25:18,837|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:25:18,838|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:25:21,840|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:25:21,841|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:25:24,844|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:25:24,845|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:25:27,850|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:25:27,850|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:25:30,854|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:25:30,854|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:25:33,857|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:25:33,858|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:25:36,860|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:25:36,861|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:25:39,865|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:25:39,866|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:25:42,869|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:25:42,869|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:25:45,874|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:25:45,875|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:25:48,880|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:25:48,881|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:25:51,885|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:25:51,886|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:25:54,889|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:25:54,890|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:25:57,892|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:25:57,893|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:26:00,896|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:26:00,897|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:26:03,901|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:26:03,902|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:26:06,907|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:26:06,908|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:26:09,912|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:26:09,912|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:26:12,916|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:26:12,917|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:26:15,922|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:26:15,923|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:26:18,927|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:26:18,928|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:26:21,932|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:26:21,933|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:26:24,937|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:26:24,937|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:26:27,940|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:26:27,941|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:26:30,945|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:26:30,946|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:26:33,951|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:26:33,952|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:26:36,956|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:26:36,957|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:26:39,960|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:26:39,960|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:26:42,964|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:26:42,965|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:26:45,968|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:26:45,968|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:26:48,972|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:26:48,973|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:26:51,977|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:26:51,978|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:26:54,980|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:26:54,980|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:26:57,983|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:26:57,984|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:27:00,987|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:27:00,988|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:27:03,992|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:27:03,993|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:27:06,996|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:27:06,997|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:27:10,000|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:27:10,000|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:27:13,003|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:27:13,004|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:27:16,008|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:27:16,009|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:27:19,012|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:27:19,012|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:27:22,017|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:27:22,018|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:27:25,022|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:27:25,023|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:27:28,027|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:27:28,028|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:27:31,032|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:27:31,033|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:27:34,035|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:27:34,036|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:27:37,040|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:27:37,041|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:27:40,045|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:27:40,046|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:27:43,051|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:27:43,052|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:27:46,056|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:27:46,057|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:27:49,062|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:27:49,062|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:27:52,067|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:27:52,068|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:27:55,073|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:27:55,073|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:27:58,077|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:27:58,078|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:28:01,083|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:28:01,083|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:28:04,086|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:28:04,086|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:28:07,090|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:28:07,090|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:28:10,093|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:28:10,094|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:28:13,097|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:28:13,097|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:28:16,100|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:28:16,101|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:28:19,103|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:28:19,103|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:28:22,107|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:28:22,108|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:28:25,110|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:28:25,111|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:28:28,116|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:28:28,116|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:28:31,120|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:28:31,120|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:28:34,124|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:28:34,125|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:28:37,127|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:28:37,128|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:28:40,130|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:28:40,131|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:28:43,134|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:28:43,135|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:28:46,138|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:28:46,138|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:28:49,141|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:28:49,142|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:28:52,147|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:28:52,147|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:28:55,150|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:28:55,151|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:28:58,156|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:28:58,157|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:29:01,160|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:29:01,161|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:29:04,164|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:29:04,165|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:29:07,168|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:29:07,169|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:29:10,173|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:29:10,174|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:29:13,176|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:29:13,176|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:29:16,181|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:29:16,182|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:29:19,185|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:29:19,186|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:29:22,190|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:29:22,191|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:29:25,195|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:29:25,196|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:29:28,200|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:29:28,200|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:29:31,204|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:29:31,205|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:29:34,208|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:29:34,208|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:29:37,212|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:29:37,212|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:29:40,217|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:29:40,218|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:29:43,224|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:29:43,224|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:29:46,228|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:29:46,229|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:29:49,232|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:29:49,232|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:29:52,235|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:29:52,235|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:29:55,240|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:29:55,240|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:29:58,244|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:29:58,244|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:30:01,247|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:30:01,247|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:30:04,250|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:30:04,251|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:30:07,253|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:30:07,254|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:30:10,258|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:30:10,258|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:30:13,260|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:30:13,261|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:30:16,263|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:30:16,263|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:30:19,267|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:30:19,268|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:30:22,271|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:30:22,272|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:30:25,275|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:30:25,275|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:30:28,279|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:30:28,279|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:30:31,283|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:30:31,283|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:30:34,286|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:30:34,287|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:30:37,290|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:30:37,291|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:30:40,293|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:30:40,294|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:30:43,297|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:30:43,297|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:30:46,300|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:30:46,301|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:30:49,303|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:30:49,303|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:30:52,306|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:30:52,307|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:30:55,310|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:30:55,310|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:30:58,313|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:30:58,313|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:31:01,316|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:31:01,316|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:31:04,318|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:31:04,319|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:31:07,322|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:31:07,322|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:31:10,325|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:31:10,326|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:31:13,329|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:31:13,329|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:31:16,331|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:31:16,331|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:31:19,333|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:31:19,334|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:31:22,336|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:31:22,336|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:31:25,338|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:31:25,338|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:31:28,340|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:31:28,341|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:31:31,344|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:31:31,344|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:31:34,346|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:31:34,346|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:31:37,349|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:31:37,349|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:31:40,353|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:31:40,353|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:31:43,355|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:31:43,356|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:31:46,360|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:31:46,361|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:31:49,365|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:31:49,366|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:31:52,370|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:31:52,371|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:31:55,374|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:31:55,375|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:31:58,378|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:31:58,379|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:32:01,383|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:32:01,383|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:32:04,387|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:32:04,388|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:32:07,390|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:32:07,390|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:32:10,394|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:32:10,394|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:32:13,396|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:32:13,396|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:32:16,399|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:32:16,399|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:32:19,404|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:32:19,405|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:32:22,406|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:32:22,406|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:32:25,410|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:32:25,410|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:32:28,415|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:32:28,415|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:32:31,419|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:32:31,420|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:32:34,423|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:32:34,424|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:32:37,429|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:32:37,429|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:32:40,433|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:32:40,434|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:32:43,438|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:32:43,438|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:32:46,442|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:32:46,442|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:32:49,446|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:32:49,447|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:32:52,451|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:32:52,452|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:32:55,456|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:32:55,457|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:32:58,461|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:32:58,462|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:33:01,466|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:33:01,466|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:33:04,470|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:33:04,471|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:33:07,474|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:33:07,475|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:33:10,479|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:33:10,479|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:33:13,484|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:33:13,484|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:33:16,488|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:33:16,489|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:33:19,493|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:33:19,494|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:33:22,497|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:33:22,498|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:33:25,501|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:33:25,501|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:33:28,506|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:33:28,507|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:33:31,510|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:33:31,511|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:33:34,514|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:33:34,514|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:33:37,517|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:33:37,518|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:33:40,522|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:33:40,523|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:33:43,527|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:33:43,528|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:33:46,532|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:33:46,533|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:33:49,537|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:33:49,538|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:33:52,542|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:33:52,543|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:33:55,547|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:33:55,548|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:33:58,551|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:33:58,551|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:34:01,555|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:34:01,556|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:34:04,560|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:34:04,561|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:34:07,565|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:34:07,566|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:34:10,570|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:34:10,571|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:34:13,574|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:34:13,574|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:34:16,577|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:34:16,577|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:34:19,581|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:34:19,582|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:34:22,583|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:34:22,584|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:34:25,587|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:34:25,588|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:34:28,590|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:34:28,591|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:34:31,595|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:34:31,596|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:34:34,599|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:34:34,599|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:34:37,602|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:34:37,602|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:34:40,607|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:34:40,608|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:34:43,610|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:34:43,610|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:34:46,615|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:34:46,615|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:34:49,619|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:34:49,619|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:34:52,622|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:34:52,623|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:34:55,627|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:34:55,627|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:34:58,631|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:34:58,631|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:35:01,635|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:35:01,635|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:35:04,639|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:35:04,640|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:35:07,644|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:35:07,645|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:35:10,648|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:35:10,649|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:35:13,652|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:35:13,653|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:35:16,657|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:35:16,658|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:35:19,662|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:35:19,663|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:35:22,668|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:35:22,669|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:35:25,674|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:35:25,674|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:35:28,679|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:35:28,680|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:35:31,684|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:35:31,685|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:35:34,689|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:35:34,690|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:35:37,692|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:35:37,693|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:35:40,697|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:35:40,698|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:35:43,700|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:35:43,701|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:35:46,706|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:35:46,707|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:35:49,711|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:35:49,712|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:35:52,717|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:35:52,718|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:35:55,721|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:35:55,722|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:35:58,726|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:35:58,727|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:36:01,731|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:36:01,731|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:36:04,736|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:36:04,737|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:36:07,742|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:36:07,743|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:36:10,747|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:36:10,748|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:36:13,751|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:36:13,751|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:36:16,754|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:36:16,754|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:36:19,757|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:36:19,758|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:36:22,760|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:36:22,760|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:36:25,763|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:36:25,763|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:36:28,767|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:36:28,768|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:36:31,770|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:36:31,770|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:36:34,773|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:36:34,774|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:36:37,776|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:36:37,777|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:36:40,780|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:36:40,781|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:36:43,785|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:36:43,786|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:36:46,789|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:36:46,790|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:36:49,794|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:36:49,796|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:36:52,801|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:36:52,802|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:36:55,806|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:36:55,807|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:36:58,810|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:36:58,810|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:37:01,814|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:37:01,814|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:37:04,817|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:37:04,818|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:37:07,823|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:37:07,824|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:37:10,827|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:37:10,828|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:37:13,831|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:37:13,832|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:37:16,837|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:37:16,837|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:37:19,841|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:37:19,842|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:37:22,846|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:37:22,846|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:37:25,850|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:37:25,850|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:37:28,854|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:37:28,855|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:37:31,859|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:37:31,860|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:37:34,864|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:37:34,865|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:37:37,869|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:37:37,870|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:37:40,874|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:37:40,875|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:37:43,880|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:37:43,881|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:37:46,884|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:37:46,884|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:37:49,887|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:37:49,887|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:37:52,890|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:37:52,890|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:37:55,893|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:37:55,893|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:37:58,898|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:37:58,899|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:38:01,902|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:38:01,903|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:38:04,905|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:38:04,905|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:38:07,910|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:38:07,911|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:38:10,915|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:38:10,916|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:38:13,921|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:38:13,921|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:38:16,925|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:38:16,926|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:38:19,930|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:38:19,930|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:38:22,934|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:38:22,935|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:38:25,941|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:38:25,942|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:38:28,946|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:38:28,947|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:38:31,951|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:38:31,952|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:38:34,956|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:38:34,957|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:38:37,960|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:38:37,961|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:38:40,964|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:38:40,964|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:38:43,968|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:38:43,969|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:38:46,972|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:38:46,973|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:38:49,977|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:38:49,977|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:38:52,981|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:38:52,982|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:38:55,984|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:38:55,984|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:38:58,988|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:38:58,988|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:39:01,992|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:39:01,992|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:39:04,996|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:39:04,997|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:39:08,000|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:39:08,001|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:39:11,004|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:39:11,005|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:39:14,010|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:39:14,010|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:39:17,014|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:39:17,015|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:39:20,019|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:39:20,020|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:39:23,025|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:39:23,026|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:39:26,031|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:39:26,032|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:39:29,036|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:39:29,037|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:39:32,041|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:39:32,041|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:39:35,044|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:39:35,045|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:39:38,047|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:39:38,048|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:39:41,053|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:39:41,054|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:39:44,059|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:39:44,060|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:39:47,064|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:39:47,064|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:39:50,067|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:39:50,068|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:39:53,072|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:39:53,072|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:39:56,075|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:39:56,076|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:39:59,081|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:39:59,081|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:40:02,084|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:40:02,084|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:40:05,087|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:40:05,087|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:40:08,091|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:40:08,092|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:40:11,096|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:40:11,097|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:40:14,100|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:40:14,101|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:40:17,104|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:40:17,105|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:40:20,109|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:40:20,110|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:40:23,114|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:40:23,115|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:40:26,119|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:40:26,120|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:40:29,123|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:40:29,123|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:40:32,126|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:40:32,127|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:40:35,130|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:40:35,131|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:40:38,133|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:40:38,133|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:40:41,138|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:40:41,139|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:40:44,144|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:40:44,144|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:40:47,147|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:40:47,148|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:40:50,152|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:40:50,152|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:40:53,156|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:40:53,157|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:40:56,160|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:40:56,161|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:40:59,164|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:40:59,165|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:41:02,169|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:41:02,170|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:41:05,176|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:41:05,177|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:41:08,181|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:41:08,182|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:41:11,185|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:41:11,186|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:41:14,190|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:41:14,191|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:41:17,193|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:41:17,194|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:41:20,197|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:41:20,198|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:41:23,200|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:41:23,201|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:41:26,203|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:41:26,204|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:41:29,208|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:41:29,208|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:41:32,213|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:41:32,214|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:41:35,217|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:41:35,218|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:41:38,222|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:41:38,223|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:41:41,227|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:41:41,228|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:41:44,232|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:41:44,233|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:41:47,237|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:41:47,237|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:41:50,240|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:41:50,241|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:41:53,244|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:41:53,244|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:41:56,247|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:41:56,247|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:41:59,250|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:41:59,250|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:42:02,253|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:42:02,254|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:42:05,257|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:42:05,257|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:42:08,261|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:42:08,262|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:42:11,263|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:42:11,263|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:42:14,267|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:42:14,268|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:42:17,272|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:42:17,273|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:42:20,277|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:42:20,278|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:42:23,283|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:42:23,283|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:42:26,287|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:42:26,288|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:42:29,292|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:42:29,293|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:42:32,297|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:42:32,298|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:42:35,302|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:42:35,303|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:42:38,308|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:42:38,309|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:42:41,314|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:42:41,314|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:42:44,318|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:42:44,318|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:42:47,323|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:42:47,324|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:42:50,328|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:42:50,329|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:42:53,334|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:42:53,334|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:42:56,338|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:42:56,339|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:42:59,344|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:42:59,345|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:43:02,348|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:43:02,349|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:43:05,353|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:43:05,353|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:43:08,356|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:43:08,357|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:43:11,360|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:43:11,360|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:43:14,363|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:43:14,363|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:43:17,366|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:43:17,367|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:43:20,370|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:43:20,370|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:43:23,373|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:43:23,373|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:43:26,376|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:43:26,377|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:43:29,380|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:43:29,380|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:43:32,383|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:43:32,383|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:43:35,386|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:43:35,386|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:43:38,387|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:43:38,388|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:43:41,390|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:43:41,390|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:43:44,393|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:43:44,393|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:43:47,396|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:43:47,397|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:43:50,399|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:43:50,400|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:43:53,403|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:43:53,403|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:43:56,406|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:43:56,406|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:43:59,409|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:43:59,410|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:44:02,412|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:44:02,412|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:44:05,414|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:44:05,414|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:44:08,416|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:44:08,417|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:44:11,419|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:44:11,420|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:44:14,421|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:44:14,421|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:44:17,423|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:44:17,423|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:44:20,426|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:44:20,426|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:44:23,429|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:44:23,429|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:44:26,432|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:44:26,432|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:44:29,436|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:44:29,436|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:44:32,439|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:44:32,439|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:44:35,441|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:44:35,442|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:44:38,446|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:44:38,447|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:44:41,450|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:44:41,451|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:44:44,454|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:44:44,455|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:44:47,459|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:44:47,459|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:44:50,464|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:44:50,464|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:44:53,467|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:44:53,467|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:44:56,470|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:44:56,470|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:44:59,474|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:44:59,475|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:45:02,477|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:45:02,478|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:45:05,483|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:45:05,484|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:45:08,487|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:45:08,488|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:45:11,493|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:45:11,494|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:45:14,497|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:45:14,497|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:45:17,499|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:45:17,500|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:45:20,504|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:45:20,504|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:45:23,507|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:45:23,508|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:45:26,512|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:45:26,513|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:45:29,517|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:45:29,518|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:45:32,519|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:45:32,520|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:45:35,523|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:45:35,524|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:45:38,528|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:45:38,528|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:45:41,532|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:45:41,532|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:45:44,536|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:45:44,536|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:45:47,541|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:45:47,542|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:45:50,546|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:45:50,546|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:45:53,551|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:45:53,552|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:45:56,557|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:45:56,558|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:45:59,561|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:45:59,561|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:46:02,567|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:46:02,568|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:46:05,572|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:46:05,573|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:46:08,577|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:46:08,578|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:46:11,582|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:46:11,583|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:46:14,588|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:46:14,589|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:46:17,593|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:46:17,593|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:46:20,596|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:46:20,596|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:46:23,599|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:46:23,600|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:46:26,603|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:46:26,604|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:46:29,608|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:46:29,608|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:46:32,613|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:46:32,613|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:46:35,617|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:46:35,617|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:46:38,620|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:46:38,620|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:46:41,623|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:46:41,623|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:46:44,626|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:46:44,627|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:46:47,630|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:46:47,631|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:46:50,633|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:46:50,634|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:46:53,638|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:46:53,639|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:46:56,643|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:46:56,644|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:46:59,648|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:46:59,649|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:47:02,653|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:47:02,654|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:47:05,660|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:47:05,661|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:47:08,667|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:47:08,668|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:47:11,672|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:47:11,673|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:47:14,678|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:47:14,679|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:47:17,683|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:47:17,684|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:47:20,687|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:47:20,688|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:47:23,694|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:47:23,695|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:47:23,697|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:47:23,698|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 107, in send_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:47:23,698|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:47:23,699|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:47:23,699|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:47:23,699|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 107, in send_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:47:23,700|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:47:24,699|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:47:24,700|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:47:24,701|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 107, in send_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:47:24,702|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:47:24,703|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:47:24,703|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:47:24,703|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 107, in send_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:47:24,704|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:47:28,705|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:47:28,705|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:47:31,710|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:47:31,711|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:47:34,714|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:47:34,714|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:47:37,718|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:47:37,719|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:47:40,724|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:47:40,724|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:47:43,727|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:47:43,727|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:47:46,733|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:47:46,734|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:47:49,737|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:47:49,738|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:47:52,740|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:47:52,741|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:47:55,744|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:47:55,745|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:47:58,748|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:47:58,749|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:48:01,754|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:48:01,755|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:48:04,759|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:48:04,759|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:48:07,764|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:48:07,764|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:48:10,767|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:48:10,768|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:48:13,772|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:48:13,772|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:48:16,777|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:48:16,777|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:48:19,780|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:48:19,781|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:48:22,785|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:48:22,786|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:48:25,787|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:48:25,788|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:48:28,792|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:48:28,792|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:48:31,797|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:48:31,798|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:48:34,802|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:48:34,802|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:48:37,807|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:48:37,807|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:48:40,810|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:48:40,810|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:48:43,814|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:48:43,815|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:48:46,817|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:48:46,818|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:48:49,822|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:48:49,822|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:48:52,827|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:48:52,828|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:48:55,831|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:48:55,832|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:48:58,836|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:48:58,837|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:49:01,840|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:49:01,841|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:49:04,844|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:49:04,845|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:49:07,849|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:49:07,850|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:49:10,853|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:49:10,854|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:49:13,857|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:49:13,858|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:49:16,862|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:49:16,863|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:49:19,866|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:49:19,867|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:49:22,870|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:49:22,870|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:49:25,873|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:49:25,873|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:49:28,877|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:49:28,877|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:49:31,882|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:49:31,882|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:49:34,886|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:49:34,886|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:49:37,889|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:49:37,890|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:49:40,894|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:49:40,894|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:49:43,898|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:49:43,898|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:49:46,903|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:49:46,903|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:49:49,906|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:49:49,907|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:49:52,911|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:49:52,912|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:49:55,916|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:49:55,917|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:49:58,920|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:49:58,920|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:50:01,924|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:50:01,924|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:50:04,929|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:50:04,930|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:50:07,935|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:50:07,937|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:50:10,941|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:50:10,942|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:50:13,947|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:50:13,948|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:50:16,951|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:50:16,952|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:50:19,957|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:50:19,958|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:50:22,961|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:50:22,961|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:50:25,963|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:50:25,964|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:50:28,967|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:50:28,967|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:50:31,970|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:50:31,970|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:50:34,974|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:50:34,975|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:50:37,977|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:50:37,978|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:50:40,980|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:50:40,981|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:50:43,984|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:50:43,985|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:50:46,989|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:50:46,990|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:50:49,994|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:50:49,994|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:50:52,997|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:50:52,998|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:50:56,000|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:50:56,001|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:50:59,006|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:50:59,007|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:51:02,011|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:51:02,011|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:51:05,016|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:51:05,016|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:51:08,020|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:51:08,021|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:51:11,024|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:51:11,024|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:51:14,026|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:51:14,027|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:51:17,031|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:51:17,031|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:51:20,034|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:51:20,034|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:51:23,036|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:51:23,037|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:51:26,040|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:51:26,041|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:51:29,045|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:51:29,045|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:51:32,050|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:51:32,051|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:51:35,055|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:51:35,056|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:51:38,060|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:51:38,061|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:51:41,064|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:51:41,064|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:51:44,067|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:51:44,068|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:51:47,071|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:51:47,072|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:51:50,075|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:51:50,075|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:51:53,079|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:51:53,080|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:51:56,084|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:51:56,084|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:51:59,086|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:51:59,086|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:52:02,089|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:52:02,089|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:52:05,093|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:52:05,094|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:52:08,096|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:52:08,096|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:52:11,100|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:52:11,100|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:52:14,103|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:52:14,104|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:52:17,107|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:52:17,108|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:52:20,110|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:52:20,110|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:52:23,114|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:52:23,115|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:52:26,119|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:52:26,119|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:52:29,122|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:52:29,123|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:52:29,123|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:52:29,124|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 107, in send_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:52:29,124|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:52:29,125|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:52:29,125|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:52:29,126|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 107, in send_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:52:29,126|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:52:30,125|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:52:30,126|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:52:30,126|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 107, in send_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:52:30,127|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:52:30,127|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:52:30,128|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:52:30,128|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 107, in send_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:52:30,129|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 14:52:34,132|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:52:34,133|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:52:37,137|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:52:37,137|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:52:40,140|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:52:40,141|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:52:43,143|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:52:43,143|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:52:46,146|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:52:46,146|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:52:49,150|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:52:49,150|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:52:52,154|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:52:52,155|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:52:55,159|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:52:55,159|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:52:58,163|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:52:58,164|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:53:01,168|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:53:01,169|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:53:04,173|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:53:04,173|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:53:07,177|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:53:07,178|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:53:10,181|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:53:10,181|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:53:13,183|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:53:13,184|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:53:16,186|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:53:16,186|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:53:19,190|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:53:19,190|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:53:22,193|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:53:22,194|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:53:25,199|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:53:25,199|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:53:28,204|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:53:28,204|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:53:31,207|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:53:31,208|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:53:34,210|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:53:34,210|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:53:37,214|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:53:37,214|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:53:40,217|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:53:40,218|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:53:43,221|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:53:43,221|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:53:46,226|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:53:46,226|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:53:49,228|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:53:49,229|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:53:52,233|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:53:52,234|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:53:55,238|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:53:55,239|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:53:58,241|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:53:58,242|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:54:01,245|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:54:01,246|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:54:04,250|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:54:04,250|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:54:07,255|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:54:07,256|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:54:10,261|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:54:10,262|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:54:13,265|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:54:13,266|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:54:16,270|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:54:16,270|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:54:19,274|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:54:19,275|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:54:22,280|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:54:22,281|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:54:25,285|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:54:25,286|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:54:28,290|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:54:28,291|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:54:31,295|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:54:31,295|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:54:34,300|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:54:34,301|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:54:37,304|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:54:37,304|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:54:40,308|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:54:40,309|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:54:43,312|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:54:43,313|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:54:46,317|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:54:46,318|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:54:49,322|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:54:49,323|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:54:52,326|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:54:52,327|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:54:55,331|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:54:55,331|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:54:58,333|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:54:58,333|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:55:01,335|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:55:01,336|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:55:04,340|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:55:04,340|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:55:07,344|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:55:07,345|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:55:10,349|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:55:10,349|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:55:13,352|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:55:13,353|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:55:16,357|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:55:16,358|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:55:19,359|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:55:19,360|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:55:22,363|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:55:22,363|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:55:25,367|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:55:25,367|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:55:28,369|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:55:28,369|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:55:31,373|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:55:31,373|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:55:34,376|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:55:34,376|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:55:37,379|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:55:37,379|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:55:40,382|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:55:40,382|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:55:43,386|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:55:43,386|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:55:46,390|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:55:46,390|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:55:49,393|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:55:49,394|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:55:52,397|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:55:52,398|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:55:55,402|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:55:55,402|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:55:58,405|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:55:58,405|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:56:01,408|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:56:01,409|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:56:04,413|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:56:04,414|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:56:07,416|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:56:07,417|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:56:10,421|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:56:10,422|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:56:13,425|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:56:13,425|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:56:16,429|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:56:16,430|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:56:19,433|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:56:19,433|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:56:22,436|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:56:22,436|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:56:25,440|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:56:25,441|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:56:28,444|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:56:28,445|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:56:31,448|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:56:31,448|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:56:34,450|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:56:34,451|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:56:37,453|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:56:37,453|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:56:40,456|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:56:40,456|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:56:43,460|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:56:43,460|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:56:46,463|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:56:46,463|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:56:49,466|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:56:49,467|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:56:52,469|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:56:52,469|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:56:55,472|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:56:55,473|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:56:58,475|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:56:58,475|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:57:01,478|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:57:01,479|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:57:04,480|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:57:04,481|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:57:07,483|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:57:07,483|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:57:10,486|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:57:10,486|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:57:13,489|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:57:13,489|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:57:16,492|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:57:16,493|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:57:19,496|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:57:19,496|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:57:22,499|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:57:22,500|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:57:25,502|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:57:25,503|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:57:28,506|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:57:28,506|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:57:31,509|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:57:31,510|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:57:34,512|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:57:34,513|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:57:37,515|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:57:37,515|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:57:40,518|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:57:40,518|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:57:43,521|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:57:43,522|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:57:46,525|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:57:46,526|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:57:49,529|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:57:49,529|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:57:52,533|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:57:52,533|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:57:55,536|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:57:55,536|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:57:58,539|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:57:58,540|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:58:01,543|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:58:01,544|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:58:04,547|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:58:04,547|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:58:07,550|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:58:07,550|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:58:10,553|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:58:10,553|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:58:13,556|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:58:13,556|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:58:16,559|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:58:16,559|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:58:19,562|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:58:19,562|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:58:22,567|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:58:22,567|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:58:25,569|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:58:25,570|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:58:28,573|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:58:28,574|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:58:31,577|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:58:31,577|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:58:34,580|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:58:34,581|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:58:37,586|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:58:37,586|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:58:40,590|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:58:40,591|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:58:43,593|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:58:43,593|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:58:46,597|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:58:46,597|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:58:49,600|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:58:49,601|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:58:52,605|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:58:52,605|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:58:55,608|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:58:55,608|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:58:58,613|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:58:58,613|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:59:01,618|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:59:01,619|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:59:04,623|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:59:04,624|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:59:07,627|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:59:07,628|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:59:10,632|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:59:10,632|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:59:13,636|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:59:13,637|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:59:16,640|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:59:16,640|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:59:19,644|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:59:19,644|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:59:22,647|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:59:22,647|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:59:25,651|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:59:25,652|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:59:28,654|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:59:28,655|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:59:31,658|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:59:31,658|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:59:34,662|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:59:34,662|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:59:37,665|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:59:37,666|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:59:40,671|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:59:40,672|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:59:43,676|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:59:43,677|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:59:46,681|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:59:46,682|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:59:49,685|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:59:49,686|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:59:52,689|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:59:52,690|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:59:55,693|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:59:55,694|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:59:58,697|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:59:58,697|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:00:01,700|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:00:01,701|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:00:04,704|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:00:04,704|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:00:07,706|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:00:07,706|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:00:10,711|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:00:10,711|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:00:13,713|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:00:13,714|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:00:16,718|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:00:16,718|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:00:19,722|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:00:19,722|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:00:22,726|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:00:22,726|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:00:25,730|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:00:25,731|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:00:28,733|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:00:28,733|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:00:31,737|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:00:31,738|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:00:34,741|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:00:34,742|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:00:37,745|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:00:37,745|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:00:40,748|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:00:40,749|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:00:43,752|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:00:43,753|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:00:46,756|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:00:46,756|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:00:49,760|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:00:49,760|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:00:52,764|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:00:52,764|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:00:55,767|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:00:55,768|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:00:58,771|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:00:58,772|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:01:01,776|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:01:01,777|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:01:04,782|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:01:04,783|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:01:07,787|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:01:07,788|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:01:10,792|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:01:10,793|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:01:13,798|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:01:13,798|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:01:16,803|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:01:16,804|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:01:19,807|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:01:19,808|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:01:22,812|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:01:22,813|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:01:25,817|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:01:25,818|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:01:28,822|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:01:28,823|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:01:31,827|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:01:31,828|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:01:34,832|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:01:34,833|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:01:37,838|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:01:37,839|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:01:40,844|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:01:40,844|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:01:43,848|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:01:43,848|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:01:46,851|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:01:46,852|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:01:49,855|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:01:49,855|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:01:52,859|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:01:52,859|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:01:55,862|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:01:55,862|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:01:58,865|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:01:58,865|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:02:01,866|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:02:01,866|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:02:04,869|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:02:04,870|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:02:07,873|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:02:07,873|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:02:10,876|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:02:10,877|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:02:13,879|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:02:13,879|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:02:16,883|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:02:16,884|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:02:19,886|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:02:19,887|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:02:22,890|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:02:22,891|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:02:25,893|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:02:25,893|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:02:28,895|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:02:28,895|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:02:31,898|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:02:31,898|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:02:34,902|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:02:34,902|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:02:37,906|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:02:37,907|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:02:40,910|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:02:40,911|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:02:40,912|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 15:02:40,912|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 15:02:40,913|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 15:02:40,914|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 107, in send_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 15:02:40,914|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 15:02:40,914|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 15:02:40,915|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 15:02:41,914|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 107, in send_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 15:02:41,915|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 15:02:41,916|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 15:02:41,916|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 15:02:41,917|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 107, in send_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 15:02:41,918|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 15:02:41,918|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 15:02:41,918|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 73, in recv_register
    await self.smart_start()
  File "utils/protocol/mc/aio_mc_client.py", line 52, in smart_start
    await self.open()
  File "utils/protocol/mc/aio_mc_client.py", line 55, in open
    await self._tcp_client.open()
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 445, in wait_for
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1070, in create_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
  File "asyncio/selector_events.py", line 509, in _sock_connect
OSError: [Errno 101] Network is unreachable

[ERROR|2023-12-07 15:02:45,920|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:02:45,921|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:02:48,924|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:02:48,925|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:02:51,928|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:02:51,928|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:02:54,933|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:02:54,933|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:02:57,938|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:02:57,939|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:03:00,942|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:03:00,942|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:03:03,945|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:03:03,946|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:03:06,950|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:03:06,950|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:03:09,953|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:03:09,953|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:03:12,957|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:03:12,958|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:03:15,962|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:03:15,963|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:03:18,966|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:03:18,967|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:03:21,970|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:03:21,970|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:03:24,974|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:03:24,974|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:03:27,977|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:03:27,978|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:03:30,981|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:03:30,982|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:03:33,987|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:03:33,987|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:03:36,992|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:03:36,992|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:03:39,996|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:03:39,996|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:03:43,001|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:03:43,002|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:03:46,006|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:03:46,007|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:03:49,012|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:03:49,012|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:03:52,017|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:03:52,018|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:03:55,022|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:03:55,023|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:03:58,026|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:03:58,026|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:04:01,030|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:04:01,031|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:04:04,036|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:04:04,037|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:04:07,039|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:04:07,039|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:04:10,043|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:04:10,044|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:04:13,048|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:04:13,049|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:04:16,052|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:04:16,052|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:04:19,057|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:04:19,058|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:04:22,060|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:04:22,061|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:04:25,064|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:04:25,065|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:04:28,068|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:04:28,069|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:04:31,072|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:04:31,072|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:04:34,076|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:04:34,077|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:04:37,079|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:04:37,080|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:04:40,083|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:04:40,084|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:04:43,088|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:04:43,089|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:04:46,093|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:04:46,094|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:04:49,097|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:04:49,098|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:04:52,100|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:04:52,101|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:04:55,106|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:04:55,106|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:04:58,109|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:04:58,109|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:05:01,113|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:05:01,114|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:05:04,116|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:05:04,117|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:05:07,121|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:05:07,122|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:05:10,126|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:05:10,127|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:05:13,130|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:05:13,131|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:05:16,133|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:05:16,134|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:05:19,136|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:05:19,136|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:05:22,139|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:05:22,139|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:05:25,143|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:05:25,144|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:05:28,146|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:05:28,146|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:05:31,150|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:05:31,151|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:05:34,154|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:05:34,155|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:05:37,159|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:05:37,159|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:05:40,163|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:05:40,163|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:05:43,167|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:05:43,167|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:05:46,170|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:05:46,170|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:05:49,174|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:05:49,175|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:05:52,179|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:05:52,180|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:05:55,183|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:05:55,183|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:05:58,186|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:05:58,186|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:06:01,189|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:06:01,190|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:06:04,193|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:06:04,194|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:06:07,197|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:06:07,197|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:06:10,200|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:06:10,200|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:06:13,204|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:06:13,204|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:06:16,208|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:06:16,208|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:06:19,213|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:06:19,213|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:06:22,216|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:06:22,216|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:06:25,220|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:06:25,220|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:06:28,223|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:06:28,223|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:06:31,226|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:06:31,227|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:06:34,230|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:06:34,230|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:06:37,234|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:06:37,234|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:06:40,238|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:06:40,238|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:06:43,241|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:06:43,242|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:06:46,244|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:06:46,244|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:06:49,248|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:06:49,248|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:06:52,252|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:06:52,253|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:06:55,256|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:06:55,256|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:06:58,260|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:06:58,260|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:07:01,265|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:07:01,265|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:07:04,270|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:07:04,270|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:07:07,274|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:07:07,274|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:07:10,276|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:07:10,277|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:07:13,280|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:07:13,280|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:07:16,283|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:07:16,284|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:07:19,286|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:07:19,287|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:07:22,290|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:07:22,291|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:07:25,295|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:07:25,295|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:07:28,299|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:07:28,300|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:07:31,303|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:07:31,304|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:07:34,308|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:07:34,308|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:07:37,310|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:07:37,311|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:07:40,314|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:07:40,314|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:07:43,316|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:07:43,317|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:07:46,320|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:07:46,320|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:07:49,324|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:07:49,324|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:07:52,327|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:07:52,327|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:07:55,331|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:07:55,331|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:07:58,335|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:07:58,336|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:08:01,339|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:08:01,339|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:08:04,343|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:08:04,343|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:08:07,347|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:08:07,347|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:08:10,351|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:08:10,352|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:08:13,355|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:08:13,356|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:08:16,360|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:08:16,360|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:08:19,363|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:08:19,364|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:08:22,367|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:08:22,368|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:08:25,370|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:08:25,370|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:08:28,373|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:08:28,374|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:08:31,377|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:08:31,378|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:08:34,381|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:08:34,382|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:08:37,385|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:08:37,386|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:08:40,390|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:08:40,391|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:08:43,394|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:08:43,395|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:08:46,399|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:08:46,399|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:08:49,403|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:08:49,403|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:08:52,406|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:08:52,407|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:08:55,411|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:08:55,411|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:08:58,414|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:08:58,415|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:09:01,419|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:09:01,419|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:09:04,423|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:09:04,423|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:09:07,427|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:09:07,428|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:09:10,430|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:09:10,430|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:09:13,433|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:09:13,433|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:09:16,436|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:09:16,437|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:09:19,441|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:09:19,441|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:09:22,445|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:09:22,445|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:09:25,449|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:09:25,449|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:09:28,453|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:09:28,453|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:09:31,456|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:09:31,457|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:09:34,460|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:09:34,460|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:09:37,464|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:09:37,465|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:09:40,469|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:09:40,469|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:09:43,473|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:09:43,473|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:09:46,476|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:09:46,476|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:09:49,480|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:09:49,480|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:09:52,483|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:09:52,483|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:09:55,486|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:09:55,487|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:09:58,491|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:09:58,491|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:10:01,493|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:10:01,494|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:10:04,496|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:10:04,497|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:10:07,500|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:10:07,501|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:10:10,503|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:10:10,504|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:10:13,506|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:10:13,507|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:10:16,511|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:10:16,511|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:10:19,514|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:10:19,515|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:10:22,519|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:10:22,519|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:10:25,523|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:10:25,523|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:10:28,526|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:10:28,527|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:10:31,530|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:10:31,530|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:10:34,534|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:10:34,534|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:10:37,536|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:10:37,537|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:10:40,540|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:10:40,540|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:10:43,544|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:10:43,544|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:10:46,547|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:10:46,548|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:10:49,551|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:10:49,552|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:10:52,555|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:10:52,556|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:10:55,557|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:10:55,558|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:10:58,562|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:10:58,562|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:11:01,566|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:11:01,566|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:11:04,570|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:11:04,570|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:11:07,573|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:11:07,574|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:11:10,578|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:11:10,578|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:11:13,582|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:11:13,582|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:11:16,585|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:11:16,586|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:11:19,589|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:11:19,589|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:11:22,592|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:11:22,593|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:11:25,596|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:11:25,596|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:11:28,599|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:11:28,599|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:11:31,602|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:11:31,602|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:11:34,605|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:11:34,605|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:11:37,608|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:11:37,609|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:11:40,610|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:11:40,610|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:11:43,613|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:11:43,613|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:11:46,616|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:11:46,616|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:11:49,619|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:11:49,619|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:11:52,622|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:11:52,623|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:11:55,626|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:11:55,626|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:11:58,629|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:11:58,629|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:12:01,632|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:12:01,632|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:12:04,634|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:12:04,635|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:12:07,636|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:12:07,637|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:12:10,639|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:12:10,640|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:12:13,641|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:12:13,642|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:12:16,646|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:12:16,646|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:12:19,650|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:12:19,651|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:12:22,653|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:12:22,654|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:12:25,656|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:12:25,657|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:12:28,660|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:12:28,660|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:12:31,663|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:12:31,664|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:12:34,666|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:12:34,667|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:12:37,670|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:12:37,670|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:12:40,674|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:12:40,675|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:12:43,680|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:12:43,681|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:12:46,683|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:12:46,684|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:12:49,686|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:12:49,687|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:12:52,691|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:12:52,691|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:12:55,696|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:12:55,696|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:12:58,700|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:12:58,700|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:13:01,705|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:13:01,706|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:13:04,711|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:13:04,712|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:13:07,716|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:13:07,716|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:13:10,721|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:13:10,722|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:13:13,726|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:13:13,727|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:13:16,731|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:13:16,732|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:13:19,735|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:13:19,736|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:13:22,740|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:13:22,741|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:13:25,745|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:13:25,746|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:13:28,749|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:13:28,749|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:13:31,752|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:13:31,753|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:13:34,756|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:13:34,756|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:13:37,760|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:13:37,761|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:13:40,763|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:13:40,763|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:13:43,766|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:13:43,766|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:13:46,770|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:13:46,771|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:13:49,776|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:13:49,777|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:13:52,780|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:13:52,781|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:13:55,783|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:13:55,783|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:13:58,786|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:13:58,786|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:14:01,789|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:14:01,790|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:14:04,794|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:14:04,794|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:14:07,797|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:14:07,797|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:14:10,801|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:14:10,802|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:14:13,807|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:14:13,808|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:14:16,812|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:14:16,813|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:14:19,817|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:14:19,818|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:14:22,820|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:14:22,821|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:14:25,825|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:14:25,826|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:14:28,830|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:14:28,831|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:14:31,834|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:14:31,834|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:14:34,839|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:14:34,839|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:14:37,844|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:14:37,845|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:14:40,849|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:14:40,850|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:14:43,853|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:14:43,853|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:14:46,856|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:14:46,857|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:14:49,860|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:14:49,860|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:14:52,864|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:14:52,864|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:14:55,869|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:14:55,870|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:14:58,873|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:14:58,874|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:15:01,877|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:15:01,877|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:15:04,880|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:15:04,880|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:15:07,884|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:15:07,884|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:15:10,889|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:15:10,890|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:15:13,894|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:15:13,894|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:15:16,899|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:15:16,900|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:15:19,903|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:15:19,903|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:15:22,906|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:15:22,907|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 15:15:25,910|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 15:15:25,910|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

