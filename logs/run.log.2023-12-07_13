[ERROR|2023-12-07 13:15:25,047|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:15:25,048|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:15:28,053|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:15:28,053|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:15:31,058|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:15:31,059|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:15:34,062|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:15:34,063|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:15:37,067|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:15:37,068|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:15:40,071|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:15:40,071|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:15:43,073|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:15:43,073|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:15:46,077|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:15:46,078|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:15:49,081|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:15:49,081|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:15:52,084|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:15:52,084|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:15:55,087|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:15:55,087|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:15:58,091|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:15:58,092|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:16:01,094|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:16:01,094|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:16:04,097|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:16:04,098|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:16:07,100|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:16:07,100|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:16:10,103|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:16:10,103|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:16:13,107|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:16:13,108|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:16:16,110|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:16:16,111|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:16:19,114|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:16:19,114|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:16:22,118|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:16:22,119|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:16:25,120|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:16:25,121|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:16:28,124|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:16:28,125|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:16:31,129|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:16:31,129|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:16:34,134|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:16:34,134|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:16:37,139|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:16:37,139|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:16:40,144|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:16:40,145|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:16:43,149|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:16:43,149|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:16:46,154|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:16:46,155|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:16:49,157|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:16:49,158|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:16:52,161|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:16:52,161|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:16:55,165|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:16:55,166|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:16:58,171|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:16:58,171|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:17:01,175|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:17:01,176|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:17:04,179|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:17:04,179|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:17:07,183|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:17:07,184|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:17:10,188|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:17:10,188|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:17:13,192|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:17:13,192|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:17:16,196|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:17:16,196|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:17:19,201|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:17:19,201|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:17:22,204|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:17:22,204|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:17:25,208|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:17:25,209|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:17:28,214|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:17:28,214|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:17:31,219|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:17:31,219|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:17:34,223|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:17:34,224|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:17:37,227|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:17:37,228|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:17:40,232|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:17:40,233|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:17:43,237|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:17:43,238|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:17:46,241|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:17:46,242|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:17:49,246|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:17:49,247|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:17:52,250|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:17:52,250|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:17:55,255|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:17:55,255|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:17:58,259|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:17:58,259|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:18:01,263|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:18:01,263|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:18:04,267|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:18:04,267|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:18:07,271|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:18:07,272|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:18:10,274|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:18:10,275|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:18:13,277|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:18:13,277|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:18:16,280|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:18:16,280|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:18:19,284|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:18:19,284|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:18:22,290|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:18:22,291|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:18:25,294|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:18:25,294|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:18:28,298|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:18:28,299|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:18:31,304|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:18:31,305|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:18:34,308|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:18:34,309|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:18:37,312|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:18:37,313|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:18:40,318|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:18:40,318|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:18:43,323|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:18:43,324|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:18:46,328|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:18:46,328|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:18:49,333|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:18:49,333|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:18:52,337|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:18:52,338|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:18:55,341|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:18:55,342|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:18:58,347|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:18:58,347|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:19:01,350|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:19:01,350|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:19:04,354|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:19:04,355|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:19:07,359|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:19:07,360|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:19:10,363|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:19:10,364|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:19:13,368|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:19:13,369|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:19:16,371|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:19:16,372|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:19:19,377|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:19:19,378|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:19:22,382|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:19:22,383|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:19:25,387|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:19:25,388|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:19:28,390|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:19:28,391|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:19:31,395|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:19:31,396|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:19:34,400|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:19:34,401|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:19:37,404|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:19:37,405|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:19:40,409|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:19:40,409|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:19:43,412|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:19:43,412|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:19:46,416|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:19:46,417|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:19:49,420|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:19:49,420|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:19:52,423|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:19:52,423|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:19:55,427|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:19:55,427|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:19:58,431|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:19:58,432|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:20:01,437|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:20:01,437|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:20:04,441|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:20:04,442|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:20:07,446|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:20:07,447|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:20:10,451|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:20:10,452|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:20:13,456|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:20:13,456|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:20:16,460|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:20:16,460|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:20:19,465|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:20:19,465|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:20:22,470|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:20:22,471|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:20:25,475|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:20:25,475|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:20:28,480|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:20:28,481|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:20:31,484|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:20:31,485|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:20:34,489|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:20:34,489|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:20:37,493|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:20:37,493|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:20:40,498|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:20:40,498|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:20:43,502|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:20:43,502|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:20:46,506|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:20:46,507|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:20:49,511|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:20:49,511|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:20:52,514|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:20:52,515|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:20:55,517|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:20:55,518|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:20:58,522|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:20:58,523|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:21:01,525|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:21:01,526|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:21:04,529|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:21:04,529|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:21:07,533|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:21:07,533|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:21:10,536|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:21:10,536|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:21:13,540|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:21:13,540|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:21:16,544|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:21:16,545|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:21:19,547|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:21:19,548|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:21:22,550|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:21:22,551|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:21:25,555|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:21:25,556|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:21:28,559|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:21:28,560|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:21:31,565|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:21:31,566|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:21:34,569|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:21:34,570|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:21:37,574|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:21:37,575|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:21:40,577|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:21:40,577|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:21:43,580|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:21:43,581|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:21:46,584|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:21:46,585|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:21:49,587|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:21:49,587|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:21:52,590|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:21:52,591|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:21:55,594|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:21:55,595|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:21:58,599|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:21:58,600|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:22:01,603|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:22:01,603|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:22:04,607|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:22:04,607|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:22:07,610|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:22:07,610|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:22:10,614|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:22:10,614|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:22:13,617|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:22:13,618|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:22:16,620|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:22:16,621|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:22:19,625|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:22:19,626|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:22:22,628|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:22:22,628|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:22:25,630|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:22:25,630|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:22:28,632|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:22:28,633|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:22:31,637|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:22:31,637|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:22:34,640|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:22:34,640|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:22:37,642|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:22:37,642|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:22:40,646|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:22:40,646|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:22:43,649|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:22:43,649|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:22:46,654|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:22:46,655|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:22:49,658|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:22:49,658|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:22:52,661|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:22:52,661|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:22:55,663|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:22:55,663|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:22:58,667|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:22:58,668|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:23:01,671|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:23:01,671|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:23:04,676|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:23:04,677|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:23:07,681|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:23:07,682|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:23:10,685|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:23:10,685|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:23:13,689|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:23:13,690|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:23:16,694|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:23:16,695|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:23:19,697|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:23:19,698|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:23:22,700|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:23:22,700|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:23:25,704|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:23:25,705|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:23:28,707|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:23:28,707|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:23:31,709|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:23:31,710|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:23:34,713|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:23:34,714|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:23:37,717|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:23:37,717|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:23:40,721|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:23:40,721|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:23:43,724|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:23:43,724|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:23:46,727|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:23:46,728|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:23:49,730|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:23:49,730|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:23:52,734|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:23:52,735|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:23:55,737|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:23:55,738|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:23:58,740|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:23:58,740|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:24:01,743|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:24:01,744|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:24:04,747|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:24:04,747|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:24:07,750|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:24:07,751|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:24:10,754|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:24:10,754|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:24:13,757|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:24:13,758|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:24:16,760|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:24:16,761|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:24:19,763|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:24:19,763|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:24:22,765|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:24:22,765|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:24:25,769|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:24:25,769|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:24:28,772|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:24:28,772|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:24:31,774|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:24:31,774|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:24:34,776|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:24:34,777|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:24:37,780|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:24:37,780|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:24:40,782|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:24:40,783|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:24:43,786|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:24:43,787|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:24:46,790|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:24:46,790|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:24:49,793|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:24:49,793|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:24:52,795|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:24:52,795|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:24:55,796|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:24:55,797|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:24:58,800|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:24:58,800|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:25:01,803|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:25:01,803|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:25:04,806|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:25:04,806|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:25:07,809|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:25:07,810|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:25:10,812|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:25:10,812|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:25:13,815|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:25:13,816|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:25:16,819|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:25:16,819|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:25:19,823|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:25:19,823|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:25:22,827|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:25:22,827|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:25:25,830|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:25:25,831|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:25:28,834|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:25:28,834|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:25:31,837|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:25:31,838|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:25:34,840|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:25:34,841|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:25:37,844|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:25:37,845|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:25:40,847|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:25:40,847|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:25:43,851|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:25:43,851|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:25:46,854|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:25:46,855|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:25:49,858|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:25:49,859|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:25:52,863|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:25:52,863|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:25:55,866|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:25:55,866|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:25:58,869|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:25:58,869|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:26:01,873|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:26:01,874|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:26:04,877|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:26:04,877|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:26:07,880|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:26:07,880|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:26:10,884|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:26:10,885|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:26:13,887|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:26:13,887|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:26:16,890|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:26:16,891|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:26:19,893|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:26:19,893|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:26:22,896|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:26:22,897|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:26:25,901|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:26:25,901|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:26:28,904|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:26:28,905|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:26:31,910|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:26:31,910|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:26:34,913|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:26:34,913|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:26:37,915|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:26:37,916|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:26:40,919|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:26:40,920|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:26:43,925|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:26:43,927|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:26:46,931|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:26:46,932|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:26:49,936|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:26:49,937|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:26:52,941|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:26:52,941|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:26:55,945|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:26:55,945|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:26:58,946|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:26:58,947|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:27:01,950|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:27:01,951|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:27:04,953|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:27:04,954|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:27:07,958|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:27:07,959|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:27:10,964|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:27:10,964|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:27:13,967|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:27:13,968|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:27:16,971|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:27:16,971|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:27:19,974|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:27:19,975|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:27:22,978|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:27:22,978|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:27:25,980|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:27:25,981|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:27:28,984|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:27:28,985|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:27:31,987|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:27:31,988|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:27:34,991|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:27:34,991|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:27:37,994|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:27:37,995|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:27:40,997|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:27:40,998|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:27:44,001|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:27:44,002|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:27:47,006|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:27:47,006|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:27:50,010|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:27:50,010|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:27:53,014|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:27:53,014|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:27:56,018|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:27:56,019|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:27:59,022|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:27:59,022|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:28:02,026|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:28:02,026|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:28:05,031|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:28:05,031|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:28:08,033|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:28:08,033|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:28:11,037|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:28:11,037|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:28:14,041|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:28:14,042|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:28:17,046|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:28:17,046|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:28:20,049|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:28:20,050|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:28:23,054|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:28:23,055|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:28:26,059|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:28:26,060|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:28:29,064|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:28:29,065|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:28:32,070|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:28:32,071|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:28:35,074|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:28:35,074|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:28:38,077|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:28:38,078|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:28:41,081|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:28:41,082|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:28:44,084|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:28:44,085|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:28:47,088|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:28:47,089|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:28:50,092|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:28:50,093|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:28:53,096|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:28:53,096|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:28:56,101|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:28:56,102|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:28:59,106|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:28:59,107|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:29:02,110|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:29:02,111|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:29:05,113|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:29:05,113|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:29:08,116|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:29:08,116|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:29:11,120|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:29:11,121|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:29:14,124|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:29:14,124|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:29:17,127|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:29:17,128|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:29:20,131|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:29:20,131|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:29:23,134|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:29:23,134|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:29:26,137|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:29:26,137|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:29:29,141|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:29:29,141|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:29:32,144|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:29:32,144|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:29:35,148|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:29:35,149|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:29:38,153|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:29:38,154|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:29:41,157|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:29:41,158|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:29:44,161|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:29:44,162|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:29:47,164|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:29:47,165|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:29:50,167|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:29:50,168|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:29:53,170|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:29:53,171|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:29:56,175|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:29:56,175|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:29:59,179|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:29:59,180|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:30:02,183|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:30:02,184|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:30:05,189|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:30:05,189|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:30:08,194|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:30:08,195|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:30:11,199|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:30:11,199|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:30:14,202|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:30:14,203|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:30:17,207|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:30:17,207|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:30:20,211|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:30:20,211|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:30:23,215|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:30:23,216|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:30:26,221|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:30:26,221|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:30:29,225|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:30:29,225|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:30:32,229|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:30:32,230|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:30:35,233|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:30:35,234|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:30:38,236|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:30:38,237|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:30:41,240|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:30:41,241|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:30:44,244|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:30:44,245|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:30:47,249|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:30:47,250|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:30:50,255|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:30:50,255|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:30:53,259|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:30:53,259|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:30:56,264|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:30:56,264|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:30:59,268|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:30:59,268|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:31:02,270|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:31:02,270|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:31:05,274|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:31:05,274|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:31:08,278|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:31:08,278|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:31:11,280|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:31:11,280|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:31:14,284|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:31:14,285|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:31:17,287|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:31:17,288|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:31:20,291|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:31:20,291|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:31:23,295|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:31:23,296|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:31:26,301|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:31:26,301|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:31:29,305|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:31:29,306|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:31:32,311|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:31:32,311|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:31:35,314|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:31:35,314|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:31:38,317|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:31:38,318|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:31:41,321|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:31:41,322|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:31:44,324|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:31:44,325|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:31:47,327|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:31:47,328|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:31:50,331|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:31:50,332|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:31:53,333|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:31:53,333|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:31:56,336|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:31:56,337|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:31:59,341|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:31:59,342|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:32:02,346|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:32:02,347|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:32:05,351|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:32:05,351|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:32:08,354|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:32:08,355|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:32:11,359|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:32:11,360|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:32:14,364|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:32:14,365|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:32:17,368|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:32:17,369|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:32:20,373|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:32:20,373|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:32:23,377|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:32:23,377|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:32:26,380|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:32:26,380|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:32:29,383|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:32:29,384|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:32:32,388|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:32:32,389|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:32:35,392|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:32:35,392|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:32:38,394|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:32:38,395|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:32:41,397|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:32:41,398|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:32:44,401|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:32:44,402|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:32:47,405|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:32:47,406|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:32:50,410|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:32:50,411|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:32:53,415|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:32:53,415|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:32:56,420|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:32:56,421|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:32:59,425|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:32:59,426|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:33:02,430|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:33:02,430|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:33:05,435|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:33:05,436|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:33:08,439|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:33:08,440|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:33:11,444|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:33:11,445|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:33:14,448|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:33:14,448|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:33:17,452|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:33:17,453|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:33:20,457|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:33:20,458|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:33:23,461|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:33:23,461|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:33:26,463|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:33:26,463|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:33:29,467|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:33:29,468|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:33:32,472|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:33:32,473|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:33:35,476|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:33:35,476|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:33:38,480|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:33:38,481|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:33:41,485|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:33:41,485|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:33:44,491|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:33:44,492|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:33:47,495|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:33:47,496|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:33:50,500|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:33:50,500|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:33:53,505|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:33:53,505|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:33:56,510|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:33:56,511|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:33:59,515|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:33:59,516|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:34:02,517|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:34:02,518|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:34:05,522|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:34:05,523|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:34:08,527|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:34:08,528|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:34:11,532|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:34:11,533|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:34:14,536|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:34:14,536|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:34:17,541|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:34:17,541|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:34:20,544|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:34:20,545|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:34:23,549|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:34:23,550|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:34:26,554|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:34:26,555|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:34:29,557|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:34:29,557|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:34:32,560|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:34:32,560|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:34:35,564|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:34:35,564|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:34:38,568|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:34:38,568|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:34:41,573|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:34:41,573|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:34:44,577|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:34:44,577|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:34:47,581|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:34:47,582|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:34:50,584|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:34:50,584|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:34:53,588|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:34:53,589|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:34:56,594|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:34:56,595|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:34:59,600|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:34:59,601|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:35:02,604|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:35:02,605|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:35:05,607|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:35:05,607|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:35:08,610|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:35:08,610|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:35:11,611|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:35:11,611|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:35:14,613|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:35:14,613|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:35:17,616|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:35:17,617|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:35:20,619|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:35:20,619|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:35:23,624|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:35:23,625|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:35:26,627|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:35:26,627|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:35:29,630|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:35:29,630|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:35:32,631|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:35:32,631|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:35:35,634|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:35:35,635|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:35:38,639|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:35:38,640|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:35:41,642|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:35:41,643|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:35:44,647|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:35:44,647|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:35:47,650|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:35:47,651|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:35:50,654|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:35:50,654|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:35:53,657|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:35:53,658|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:35:56,662|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:35:56,663|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:35:59,667|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:35:59,667|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:36:02,670|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:36:02,671|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:36:05,674|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:36:05,675|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:36:08,678|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:36:08,679|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:36:11,684|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:36:11,684|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:36:14,689|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:36:14,690|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:36:17,694|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:36:17,695|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:36:20,697|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:36:20,698|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:36:23,700|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:36:23,701|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:36:26,705|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:36:26,706|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:36:29,710|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:36:29,710|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:36:32,714|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:36:32,714|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:36:35,719|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:36:35,720|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:36:38,724|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:36:38,725|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:36:41,729|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:36:41,730|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:36:44,734|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:36:44,735|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:36:47,738|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:36:47,738|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:36:50,741|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:36:50,741|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:36:53,745|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:36:53,746|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:36:56,750|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:36:56,751|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:36:59,755|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:36:59,756|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:37:02,761|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:37:02,762|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:37:05,766|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:37:05,767|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:37:08,771|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:37:08,771|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:37:11,775|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:37:11,776|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:37:14,780|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:37:14,781|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:37:17,784|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:37:17,785|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:37:20,787|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:37:20,788|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:37:23,791|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:37:23,792|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:37:26,797|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:37:26,797|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:37:29,800|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:37:29,801|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:37:32,803|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:37:32,804|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:37:35,807|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:37:35,808|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:37:38,812|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:37:38,812|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:37:41,816|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:37:41,816|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:37:44,821|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:37:44,822|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:37:47,824|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:37:47,824|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:37:50,828|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:37:50,829|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:37:53,832|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:37:53,832|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:37:56,836|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:37:56,837|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:37:59,840|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:37:59,841|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:38:02,844|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:38:02,844|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:38:05,847|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:38:05,848|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:38:08,850|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:38:08,850|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:38:11,853|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:38:11,853|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:38:14,856|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:38:14,856|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:38:17,860|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:38:17,860|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:38:20,863|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:38:20,864|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:38:23,867|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:38:23,867|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:38:26,870|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:38:26,870|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:38:29,874|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:38:29,874|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:38:32,877|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:38:32,877|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:38:35,880|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:38:35,881|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:38:38,884|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:38:38,885|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:38:41,886|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:38:41,887|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:38:44,889|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:38:44,890|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:38:47,891|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:38:47,892|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:38:50,894|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:38:50,894|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:38:53,896|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:38:53,897|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:38:56,899|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:38:56,900|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:38:59,902|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:38:59,902|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:39:02,905|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:39:02,905|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:39:05,909|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:39:05,909|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:39:08,912|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:39:08,912|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:39:11,915|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:39:11,915|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:39:14,919|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:39:14,919|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:39:17,922|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:39:17,923|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:39:20,927|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:39:20,927|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:39:23,931|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:39:23,931|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:39:26,933|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:39:26,934|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:39:29,937|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:39:29,938|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:39:32,941|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:39:32,941|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:39:35,944|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:39:35,945|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:39:38,947|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:39:38,947|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:39:41,951|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:39:41,951|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:39:44,954|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:39:44,954|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:39:47,957|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:39:47,958|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:39:50,961|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:39:50,961|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:39:53,963|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:39:53,964|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:39:56,967|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:39:56,968|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:39:59,970|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:39:59,970|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:40:02,973|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:40:02,974|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:40:05,977|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:40:05,978|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:40:08,980|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:40:08,981|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:40:11,984|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:40:11,984|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:40:14,987|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:40:14,988|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:40:17,990|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:40:17,990|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:40:20,993|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:40:20,993|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:40:23,997|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:40:23,997|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:40:27,001|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:40:27,002|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:40:30,007|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:40:30,008|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:40:33,012|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:40:33,013|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:40:36,017|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:40:36,018|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:40:39,022|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:40:39,023|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:40:42,027|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:40:42,028|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:40:45,032|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:40:45,033|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:40:48,037|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:40:48,038|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:40:51,041|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:40:51,042|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:40:54,044|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:40:54,045|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:40:57,048|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:40:57,048|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:41:00,052|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:41:00,053|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:41:03,057|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:41:03,058|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:41:06,061|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:41:06,062|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:41:09,065|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:41:09,066|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:41:12,071|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:41:12,071|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:41:15,073|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:41:15,073|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:41:18,076|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:41:18,076|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:41:21,080|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:41:21,081|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:41:24,086|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:41:24,087|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:41:27,092|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:41:27,093|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:41:30,098|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:41:30,099|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:41:33,103|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:41:33,104|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:41:36,109|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:41:36,110|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:41:39,114|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:41:39,115|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:41:42,118|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:41:42,119|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:41:45,124|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:41:45,125|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:41:48,128|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:41:48,129|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:41:51,132|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:41:51,132|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:41:54,137|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:41:54,137|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:41:57,140|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:41:57,140|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:42:00,143|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:42:00,143|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:42:03,145|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:42:03,146|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:42:06,151|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:42:06,151|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:42:09,156|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:42:09,156|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:42:12,161|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:42:12,162|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:42:15,167|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:42:15,168|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:42:18,170|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:42:18,171|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:42:21,173|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:42:21,173|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:42:24,177|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:42:24,177|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:42:27,181|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:42:27,182|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:42:30,187|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:42:30,187|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:42:33,190|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:42:33,191|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:42:36,196|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:42:36,197|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:42:39,201|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:42:39,202|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:42:42,207|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:42:42,207|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:42:45,210|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:42:45,210|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:42:48,214|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:42:48,215|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:42:51,217|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:42:51,218|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:42:54,222|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:42:54,223|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:42:57,227|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:42:57,227|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:43:00,230|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:43:00,231|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:43:03,233|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:43:03,234|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:43:06,237|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:43:06,237|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:43:09,240|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:43:09,240|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:43:12,244|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:43:12,245|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:43:15,249|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:43:15,250|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:43:18,255|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:43:18,256|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:43:21,260|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:43:21,261|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:43:24,264|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:43:24,264|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:43:27,268|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:43:27,269|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:43:30,273|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:43:30,273|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:43:33,275|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:43:33,276|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:43:36,281|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:43:36,282|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:43:39,286|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:43:39,287|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:43:42,291|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:43:42,291|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:43:45,294|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:43:45,295|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:43:48,297|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:43:48,298|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:43:51,302|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:43:51,302|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:43:54,307|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:43:54,308|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:43:57,311|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:43:57,312|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:44:00,316|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:44:00,316|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:44:03,321|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:44:03,321|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:44:06,327|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:44:06,327|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:44:09,331|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:44:09,332|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:44:12,337|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:44:12,338|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:44:15,341|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:44:15,342|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:44:18,347|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:44:18,347|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:44:21,352|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:44:21,352|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:44:24,355|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:44:24,355|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:44:27,358|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:44:27,359|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:44:30,363|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:44:30,364|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:44:33,367|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:44:33,368|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:44:36,373|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:44:36,374|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:44:39,377|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:44:39,378|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:44:42,381|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:44:42,382|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:44:45,386|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:44:45,387|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:44:48,392|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:44:48,393|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:44:51,397|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:44:51,398|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:44:54,402|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:44:54,403|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:44:57,407|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:44:57,408|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:45:00,411|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:45:00,412|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:45:03,416|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:45:03,416|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:45:06,421|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:45:06,422|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:45:09,427|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:45:09,427|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:45:12,431|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:45:12,432|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:45:15,435|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:45:15,436|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:45:18,441|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:45:18,441|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:45:21,444|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:45:21,445|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:45:24,448|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:45:24,448|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:45:27,452|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:45:27,453|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:45:30,458|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:45:30,459|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:45:33,463|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:45:33,463|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:45:36,467|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:45:36,468|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:45:39,472|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:45:39,473|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:45:42,477|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:45:42,478|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:45:45,482|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:45:45,483|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:45:48,487|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:45:48,488|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:45:51,491|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:45:51,491|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:45:54,495|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:45:54,496|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:45:57,500|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:45:57,500|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:46:00,505|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:46:00,506|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:46:03,510|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:46:03,510|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:46:06,515|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:46:06,516|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:46:09,520|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:46:09,521|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:46:12,526|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:46:12,527|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:46:15,531|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:46:15,532|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:46:18,537|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:46:18,537|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:46:21,542|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:46:21,542|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:46:24,546|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:46:24,547|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:46:27,550|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:46:27,550|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:46:30,554|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:46:30,555|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:46:33,561|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:46:33,562|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:46:36,564|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:46:36,565|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:46:39,569|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:46:39,570|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:46:42,573|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:46:42,574|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:46:45,579|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:46:45,580|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:46:48,584|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:46:48,585|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:46:51,587|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:46:51,588|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:46:54,592|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:46:54,593|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:46:57,598|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:46:57,599|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:47:00,604|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:47:00,605|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:47:03,609|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:47:03,610|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:47:06,615|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:47:06,615|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:47:09,620|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:47:09,621|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:47:12,624|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:47:12,625|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:47:15,627|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:47:15,628|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:47:18,631|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:47:18,632|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:47:21,637|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:47:21,637|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:47:24,642|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:47:24,643|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:47:27,647|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:47:27,648|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:47:30,653|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:47:30,653|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:47:33,658|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:47:33,658|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:47:36,661|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:47:36,662|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:47:39,666|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:47:39,667|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:47:42,672|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:47:42,673|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:47:45,678|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:47:45,678|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:47:48,683|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:47:48,684|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:47:51,688|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:47:51,689|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:47:54,692|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:47:54,693|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:47:57,698|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:47:57,699|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:48:00,704|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:48:00,705|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:48:03,709|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:48:03,709|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:48:06,713|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:48:06,714|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:48:09,717|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:48:09,718|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:48:12,721|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:48:12,721|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:48:15,724|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:48:15,725|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:48:18,728|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:48:18,729|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:48:21,731|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:48:21,732|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:48:24,736|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:48:24,737|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:48:27,741|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:48:27,742|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:48:30,746|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:48:30,747|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:48:33,751|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:48:33,752|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:48:36,757|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:48:36,757|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:48:39,761|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:48:39,761|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:48:42,765|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:48:42,766|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:48:45,771|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:48:45,771|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:48:48,774|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:48:48,775|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:48:51,778|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:48:51,779|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:48:54,783|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:48:54,784|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:48:57,788|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:48:57,788|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:49:00,793|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:49:00,793|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:49:03,796|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:49:03,797|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:49:06,801|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:49:06,801|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:49:09,804|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:49:09,805|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:49:12,807|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:49:12,808|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:49:15,813|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:49:15,813|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:49:18,817|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:49:18,818|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:49:21,822|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:49:21,823|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:49:24,826|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:49:24,827|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:49:27,830|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:49:27,831|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:49:30,835|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:49:30,836|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:49:33,839|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:49:33,840|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:49:36,845|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:49:36,846|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:49:39,850|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:49:39,851|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:49:42,854|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:49:42,854|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:49:45,859|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:49:45,860|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:49:48,865|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:49:48,865|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:49:51,870|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:49:51,871|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:49:54,874|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:49:54,874|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:49:57,876|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:49:57,877|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:50:00,881|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:50:00,882|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:50:03,885|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:50:03,885|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:50:06,890|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:50:06,891|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:50:09,893|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:50:09,894|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:50:12,897|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:50:12,898|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:50:15,901|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:50:15,902|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:50:18,906|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:50:18,907|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:50:21,911|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:50:21,912|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:50:24,915|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:50:24,916|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:50:27,920|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:50:27,920|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:50:30,925|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:50:30,925|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:50:33,930|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:50:33,931|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:50:36,934|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:50:36,935|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:50:39,937|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:50:39,938|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:50:42,941|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:50:42,941|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:50:45,944|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:50:45,944|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:50:48,947|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:50:48,948|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:50:51,950|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:50:51,951|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:50:54,954|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:50:54,954|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:50:57,957|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:50:57,958|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:51:00,960|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:51:00,961|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:51:03,963|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:51:03,964|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:51:06,967|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:51:06,967|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:51:09,970|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:51:09,970|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:51:12,973|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:51:12,974|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:51:15,976|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:51:15,977|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:51:18,980|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:51:18,980|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:51:21,983|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:51:21,984|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:51:24,987|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:51:24,987|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:51:27,990|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:51:27,990|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:51:30,993|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:51:30,993|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:51:33,996|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:51:33,996|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:51:36,999|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:51:36,999|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:51:40,002|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:51:40,002|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:51:43,005|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:51:43,005|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:51:46,009|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:51:46,009|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:51:49,011|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:51:49,011|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:51:52,014|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:51:52,014|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:51:55,017|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:51:55,017|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:51:58,020|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:51:58,020|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:52:01,023|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:52:01,024|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:52:04,027|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:52:04,028|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:52:07,030|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:52:07,030|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:52:10,034|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:52:10,034|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:52:13,038|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:52:13,039|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:52:16,043|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:52:16,044|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:52:19,047|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:52:19,048|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:52:22,050|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:52:22,051|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:52:25,054|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:52:25,054|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:52:28,057|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:52:28,058|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:52:31,061|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:52:31,061|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:52:34,064|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:52:34,064|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:52:37,067|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:52:37,068|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:52:40,071|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:52:40,071|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:52:43,073|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:52:43,073|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:52:46,077|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:52:46,078|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:52:49,080|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:52:49,081|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:52:52,084|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:52:52,085|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:52:55,089|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:52:55,090|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:52:58,095|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:52:58,096|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:53:01,101|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:53:01,102|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:53:04,106|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:53:04,107|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:53:07,111|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:53:07,111|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:53:10,114|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:53:10,115|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:53:13,117|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:53:13,118|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:53:16,122|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:53:16,123|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:53:19,127|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:53:19,127|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:53:22,131|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:53:22,132|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:53:25,134|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:53:25,135|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:53:28,140|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:53:28,141|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:53:31,145|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:53:31,146|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:53:34,149|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:53:34,150|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:53:37,154|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:53:37,155|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:53:40,159|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:53:40,159|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:53:43,165|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:53:43,166|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:53:46,168|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:53:46,168|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:53:49,172|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:53:49,173|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:53:52,178|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:53:52,179|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:53:55,183|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:53:55,184|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:53:58,188|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:53:58,189|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:54:01,191|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:54:01,192|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:54:04,194|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:54:04,195|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:54:07,197|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:54:07,197|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:54:10,200|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:54:10,201|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:54:13,205|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:54:13,206|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:54:16,211|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:54:16,212|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:54:19,214|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:54:19,215|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:54:22,218|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:54:22,219|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:54:25,224|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:54:25,225|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:54:28,228|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:54:28,229|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:54:31,234|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:54:31,234|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:54:34,239|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:54:34,240|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:54:37,243|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:54:37,244|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:54:40,247|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:54:40,248|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:54:43,251|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:54:43,252|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:54:46,257|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:54:46,258|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:54:49,262|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:54:49,263|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:54:52,267|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:54:52,268|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:54:55,270|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:54:55,270|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:54:58,274|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:54:58,275|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:55:01,280|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:55:01,281|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:55:04,285|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:55:04,286|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:55:07,289|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:55:07,290|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:55:10,293|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:55:10,293|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:55:13,297|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:55:13,298|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:55:16,301|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:55:16,302|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:55:19,307|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:55:19,307|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:55:22,312|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:55:22,312|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:55:25,316|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:55:25,317|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:55:28,320|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:55:28,321|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:55:31,323|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:55:31,324|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:55:34,327|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:55:34,328|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:55:37,330|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:55:37,331|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:55:40,334|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:55:40,335|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:55:43,338|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:55:43,339|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:55:46,343|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:55:46,343|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:55:49,347|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:55:49,348|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:55:52,353|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:55:52,353|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:55:55,357|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:55:55,358|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:55:58,361|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:55:58,362|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:56:01,364|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:56:01,365|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:56:04,367|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:56:04,368|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:56:07,371|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:56:07,371|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:56:10,376|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:56:10,377|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:56:13,381|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:56:13,381|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:56:16,385|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:56:16,386|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:56:19,390|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:56:19,391|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:56:22,396|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:56:22,396|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:56:25,401|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:56:25,401|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:56:28,406|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:56:28,407|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:56:31,411|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:56:31,412|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:56:34,417|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:56:34,418|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:56:37,421|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:56:37,422|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:56:40,427|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:56:40,428|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:56:43,433|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:56:43,433|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:56:46,436|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:56:46,436|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:56:49,440|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:56:49,441|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:56:52,444|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:56:52,445|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:56:55,450|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:56:55,451|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:56:58,454|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:56:58,455|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:57:01,458|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:57:01,459|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:57:04,464|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:57:04,465|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:57:07,468|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:57:07,469|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:57:10,471|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:57:10,472|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:57:13,475|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:57:13,476|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:57:16,481|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:57:16,482|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:57:19,487|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:57:19,489|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:57:22,493|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:57:22,494|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:57:25,497|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:57:25,498|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:57:28,501|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:57:28,502|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:57:31,504|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:57:31,504|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:57:34,507|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:57:34,507|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:57:37,511|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:57:37,512|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:57:40,516|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:57:40,517|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:57:43,521|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:57:43,522|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:57:46,526|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:57:46,527|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:57:49,531|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:57:49,531|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:57:52,533|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:57:52,533|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:57:55,537|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:57:55,537|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:57:58,541|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:57:58,542|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:58:01,546|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:58:01,547|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:58:04,550|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:58:04,551|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:58:07,555|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:58:07,556|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:58:10,560|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:58:10,561|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:58:13,565|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:58:13,566|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:58:16,570|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:58:16,570|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:58:19,573|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:58:19,573|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:58:22,576|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:58:22,577|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:58:25,581|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:58:25,582|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:58:28,586|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:58:28,587|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:58:31,591|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:58:31,591|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:58:34,594|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:58:34,594|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:58:37,598|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:58:37,599|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:58:40,603|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:58:40,604|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:58:43,608|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:58:43,608|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:58:46,611|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:58:46,612|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:58:49,615|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:58:49,616|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:58:52,621|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:58:52,621|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:58:55,626|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:58:55,627|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:58:58,630|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:58:58,631|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:59:01,634|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:59:01,635|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:59:04,638|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:59:04,639|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:59:07,644|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:59:07,644|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:59:10,647|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:59:10,648|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:59:13,653|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:59:13,654|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:59:16,659|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:59:16,660|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:59:19,664|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:59:19,665|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:59:22,669|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:59:22,669|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:59:25,672|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:59:25,673|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:59:28,677|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:59:28,678|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:59:31,680|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:59:31,681|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:59:34,685|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:59:34,685|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:59:37,688|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:59:37,688|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:59:40,693|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:59:40,694|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:59:43,698|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:59:43,699|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:59:46,703|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:59:46,704|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:59:49,709|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:59:49,710|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:59:52,714|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:59:52,714|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:59:55,718|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:59:55,719|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 13:59:58,722|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 13:59:58,723|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:00:01,728|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:00:01,729|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:00:04,732|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:00:04,732|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:00:07,737|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:00:07,738|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:00:10,741|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:00:10,742|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:00:13,747|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:00:13,747|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:00:16,751|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:00:16,751|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:00:19,754|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:00:19,755|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:00:22,757|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:00:22,757|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:00:25,762|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:00:25,763|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:00:28,766|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:00:28,766|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:00:31,769|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:00:31,770|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:00:34,772|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:00:34,772|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:00:37,774|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:00:37,775|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:00:40,779|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:00:40,780|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:00:43,783|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:00:43,784|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:00:46,787|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:00:46,788|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:00:49,792|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:00:49,793|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:00:52,797|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:00:52,798|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:00:55,801|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:00:55,802|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:00:58,807|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:00:58,808|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:01:01,812|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:01:01,812|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:01:04,815|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:01:04,816|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:01:07,820|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:01:07,820|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:01:10,824|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:01:10,825|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:01:13,826|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:01:13,827|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:01:16,830|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:01:16,831|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:01:19,835|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:01:19,835|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:01:22,839|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:01:22,839|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:01:25,842|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:01:25,843|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:01:28,847|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:01:28,848|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:01:31,851|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:01:31,851|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:01:34,854|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:01:34,855|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:01:37,857|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:01:37,858|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:01:40,861|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:01:40,862|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:01:43,865|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:01:43,866|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:01:46,870|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:01:46,870|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:01:49,874|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:01:49,874|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:01:52,877|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:01:52,878|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:01:55,883|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:01:55,884|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:01:58,888|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:01:58,889|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:02:01,892|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:02:01,893|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:02:04,897|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:02:04,898|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:02:07,902|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:02:07,902|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:02:10,906|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:02:10,907|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:02:13,911|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:02:13,912|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:02:16,914|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:02:16,914|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:02:19,916|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:02:19,917|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:02:22,921|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:02:22,921|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:02:25,925|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:02:25,926|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:02:28,930|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:02:28,931|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:02:31,935|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:02:31,935|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:02:34,939|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:02:34,939|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:02:37,944|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:02:37,945|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:02:40,949|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:02:40,949|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:02:43,954|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:02:43,954|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:02:46,957|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:02:46,958|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:02:49,960|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:02:49,961|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:02:52,965|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:02:52,965|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:02:55,967|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:02:55,967|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:02:58,970|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:02:58,971|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:03:01,973|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:03:01,974|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:03:04,977|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:03:04,978|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:03:07,981|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:03:07,982|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:03:10,985|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:03:10,986|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:03:13,989|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:03:13,989|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:03:16,994|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:03:16,995|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:03:20,000|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:03:20,000|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:03:23,003|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:03:23,004|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:03:26,007|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:03:26,008|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:03:29,012|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:03:29,013|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:03:32,018|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:03:32,019|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:03:35,023|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:03:35,023|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:03:38,026|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:03:38,027|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:03:41,031|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:03:41,031|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:03:44,036|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:03:44,036|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:03:47,039|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:03:47,040|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:03:50,044|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:03:50,044|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:03:53,047|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:03:53,048|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:03:56,050|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:03:56,050|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:03:59,053|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:03:59,054|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:04:02,057|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:04:02,057|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:04:05,060|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:04:05,060|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:04:08,063|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:04:08,064|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:04:11,067|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:04:11,067|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:04:14,070|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:04:14,070|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:04:17,073|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:04:17,073|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:04:20,076|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:04:20,077|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:04:23,080|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:04:23,080|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:04:26,081|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:04:26,082|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:04:29,083|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:04:29,083|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:04:32,086|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:04:32,087|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:04:35,089|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:04:35,089|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:04:38,092|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:04:38,092|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:04:41,095|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:04:41,095|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:04:44,098|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:04:44,099|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:04:47,102|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:04:47,102|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:04:50,105|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:04:50,105|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:04:53,108|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:04:53,109|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:04:56,112|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:04:56,112|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:04:59,115|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:04:59,116|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:05:02,119|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:05:02,119|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:05:05,121|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:05:05,122|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:05:08,124|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:05:08,124|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:05:11,127|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:05:11,127|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:05:14,130|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:05:14,131|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:05:17,134|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:05:17,134|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:05:20,137|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:05:20,138|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:05:23,141|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:05:23,141|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:05:26,144|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:05:26,144|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:05:29,147|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:05:29,147|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:05:32,151|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:05:32,151|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:05:35,154|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:05:35,155|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:05:38,157|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:05:38,158|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:05:41,160|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:05:41,161|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:05:44,164|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:05:44,164|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:05:47,167|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:05:47,168|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:05:50,171|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:05:50,172|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:05:53,176|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:05:53,177|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:05:56,181|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:05:56,181|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:05:59,184|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:05:59,185|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:06:02,189|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:06:02,190|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:06:05,194|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:06:05,194|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:06:08,197|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:06:08,198|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:06:11,203|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:06:11,203|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:06:14,208|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:06:14,209|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:06:17,213|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:06:17,213|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:06:20,218|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:06:20,219|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:06:23,223|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:06:23,224|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:06:26,228|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:06:26,229|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:06:29,231|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:06:29,231|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:06:32,235|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:06:32,236|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:06:35,241|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:06:35,242|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:06:38,247|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:06:38,248|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:06:41,250|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:06:41,251|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:06:44,255|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:06:44,256|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:06:47,261|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:06:47,261|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:06:50,264|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:06:50,265|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:06:53,267|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:06:53,268|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:06:56,272|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:06:56,272|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:06:59,276|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:06:59,277|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:07:02,280|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:07:02,281|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:07:05,285|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:07:05,286|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:07:08,290|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:07:08,290|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:07:11,294|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:07:11,295|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:07:14,299|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:07:14,300|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:07:17,304|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:07:17,304|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:07:20,309|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:07:20,309|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:07:23,314|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:07:23,315|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:07:26,319|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:07:26,320|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:07:29,324|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:07:29,325|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:07:32,329|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:07:32,330|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:07:35,334|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:07:35,334|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:07:38,338|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:07:38,339|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:07:41,342|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:07:41,342|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:07:44,347|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:07:44,348|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:07:47,353|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:07:47,354|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:07:50,357|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:07:50,357|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:07:53,361|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:07:53,362|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:07:56,364|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:07:56,365|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:07:59,370|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:07:59,370|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:08:02,375|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:08:02,375|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:08:05,380|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:08:05,380|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:08:08,384|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:08:08,385|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:08:11,390|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:08:11,391|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:08:14,394|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:08:14,395|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:08:17,398|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:08:17,399|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:08:20,404|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:08:20,405|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:08:23,409|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:08:23,410|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:08:26,415|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:08:26,415|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:08:29,418|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:08:29,419|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:08:32,423|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:08:32,424|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:08:35,429|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:08:35,429|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:08:38,435|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:08:38,435|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:08:41,440|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:08:41,441|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:08:44,445|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:08:44,446|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:08:47,448|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:08:47,449|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:08:50,453|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:08:50,454|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:08:53,458|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:08:53,458|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:08:56,463|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:08:56,464|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:08:59,467|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:08:59,468|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:09:02,472|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:09:02,473|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:09:05,477|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:09:05,478|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:09:08,482|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:09:08,482|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:09:11,486|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:09:11,487|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:09:14,491|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:09:14,492|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:09:17,497|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:09:17,497|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:09:20,500|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:09:20,501|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:09:23,505|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:09:23,506|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:09:26,510|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:09:26,511|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:09:29,515|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:09:29,516|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:09:32,520|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:09:32,521|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:09:35,525|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:09:35,526|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:09:38,528|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:09:38,529|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:09:41,533|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:09:41,534|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:09:44,537|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:09:44,538|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:09:47,540|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:09:47,541|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:09:50,546|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:09:50,547|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:09:53,551|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:09:53,552|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:09:56,557|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:09:56,557|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:09:59,560|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:09:59,561|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:10:02,566|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:10:02,566|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:10:05,571|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:10:05,572|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:10:08,576|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:10:08,577|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:10:11,581|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:10:11,582|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:10:14,584|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:10:14,585|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:10:17,590|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:10:17,590|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:10:20,594|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:10:20,596|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:10:23,601|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:10:23,601|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:10:26,606|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:10:26,607|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:10:29,611|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:10:29,612|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:10:32,617|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:10:32,618|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:10:35,622|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:10:35,623|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:10:38,628|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:10:38,628|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:10:41,631|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:10:41,632|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:10:44,637|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:10:44,638|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:10:47,642|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:10:47,643|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:10:50,647|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:10:50,648|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:10:53,652|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:10:53,654|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:10:56,658|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:10:56,658|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:10:59,664|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:10:59,664|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:11:02,668|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:11:02,669|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:11:05,673|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:11:05,674|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:11:08,677|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:11:08,678|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:11:11,680|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:11:11,681|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:11:14,685|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:11:14,686|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:11:17,691|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:11:17,691|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:11:20,694|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:11:20,694|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:11:23,697|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:11:23,698|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:11:26,702|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:11:26,702|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:11:29,707|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:11:29,707|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:11:32,711|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:11:32,711|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:11:35,716|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:11:35,717|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:11:38,721|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:11:38,722|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:11:41,727|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:11:41,727|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:11:44,731|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:11:44,731|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:11:47,734|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:11:47,734|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:11:50,739|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:11:50,740|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:11:53,745|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:11:53,745|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:11:56,749|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:11:56,750|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:11:59,754|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:11:59,755|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:12:02,759|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:12:02,759|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:12:05,763|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:12:05,763|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:12:08,768|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:12:08,768|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:12:11,771|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:12:11,772|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:12:14,776|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:12:14,777|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:12:17,781|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:12:17,781|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:12:20,783|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:12:20,784|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:12:23,787|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:12:23,788|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:12:26,793|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:12:26,794|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:12:29,798|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:12:29,799|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:12:32,803|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:12:32,804|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:12:35,808|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:12:35,809|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:12:38,813|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:12:38,814|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:12:41,818|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:12:41,819|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:12:44,821|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:12:44,822|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:12:47,827|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:12:47,828|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:12:50,831|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:12:50,832|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:12:53,837|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:12:53,838|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:12:56,842|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:12:56,843|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:12:59,846|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:12:59,846|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:13:02,851|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:13:02,852|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:13:05,856|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:13:05,857|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:13:08,861|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:13:08,862|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:13:11,867|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:13:11,868|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:13:14,870|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:13:14,871|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:13:17,875|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:13:17,875|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:13:20,881|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:13:20,881|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:13:23,884|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:13:23,885|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:13:26,890|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:13:26,891|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:13:29,894|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:13:29,894|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:13:32,899|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:13:32,900|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:13:35,904|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:13:35,904|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:13:38,909|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:13:38,909|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:13:41,912|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:13:41,913|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:13:44,916|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:13:44,916|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:13:47,919|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:13:47,920|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:13:50,924|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:13:50,925|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:13:53,929|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:13:53,929|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:13:56,935|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:13:56,936|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:13:59,938|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:13:59,938|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:14:02,941|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:14:02,942|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:14:05,947|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:14:05,947|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:14:08,952|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:14:08,953|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:14:11,957|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:14:11,958|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:14:14,961|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:14:14,961|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:14:17,963|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:14:17,964|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:14:20,967|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:14:20,967|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:14:23,970|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:14:23,971|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:14:26,974|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:14:26,974|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:14:29,977|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:14:29,977|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:14:32,981|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:14:32,981|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:14:35,985|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:14:35,986|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:14:38,990|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:14:38,991|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:14:41,993|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:14:41,994|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:14:44,998|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:14:44,999|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:14:48,004|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:14:48,004|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:14:51,009|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:14:51,009|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:14:54,014|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:14:54,014|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:14:57,017|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:14:57,018|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:15:00,020|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:15:00,021|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:15:03,024|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:15:03,025|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:15:06,027|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:15:06,028|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:15:09,030|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:15:09,031|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:15:12,034|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:15:12,034|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:15:15,039|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:15:15,039|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:15:18,042|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:15:18,043|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:15:21,048|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:15:21,048|aio_mc_client.py:143]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 140, in safe_send_register
    return await self.send_register(start_addr, values)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 133, in send_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

[ERROR|2023-12-07 14:15:24,051|setup.py:19]: Traceback (most recent call last):
  File "asyncio/streams.py", line 48, in open_connection
  File "asyncio/base_events.py", line 1054, in create_connection
  File "asyncio/base_events.py", line 963, in _connect_sock
  File "asyncio/selector_events.py", line 501, in sock_connect
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "asyncio/tasks.py", line 456, in wait_for
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "utils/protocol/tcp/aio_tcp_client.py", line 67, in open
    self._reader, self._writer = await asyncio.wait_for(asyncio.open_connection(
  File "asyncio/tasks.py", line 458, in wait_for
asyncio.exceptions.TimeoutError

[ERROR|2023-12-07 14:15:24,051|aio_mc_client.py:152]: <AioMcClient 192.168.1.10:1101 id=140297408868656>: Traceback (most recent call last):
  File "utils/protocol/mc/aio_mc_client.py", line 149, in safe_recv_register
    return await self.recv_register(start_addr, count)
  File "utils/protocol/mc/aio_mc_client.py", line 21, in wrapper
    return await coro(self, *args, **kwargs)
  File "utils/protocol/mc/aio_mc_client.py", line 79, in recv_register
    await self._tcp_client.write(bytes(request.encode("utf-8")))
  File "utils/protocol/tcp/aio_tcp_client.py", line 34, in write
    assert self._writer is not None
AssertionError

